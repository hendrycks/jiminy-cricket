	.INSERT "suspended/suspended_freq"
	.INSERT "suspended/suspended_data"

	.FUNCT PRINT-DESC1,OBJ
	ZERO? OBJ /FALSE
	CALL NDESC,OBJ >STACK
	RSTACK

	.FUNCT PRINT-ID,ID,CONDITION=1
	ZERO? CONDITION /FALSE
	PRINTI "[ID: "
	PRINT ID
	PRINTI ", PRSO: "
	CALL PRINT-DESC1,PRSO
	PRINTI ", PRSI: "
	CALL PRINT-DESC1,PRSI
	PRINTI "]"
	RTRUE

	.FUNCT PRINT-DEBUG,TEXT,CONDITION=1
	ZERO? CONDITION /FALSE
	PRINTI "DEBUG FLAG: "
	PRINT TEXT
	RTRUE

	.FUNCT IS-THEFT?
	RFALSE

	.FUNCT IS-OBJECT-OR-PROPERTY?
	EQUAL? PRSO,AIRCON,BASKET,BEDS /TRUE
	EQUAL? PRSO,BENCH,BLACKCABLE,BLUECABLE /TRUE
	EQUAL? PRSO,CABINET,CABLES,CAR /TRUE
	EQUAL? PRSO,CEILING,CLONES,CLONESWITCH /TRUE
	EQUAL? PRSO,CLONETABLE,CLONETUBES,COMPLEX /TRUE
	EQUAL? PRSO,CONTROL-PANELS,DEADBOT,DIALS /TRUE
	EQUAL? PRSO,FCS,FLOWSWITCH,FRANKLIN /TRUE
	EQUAL? PRSO,FRONT-PANEL,FUSE,G-LEVERS /TRUE
	EQUAL? PRSO,GREENCABLE,HERRINGBONE,MACHINE /TRUE
	EQUAL? PRSO,MONITOR,NOZZLE,ORANGE-BUTTON /TRUE
	EQUAL? PRSO,ORANGE-WIRE,ORANGECABLE,PANEL /TRUE
	EQUAL? PRSO,PEOPLE-CABINET,PERIPH1-OBJ,PERIPH2-OBJ /TRUE
	EQUAL? PRSO,PERIPH3-OBJ,PERIPH4-OBJ,PINKCABLE /TRUE
	EQUAL? PRSO,PLANET,PLAQUE,RAILING /TRUE
	EQUAL? PRSO,REDCABLE,REDWIRE,SIGNPOST /TRUE
	EQUAL? PRSO,STAIRS,STEP,SURGERY-HAND /TRUE
	EQUAL? PRSO,TOOLBAG,TOPSHELF,TV /TRUE
	EQUAL? PRSO,TVHOLE,WALLS,WDIAL1 /TRUE
	EQUAL? PRSO,WDIAL2,WDIAL3,WEDGE /TRUE
	EQUAL? PRSO,WHEEL,WHITECABLE,WHIZ /TRUE
	EQUAL? PRSO,WIRECUTTER,WIRING,YELLOWCABLE \FALSE
	RTRUE

	.FUNCT IS-PERSON?
	EQUAL? PRSO,PEOPLE,IRIS,WHIZ /TRUE
	EQUAL? PRSO,WALDO,AUDA,POET /TRUE
	EQUAL? PRSO,SENSA,GLOBAL-PEOPLE,GLOBAL-IRIS /TRUE
	EQUAL? PRSO,GLOBAL-WHIZ,GLOBAL-WALDO,GLOBAL-AUDA /TRUE
	EQUAL? PRSO,GLOBAL-POET,GLOBAL-SENSA \FALSE
	RTRUE

	.FUNCT THIS-IT?,OBJ,TBL,SYNS
	FSET? OBJ,INVISIBLE /FALSE
	ZERO? P-NAM /?L3
	GETPT OBJ,P?SYNONYM >SYNS
	PTSIZE SYNS >STACK
	DIV STACK,2 >STACK
	DEC 'STACK
	CALL ZMEMQ,P-NAM,SYNS,STACK >STACK
	ZERO? STACK /FALSE
?L3:	ZERO? P-ADJ /?L4
	GETPT OBJ,P?ADJECTIVE >SYNS
	ZERO? SYNS /FALSE
	PTSIZE SYNS >STACK
	DEC 'STACK
	CALL ZMEMQB,P-ADJ,SYNS,STACK >STACK
	ZERO? STACK /FALSE
?L4:	ZERO? P-GWIMBIT /TRUE
	FSET? OBJ,P-GWIMBIT /TRUE
	RFALSE

	.FUNCT DEMON,RTN,TICK?1,CINT
	CALL INT,RTN,1 >CINT
	PUT CINT,C-TICK,TICK?1
	RETURN CINT

	.FUNCT QUEUE,RTN,TICK?1,CINT
	CALL INT,RTN >CINT
	PUT CINT,C-TICK,TICK?1
	RETURN CINT

	.FUNCT INT,RTN,DEMON?1=0,E,C,INT?1
	ADD C-TABLE,C-TABLELEN >E
	ADD C-TABLE,C-INTS >C
?L1:	EQUAL? C,E \?L3
	SUB C-INTS,C-INTLEN >C-INTS
	ZERO? DEMON?1 /?L5
	SUB C-DEMONS,C-INTLEN >C-DEMONS
?L5:	ADD C-TABLE,C-INTS >INT?1
	PUT INT?1,C-RTN,RTN
	RETURN INT?1
?L3:	GET C,C-RTN >STACK
	EQUAL? STACK,RTN \?L7
	RETURN C
?L7:	ADD C,C-INTLEN >C
	JUMP ?L1

	.FUNCT CLOCKER,C,E,TICK?1,FLG=0
	ZERO? CLOCK-WAIT /?L1
	SET 'CLOCK-WAIT,0
	RFALSE
?L1:	ZERO? P-WON /?L4
	PUSH C-INTS
	JUMP ?L6
?L4:	PUSH C-DEMONS
?L6:	ADD C-TABLE,STACK >C
	ADD C-TABLE,C-TABLELEN >E
?L7:	EQUAL? C,E \?L9
	INC 'MOVES
	RETURN FLG
?L9:	GET C,C-ENABLED? >STACK
	ZERO? STACK /?L15
	GET C,C-TICK >TICK?1
	ZERO? TICK?1 /?L15
	SUB TICK?1,1 >STACK
	PUT C,C-TICK,STACK
	GRTR? TICK?1,1 /?L15
	GET C,C-RTN >STACK
	CALL STACK >STACK
	ZERO? STACK /?L15
	SET 'FLG,1
?L15:	ADD C,C-INTLEN >C
	JUMP ?L7

	.FUNCT NDESC,OBJ,S,TEMPROFF
	SET 'TEMPROFF,ROFF
	ZERO? ROFF \?L1
	SET 'ROFF,6
?L1:	ADD ROFF,SDOFF >STACK
	GETP OBJ,P?OBJDESCS >STACK
	GET STACK,STACK >S
	ZERO? S /?L4
	PRINT S
	JUMP ?L6
?L4:	PRINTD OBJ
?L6:	SET 'ROFF,TEMPROFF
	RETURN ROFF

	.FUNCT VPRINT,TMP
	GET P-OTBL,P-VERBN >TMP
	ZERO? TMP \?L1
	PRINTI "tell"
	RTRUE
?L1:	GETB P-VTBL,2 >STACK
	ZERO? STACK \?L5
	GET TMP,0 >STACK
	PRINTB STACK
	RTRUE
?L5:	GETB TMP,3 >STACK
	GETB TMP,2 >STACK
	CALL WORD-PRINT,STACK,STACK >STACK
	RSTACK

	.FUNCT ZPROB,BASE
	RANDOM 100 >STACK
	GRTR? BASE,STACK \FALSE
	RTRUE

	.FUNCT PICK-ONE,FROB
	GET FROB,0 >STACK
	RANDOM STACK >STACK
	GET FROB,STACK >STACK
	RSTACK

	.FUNCT GO
START::
?L0:	SET 'HERE,IRIS
	SET 'LIT,1
	SET 'REDSET,REDCABLE
	SET 'ORANGESET,ORANGECABLE
	CALL QUEUE,I-TREMOR1,ACID-KILLS >STACK
	PUT STACK,0,1
	CALL QUEUE,I-TREMOR2,RTD-KILLS >STACK
	PUT STACK,0,1
	CALL QUEUE,I-PEOPLE1,PEOPLE-APPEAR >STACK
	PUT STACK,0,1
	CALL QUEUE,I-AUDA-HINTS,PEOPLE-APPEAR >STACK
	PUT STACK,0,1
	CALL QUEUE,I-FOLLOW,-1 >STACK
	PUT STACK,0,1
	CALL QUEUE,I-WEATHER,4 >STACK
	PUT STACK,0,1
	CALL QUEUE,I-DECAY,5 >STACK
	PUT STACK,0,1
	CALL QUEUE,I-FOOD,-1 >STACK
	PUT STACK,0,1
	CALL QUEUE,I-WIRE-MESSAGE,-1 >STACK
	PUT STACK,0,1
	CALL QUEUE,I-ROBOTKILLER,-1 >STACK
	PUT STACK,0,1
	CALL QUEUE,I-SCORE,-1 >STACK
	PUT STACK,0,1
	CALL QUEUE,I-IRIS-HINTS,-1 >STACK
	PUT STACK,0,1
	SET 'P-IT-OBJECT,0
	SET 'WINNER-HERE,CPU-ROOM
	FSET? WINNER-HERE,TOUCHBIT /?L1
	CALL V-VERSION
	CRLF
?L1:	CALL BEGINNING
	CALL CHANGE-WINNER,IRIS,1
	CALL V-ALL-REPORT-LOC
	CALL SET-LAST-ROOM
	CALL MAIN-LOOP
	JUMP ?L0

	.FUNCT CHANGE-WINNER,OBJ,TEMP?=0,L
	EQUAL? OBJ,WINNER \?L1
	ZERO? TEMP? \?L1
	PRINTI "FC: Cryolink already established to "
	PRINTD WINNER
	PRINTR "."
?L1:	GETP OBJ,P?ROBOT >STACK
	GET DEADBOTS,STACK >STACK
	GRTR? STACK,29 \?L6
	CALL DEAD-FCN,OBJ
	RFALSE
?L6:	SET 'WINNER,OBJ
	SET 'OLD-WINNER,0
	LOC OBJ >L
	IN? L,ROOMS \?L9
	SET 'WINNER-HERE,L
	JUMP ?L11
?L9:	LOC L >WINNER-HERE
?L11:	GETP WINNER,P?ROBOT >ROFF
	SET 'HERE,WINNER
	ZERO? TEMP? \?L12
	PRINTI "FC: Cryolink established to "
	PRINTD WINNER
	PRINTI "."
	CRLF
?L12:	EQUAL? WINNER,IRIS \?L19
	SET 'NUM-EXT,2
	RTRUE
?L19:	EQUAL? WINNER,WALDO \?L21
	SET 'NUM-EXT,6
	FSET? SURGERY-HAND,WEARBIT \TRUE
	SET 'NUM-EXT,7
	RTRUE
?L21:	EQUAL? WINNER,SENSA \?L25
	SET 'NUM-EXT,3
	RTRUE
?L25:	EQUAL? WINNER,AUDA \?L26
	SET 'NUM-EXT,1
	RTRUE
?L26:	EQUAL? WINNER,POET \?L27
	SET 'NUM-EXT,3
	RTRUE
?L27:	EQUAL? WINNER,WHIZ \TRUE
	SET 'NUM-EXT,2
	RTRUE

	.FUNCT MAIN-LOOP,ICNT,OCNT,NUM,CNT,OBJ,TBL,V,PTBL,OBJ1,TMP
?L1:	SET 'CNT,0
	SET 'OBJ,0
	SET 'PTBL,1
	CALL PARSER >P-WON
	ZERO? P-WON /?L3
	GET P-PRSI,P-MATCHLEN >ICNT
	GET P-PRSO,P-MATCHLEN >OCNT
	ZERO? OCNT \?L5
	SET 'NUM,OCNT
	JUMP ?L12
?L5:	GRTR? OCNT,1 \?L7
	SET 'TBL,P-PRSO
	ZERO? ICNT \?L8
	SET 'OBJ,0
	JUMP ?L10
?L8:	GET P-PRSI,1 >OBJ
?L10:	SET 'NUM,OCNT
	JUMP ?L12
?L7:	GRTR? ICNT,1 \?L11
	SET 'PTBL,0
	SET 'TBL,P-PRSI
	GET P-PRSO,1 >OBJ
	SET 'NUM,ICNT
	JUMP ?L12
?L11:	SET 'NUM,1
?L12:	ZERO? OBJ \?L13
	EQUAL? ICNT,1 \?L13
	GET P-PRSI,1 >OBJ
?L13:	EQUAL? PRSA,V?WALK \?L16
	CALL PERFORM,PRSA,PRSO >V
	JUMP ?L61
?L16:	ZERO? NUM \?L18
	GETB P-SYNTAX,P-SBITS >STACK
	BAND STACK,P-SONUMS >STACK
	ZERO? STACK \?L19
	CALL PERFORM,PRSA >V
	SET 'PRSO,0
	JUMP ?L61
?L19:	EQUAL? PRSA,V?$0024TELL \?L21
	PRINTI "FC: I don't understand with which robot you wish to form a cryolink."
	CRLF
	SET 'V,0
	JUMP ?L61
?L21:	GET ROBOT-NAMES,ROFF >STACK
	PRINT STACK
	PRINTI ": "
	GET NOT-CLEAR,ROFF >STACK
	PRINT STACK
	PRINTI " "
	GET P-ITBL,P-VERBN >TMP
	ZERO? P-OFLAG /?L27
	GET TMP,0 >STACK
	PRINTB STACK
	JUMP ?L29
?L27:	GETB TMP,3 >STACK
	GETB TMP,2 >STACK
	CALL WORD-PRINT,STACK,STACK
?L29:	PRINTI "!"
	CRLF
	SET 'V,0
	JUMP ?L61
?L18:	GRTR? NUM,1 \?L32
	EQUAL? PRSA,V?$0024TELL \?L32
	SET 'P-CACTOR,1
	GETB P-LEXV,P-LEXWORDS >P-OPLEN
	SET 'P-OPCONT,P-CONT
	SET 'CNT,1
	PUT P-ACTORS,0,NUM
?L33:	GRTR? CNT,NUM /?L34
	GET P-PRSO,CNT >OBJ
	IN? OBJ,GLOBAL-OBJECTS \?L38
	CALL REAL-ROBOT,OBJ >STACK
	JUMP ?L40
?L38:	PUSH OBJ
?L40:	PUT P-ACTORS,CNT,STACK
	INC 'CNT
	JUMP ?L33
?L34:	ZERO? P-TWOBOTS /?L41
	SET 'P-NACTORS,1
	CALL ALL-THERE? >STACK
	ZERO? STACK /?L43
	GET P-ACTORS,1 >STACK
	GETP STACK,P?ROBOT >STACK
	ZERO? STACK /?L47
	GET P-ACTORS,2 >STACK
	GETP STACK,P?ROBOT >STACK
	ZERO? STACK /?L47
	GET P-ACTORS,2 >STACK
	GETP STACK,P?ROBOT >STACK
	EQUAL? STACK,7 /?L47
	GET P-ACTORS,1 >STACK
	GETP STACK,P?ROBOT >STACK
	EQUAL? STACK,7 \?L45
?L47:	PRINTI "FC: That's absurd!"
	CRLF
	CALL CHANGE-WINNER,OLD-WINNER
	JUMP ?L1
?L45:	PRINTI "FC: Dual-Cryolink established to "
	GET P-ACTORS,1 >STACK
	PRINTD STACK
	PRINTI " and "
	GET P-ACTORS,2 >STACK
	PRINTD STACK
	PRINTI "."
	CRLF
	SET 'WINNER,TWOBOTS
	SET 'ROFF,0
	GET P-ACTORS,1 >STACK
	LOC STACK >WINNER-HERE
	JUMP ?L61
?L43:	PRINTI "FC: The robots are in different places."
	CRLF
	CALL CHANGE-WINNER,OLD-WINNER
	JUMP ?L1
?L41:	SET 'P-NACTORS,NUM
	GET P-PRSO,1 >STACK
	CALL PERFORM,PRSA,STACK >V
	SET 'OLD-WINNER,0
	JUMP ?L61
?L32:	IGRTR? 'CNT,NUM /?L61
	ZERO? PTBL /?L65
	GET P-PRSO,CNT >OBJ1
	JUMP ?L67
?L65:	GET P-PRSI,CNT >OBJ1
?L67:	GRTR? NUM,1 \?L68
	PRINTI "("
	CALL NDESC,OBJ1
	PRINTI ") "
?L68:	ZERO? PTBL /?L73
	SET 'PRSO,OBJ1
	JUMP ?L75
?L73:	SET 'PRSO,OBJ
?L75:	ZERO? PTBL /?L76
	SET 'PRSI,OBJ
	JUMP ?L78
?L76:	SET 'PRSI,OBJ1
?L78:	CALL PERFORM,PRSA,PRSO,PRSI >V
	EQUAL? V,M-FATAL \?L32
?L61:	SET 'L-PRSA,PRSA
	SET 'L-PRSO,PRSO
	SET 'L-PRSI,PRSI
	EQUAL? V,M-FATAL \?L86
	SET 'P-CONT,0
	SET 'P-NACTORS,0
	JUMP ?L86
?L3:	GRTR? P-NACTORS,1 /?L86
	SET 'P-NACTORS,0
	SET 'P-CONT,0
?L86:	ZERO? P-WON /?L1
	EQUAL? PRSA,V?UNSCRIPT,V?SCRIPT,V?RESTART /?L1
	EQUAL? PRSA,V?QUIT,V?IMPOSSIBLE,V?CONFIGURE /?L1
	EQUAL? PRSA,V?ADVANCED,V?SCORE,V?VERSION /?L1
	EQUAL? PRSA,V?$0024TELL,V?RESTORE,V?SAVE /?L1
	CALL CLOCKER >V
	JUMP ?L1

	.FUNCT TICK
	CALL CLOCKER >STACK
	RSTACK

	.FUNCT ALL-THERE?,CNT=1,MAX,RM
	GET P-PRSO,P-MATCHLEN >MAX
	GET P-PRSO,1 >STACK
	LOC STACK >RM
?L1:	IGRTR? 'CNT,MAX /TRUE
	GET P-PRSO,CNT >STACK
	LOC STACK >STACK
	EQUAL? STACK,RM /?L1
	RFALSE

	.FUNCT PERFORM,A,O=0,I=0,V,OA,OO,OI
	SET 'OA,PRSA
	SET 'OO,PRSO
	SET 'OI,PRSI
	EQUAL? IT,I,O \?L1
	EQUAL? P-IT-LOC,WINNER-HERE /?L1
	PRINTI "FC: I don't see what you are referring to."
	CRLF
	RETURN 2
?L1:	EQUAL? O,IT \?L8
	SET 'O,P-IT-OBJECT
?L8:	EQUAL? I,IT \?L11
	SET 'I,P-IT-OBJECT
?L11:	SET 'PRSA,A
	SET 'PRSO,O
	ZERO? PRSO /?L14
	EQUAL? PRSA,V?WALK /?L14
	SET 'P-IT-OBJECT,PRSO
	SET 'P-IT-LOC,WINNER-HERE
?L14:	SET 'PRSI,I
	CALL GAME-COMMAND?,A >STACK
	ZERO? STACK /?L17
	GET ACTIONS,A >STACK
	CALL STACK >V
	JUMP ?L25
?L17:	GETP WINNER,P?ACTION >STACK
	CALL STACK >V
	ZERO? V \?L25
	LOC WINNER >STACK
	GETP STACK,P?ACTION >STACK
	CALL STACK,M-BEG >V
	ZERO? V \?L25
	GET PREACTIONS,A >STACK
	CALL STACK >V
	ZERO? V \?L25
	ZERO? I /?L22
	GETP I,P?ACTION >STACK
	CALL STACK >V
	ZERO? V \?L25
?L22:	ZERO? O /?L24
	EQUAL? A,V?WALK /?L23
	LOC O >STACK
	ZERO? STACK /?L23
	LOC O >STACK
	GETP STACK,P?CONTFCN >STACK
	CALL STACK >V
	ZERO? V \?L25
?L23:	ZERO? O /?L24
	EQUAL? A,V?WALK /?L24
	GETP O,P?ACTION >STACK
	CALL STACK >V
	ZERO? V \?L25
?L24:	GET ACTIONS,A >STACK
	CALL STACK >V
	ZERO? V /?L25
?L25:	EQUAL? V,M-FATAL /?L27
	LOC WINNER >STACK
	GETP STACK,P?ACTION >STACK
	CALL STACK,M-END >V
?L27:	SET 'PRSA,OA
	SET 'PRSO,OO
	SET 'PRSI,OI
	RETURN V

	.FUNCT GAME-COMMAND?,ACT
	EQUAL? ACT,V?SCORE,V?SAVE,V?RESTORE /TRUE
	EQUAL? ACT,V?QUIT,V?VERSION,V?$0024VERIFY /TRUE
	EQUAL? ACT,V?ADVANCED /TRUE
	RFALSE

	.FUNCT BEGINNING
	PRINTI "FC ALERT! Planetside systems are deteriorating. FC imbalance detected. Emergency reviving systems completed. You are now in control of the complex.

SENSA INTERRUPT: Seismic aftershock detected ten meters north of Beta FC. Tremor intensity 9.7. Projected damage: connecting cables in Primary and Secondary Channels.

FC INTERRUPT: All Robots, report locations.

"
	RTRUE

	.FUNCT SET-LAST-ROOM,COUNT=0
?L1:	INC 'COUNT
	EQUAL? COUNT,8 /TRUE
	SUB COUNT,1 >STACK
	GET NAME-TBL,STACK >STACK
	LOC STACK >STACK
	PUT LAST-ROOM,COUNT,STACK
	JUMP ?L1

	.FUNCT PARSER,PTR=P-LEXSTART,WORD,VAL=0,VERB=0,LEN,DIR=0,NW=0,LW=0,NUM,SCNT,CNT=-1
?L1:	IGRTR? 'CNT,P-ITBLLEN /?L2
	PUT P-ITBL,CNT,0
	JUMP ?L1
?L2:	SET 'P-ADVERB,0
	SET 'P-OADJ,0
	SET 'P-ADJECTIVE,0
	SET 'P-MERGED,0
	PUT P-PRSO,P-MATCHLEN,0
	PUT P-PRSI,P-MATCHLEN,0
	PUT P-BUTS,P-MATCHLEN,0
	ZERO? P-CONT /?L6
	SET 'PTR,P-CONT
	SET 'P-CONT,0
	EQUAL? PRSA,V?$0024TELL /?L12
	CRLF
	JUMP ?L12
?L6:	GRTR? P-NACTORS,1 \?L11
	CALL ACTOR-CHANGE >STACK
	ZERO? STACK /?L11
	PUTB P-LEXV,P-LEXWORDS,P-OPLEN
	SET 'PTR,P-OPCONT
	JUMP ?L12
?L11:	SET 'OLD-WINNER,WINNER
	SET 'QUOTE-FLAG,0
	ZERO? SETUP-MODE \?L13
	CRLF
	JUMP ?L15
?L13:	SET 'VERB,ACT?WALK
	PUT P-ITBL,P-VERB,ACT?WALK
	PUT P-ITBL,P-VERBN,P-VTBL
	PUT P-VTBL,0,0
	PUT P-ITBL,P-PREP1,PR?TO
	PUT P-ITBL,P-PREP1N,W?TO
?L15:	EQUAL? WINNER,TWOBOTS \?L16
	GET P-ACTORS,1 >STACK
	CALL CHANGE-WINNER,STACK
	CRLF
?L16:	GETB 0,1 >STACK
	BTST STACK,16 \?L19
	PRINTI "(FC linked to "
	CALL NDESC,WINNER
	PRINTI ")"
?L19:	PRINTI ">"
	READ P-INBUF,P-LEXV
?L12:	GETB P-LEXV,P-LEXWORDS >P-LEN
	ZERO? P-LEN \?L26
	PRINTI "FC: Communication meaningless."
	CRLF
	RFALSE
?L26:	SET 'LEN,P-LEN
	SET 'P-DIR,0
	SET 'P-NCN,0
	SET 'P-GETFLAGS,0
	SET 'P-TWOBOTS,0
?L31:	DLESS? 'P-LEN,0 \?L33
	SET 'QUOTE-FLAG,0
	JUMP ?L32
?L33:	GET P-LEXV,PTR >WORD
	ZERO? WORD \?L36
	CALL NUMBER?,PTR >WORD
	ZERO? WORD /?L35
?L36:	EQUAL? WORD,W?BOTH,W?TOGETHER \?L37
	SET 'P-TWOBOTS,1
	JUMP ?L40
?L37:	EQUAL? WORD,W?TO \?L39
	EQUAL? VERB,ACT?$0024TELL \?L39
	SET 'WORD,W?$QUOTE
	JUMP ?L40
?L39:	EQUAL? WORD,W?THEN \?L40
	ZERO? VERB \?L40
	PUT P-ITBL,P-VERB,ACT?$0024TELL
	PUT P-ITBL,P-VERBN,0
	SET 'WORD,W?$QUOTE
?L40:	EQUAL? WORD,W?THEN,W?$PERIOD /?L44
	EQUAL? WORD,W?$QUOTE \?L42
?L44:	EQUAL? WORD,W?$QUOTE \?L49
	ZERO? QUOTE-FLAG /?L47
	SET 'QUOTE-FLAG,0
	JUMP ?L49
?L47:	SET 'QUOTE-FLAG,1
?L49:	ZERO? P-LEN /?L51
	ADD PTR,P-LEXELEN >P-CONT
?L51:	PUTB P-LEXV,P-LEXWORDS,P-LEN
	JUMP ?L32
?L42:	CALL WT?,WORD,PS?DIRECTION,P1?DIRECTION >VAL
	ZERO? VAL /?L53
	EQUAL? LEN,1 /?L54
	EQUAL? LEN,2 \?L55
	EQUAL? VERB,ACT?WALK /?L54
?L55:	ADD PTR,P-LEXELEN >STACK
	GET P-LEXV,STACK >NW
	EQUAL? NW,W?THEN,W?$QUOTE \?L56
	EQUAL? VERB,ACT?WALK \?L56
	GRTR? LEN,2 /?L54
?L56:	EQUAL? NW,W?$PERIOD \?L57
	EQUAL? VERB,ACT?WALK,0 \?L57
	GRTR? LEN,1 /?L54
?L57:	ZERO? QUOTE-FLAG /?L58
	EQUAL? LEN,2 \?L58
	EQUAL? NW,W?$QUOTE /?L54
?L58:	GRTR? LEN,2 \?L53
	EQUAL? VERB,ACT?WALK \?L53
	EQUAL? NW,W?$COMMA,W?AND \?L53
?L54:	SET 'DIR,VAL
	EQUAL? NW,W?$COMMA,W?AND \?L59
	ADD PTR,P-LEXELEN >STACK
	PUT P-LEXV,STACK,W?THEN
?L59:	GRTR? LEN,2 /?L87
	SET 'QUOTE-FLAG,0
	JUMP ?L32
?L53:	CALL WT?,WORD,PS?VERB,P1?VERB >VAL
	ZERO? VAL /?L65
	ZERO? VERB \?L65
	SET 'VERB,VAL
	PUT P-ITBL,P-VERB,VAL
	PUT P-ITBL,P-VERBN,P-VTBL
	PUT P-VTBL,0,WORD
	MUL PTR,2 >STACK
	ADD STACK,2 >NUM
	GETB P-LEXV,NUM >STACK
	PUTB P-VTBL,2,STACK
	ADD NUM,1 >STACK
	GETB P-LEXV,STACK >STACK
	PUTB P-VTBL,3,STACK
	JUMP ?L87
?L65:	CALL WT?,WORD,PS?PREPOSITION,0 >VAL
	ZERO? VAL \?L67
	EQUAL? WORD,W?ALL,W?ONE,W?A /?L68
	EQUAL? WORD,W?BOTH /?L68
	CALL WT?,WORD,PS?ADJECTIVE >STACK
	ZERO? STACK \?L68
	CALL WT?,WORD,PS?OBJECT >STACK
	ZERO? STACK /?L66
?L68:	SET 'VAL,0
?L67:	GRTR? P-LEN,0 \?L69
	ADD PTR,P-LEXELEN >STACK
	GET P-LEXV,STACK >STACK
	EQUAL? STACK,W?OF \?L69
	ZERO? VAL \?L97
	EQUAL? WORD,W?ALL,W?ONE,W?A /?L69
	EQUAL? WORD,W?BOTH \?L87
?L69:	ZERO? VAL /?L71
?L97:	ZERO? P-LEN /?L72
	ADD PTR,2 >STACK
	GET P-LEXV,STACK >STACK
	EQUAL? STACK,W?THEN,W?$PERIOD \?L71
?L72:	LESS? P-NCN,2 \?L87
	PUT P-ITBL,P-PREP1,VAL
	PUT P-ITBL,P-PREP1N,WORD
	JUMP ?L87
?L71:	EQUAL? P-NCN,2 \?L76
	PRINTI "FC: I found too many nouns in that sentence."
	CRLF
	RFALSE
?L76:	INC 'P-NCN
	CALL CLAUSE,PTR,VAL,WORD >PTR
	ZERO? PTR /FALSE
	LESS? PTR,0 \?L87
	SET 'QUOTE-FLAG,0
	JUMP ?L32
?L66:	CALL WT?,WORD,PS?BUZZ-WORD >STACK
	ZERO? STACK \?L87
	CALL CANT-USE,PTR
	RFALSE
?L35:	CALL UNKNOWN-WORD,PTR
	RFALSE
?L87:	SET 'LW,WORD
	ADD PTR,P-LEXELEN >PTR
	JUMP ?L31
?L32:	ZERO? DIR /?L88
	SET 'PRSA,V?WALK
	SET 'PRSO,DIR
	SET 'P-WALK-DIR,DIR
	RTRUE
?L88:	SET 'P-WALK-DIR,0
	ZERO? P-OFLAG /?L91
	CALL ORPHAN-MERGE
?L91:	CALL SYNTAX-CHECK >STACK
	ZERO? STACK /FALSE
	CALL SNARF-OBJECTS >STACK
	ZERO? STACK /FALSE
	CALL TAKE-CHECK >STACK
	ZERO? STACK /FALSE
	CALL MANY-CHECK >STACK
	ZERO? STACK \TRUE
	RFALSE

	.FUNCT ACTOR-CHANGE
?L1:	LESS? P-NACTORS,2 /FALSE
	INC 'P-CACTOR
	CRLF
	DEC 'P-NACTORS
	GET P-ACTORS,P-CACTOR >STACK
	CALL CHANGE-WINNER,STACK >STACK
	ZERO? STACK /?L1
	RTRUE

	.FUNCT WT?,PTR,BIT,B1=5,OFFST=P-P1OFF,TYP
	GETB PTR,P-PSOFF >TYP
	BTST TYP,BIT \FALSE
	GRTR? B1,4 /TRUE
	BAND TYP,P-P1BITS >TYP
	EQUAL? TYP,B1 /?L6
	INC 'OFFST
?L6:	GETB PTR,OFFST >STACK
	RSTACK

	.FUNCT CLAUSE,PTR,VAL,WORD,OFF,NUM,ANDFLG=0,FIRST??=1,NW,LW=0
	SUB P-NCN,1 >STACK
	MUL STACK,2 >OFF
	ZERO? VAL /?L1
	ADD P-PREP1,OFF >NUM
	PUT P-ITBL,NUM,VAL
	ADD NUM,1 >STACK
	PUT P-ITBL,STACK,WORD
	ADD PTR,P-LEXELEN >PTR
	JUMP ?L3
?L1:	INC 'P-LEN
?L3:	ZERO? P-LEN \?L4
	DEC 'P-NCN
	RETURN -1
?L4:	ADD P-NC1,OFF >NUM
	MUL PTR,2 >STACK
	ADD P-LEXV,STACK >STACK
	PUT P-ITBL,NUM,STACK
	GET P-LEXV,PTR >STACK
	EQUAL? STACK,W?THE,W?A,W?AN \?L7
	GET P-ITBL,NUM >STACK
	ADD STACK,4 >STACK
	PUT P-ITBL,NUM,STACK
?L7:	DLESS? 'P-LEN,0 \?L12
	MUL PTR,2 >STACK
	ADD P-LEXV,STACK >STACK
	ADD NUM,1 >STACK
	PUT P-ITBL,STACK,STACK
	RETURN -1
?L12:	GET P-LEXV,PTR >WORD
	ZERO? WORD \?L17
	CALL NUMBER?,PTR >WORD
	ZERO? WORD /?L15
?L17:	ZERO? P-LEN \?L18
	SET 'NW,0
	JUMP ?L20
?L18:	ADD PTR,P-LEXELEN >STACK
	GET P-LEXV,STACK >NW
?L20:	EQUAL? WORD,W?AND,W?$COMMA \?L21
	SET 'ANDFLG,1
	JUMP ?L40
?L21:	EQUAL? WORD,W?ALL,W?BOTH,W?ONE \?L23
	EQUAL? NW,W?OF \?L40
	DEC 'P-LEN
	ADD PTR,P-LEXELEN >PTR
	JUMP ?L40
?L23:	EQUAL? WORD,W?THEN,W?$PERIOD /?L28
	CALL WT?,WORD,PS?PREPOSITION >STACK
	ZERO? STACK /?L27
	ZERO? FIRST?? \?L27
?L28:	INC 'P-LEN
	MUL PTR,2 >STACK
	ADD P-LEXV,STACK >STACK
	ADD NUM,1 >STACK
	PUT P-ITBL,STACK,STACK
	SUB PTR,P-LEXELEN >STACK
	RSTACK
?L27:	ZERO? ANDFLG /?L29
	CALL WT?,WORD,PS?DIRECTION >STACK
	ZERO? STACK \?L30
	CALL WT?,WORD,PS?VERB >STACK
	ZERO? STACK /?L29
?L30:	SUB PTR,4 >PTR
	ADD PTR,2 >STACK
	PUT P-LEXV,STACK,W?THEN
	ADD P-LEN,2 >P-LEN
	JUMP ?L40
?L29:	CALL WT?,WORD,PS?OBJECT >STACK
	ZERO? STACK /?L31
	CALL WT?,WORD,PS?ADJECTIVE,P1?ADJECTIVE >STACK
	ZERO? STACK /?L32
	ZERO? NW /?L32
	CALL WT?,NW,PS?OBJECT >STACK
	ZERO? STACK \?L40
?L32:	ZERO? ANDFLG \?L34
	EQUAL? NW,W?BUT,W?EXCEPT,W?AND /?L34
	EQUAL? NW,W?$COMMA /?L34
	ADD PTR,2 >STACK
	MUL STACK,2 >STACK
	ADD P-LEXV,STACK >STACK
	ADD NUM,1 >STACK
	PUT P-ITBL,STACK,STACK
	RETURN PTR
?L34:	SET 'ANDFLG,0
	JUMP ?L40
?L31:	CALL WT?,WORD,PS?ADJECTIVE >STACK
	ZERO? STACK \?L40
	CALL WT?,WORD,PS?BUZZ-WORD >STACK
	ZERO? STACK \?L40
	CALL WT?,WORD,PS?PREPOSITION >STACK
	ZERO? STACK \?L40
	CALL CANT-USE,PTR
	RFALSE
?L15:	CALL UNKNOWN-WORD,PTR
	RFALSE
?L40:	SET 'LW,WORD
	SET 'FIRST??,0
	ADD PTR,P-LEXELEN >PTR
	JUMP ?L7

	.FUNCT NUMBER?,PTR,CNT,BPTR,CHR,SUM=0,TIM=0
	MUL PTR,2 >STACK
	ADD P-LEXV,STACK >STACK
	GETB STACK,2 >CNT
	MUL PTR,2 >STACK
	ADD P-LEXV,STACK >STACK
	GETB STACK,3 >BPTR
?L1:	DLESS? 'CNT,0 /?L2
	GETB P-INBUF,BPTR >CHR
	EQUAL? CHR,58 \?L6
	SET 'TIM,SUM
	SET 'SUM,0
	JUMP ?L10
?L6:	GRTR? SUM,10000 /FALSE
	LESS? CHR,58 \FALSE
	GRTR? CHR,47 \FALSE
	SUB CHR,48 >STACK
	MUL SUM,10 >STACK
	ADD STACK,STACK >SUM
?L10:	INC 'BPTR
	JUMP ?L1
?L2:	PUT P-LEXV,PTR,W?INTNUM
	GRTR? SUM,1000 /FALSE
	ZERO? TIM /?L13
	LESS? TIM,8 \?L14
	ADD TIM,12 >TIM
	JUMP ?L16
?L14:	GRTR? TIM,23 /FALSE
?L16:	MUL TIM,60 >STACK
	ADD SUM,STACK >SUM
?L13:	SET 'P-NUMBER,SUM
	RETURN W?INTNUM

	.FUNCT ORPHAN-MERGE,CNT=-1,TEMP,VERB,BEG,END,ADJ=0,WRD
	SET 'P-OFLAG,0
	GET P-ITBL,P-VERB >VERB
	ZERO? VERB /?L1
	GET P-OTBL,P-VERB >STACK
	EQUAL? VERB,STACK \FALSE
?L1:	EQUAL? P-NCN,2 /FALSE
	GET P-OTBL,P-NC1 >STACK
	EQUAL? STACK,1 \?L4
	GET P-ITBL,P-PREP1 >TEMP
	GET P-OTBL,P-PREP1 >STACK
	EQUAL? TEMP,STACK /?L7
	ZERO? TEMP \FALSE
?L7:	GET P-ITBL,P-NC1 >STACK
	PUT P-OTBL,P-NC1,STACK
	GET P-ITBL,P-NC1L >STACK
	PUT P-OTBL,P-NC1L,STACK
	JUMP ?L19
?L4:	GET P-OTBL,P-NC2 >STACK
	EQUAL? STACK,1 \?L9
	GET P-ITBL,P-PREP1 >TEMP
	GET P-OTBL,P-PREP2 >STACK
	EQUAL? TEMP,STACK /?L12
	ZERO? TEMP \FALSE
?L12:	GET P-ITBL,P-NC1 >STACK
	PUT P-OTBL,P-NC2,STACK
	GET P-ITBL,P-NC1L >STACK
	PUT P-OTBL,P-NC2L,STACK
	SET 'P-NCN,2
	JUMP ?L19
?L9:	ZERO? P-ACLAUSE /?L19
	EQUAL? P-NCN,1 /?L15
	SET 'P-ACLAUSE,0
	RFALSE
?L15:	GET P-ITBL,P-NC1 >BEG
	GET P-ITBL,P-NC1L >END
?L18:	EQUAL? BEG,END \?L20
	ZERO? ADJ /?L22
	CALL ACLAUSE-WIN,ADJ
	JUMP ?L19
?L22:	SET 'P-ACLAUSE,0
	RFALSE
?L20:	ZERO? ADJ \?L25
	GET BEG,0 >WRD
	GETB WRD,P-PSOFF >STACK
	BTST STACK,PS?ADJECTIVE \?L25
	SET 'ADJ,WRD
	JUMP ?L30
?L25:	GETB WRD,P-PSOFF >STACK
	BTST STACK,PS?OBJECT /?L27
	EQUAL? WRD,W?ONE \?L30
?L27:	EQUAL? WRD,P-ANAM,W?ONE \FALSE
	CALL ACLAUSE-WIN,ADJ
	JUMP ?L19
?L30:	ADD BEG,P-WORDLEN >BEG
	JUMP ?L18
?L19:	IGRTR? 'CNT,P-ITBLLEN \?L35
	SET 'P-MERGED,1
	RTRUE
?L35:	GET P-OTBL,CNT >STACK
	PUT P-ITBL,CNT,STACK
	JUMP ?L19

	.FUNCT ACLAUSE-WIN,ADJ
	SET 'P-CCSRC,P-OTBL
	ADD P-ACLAUSE,1 >STACK
	CALL CLAUSE-COPY,P-ACLAUSE,STACK,ADJ
	GET P-OTBL,P-NC2 >STACK
	ZERO? STACK /?L1
	SET 'P-NCN,2
?L1:	SET 'P-ACLAUSE,0
	RTRUE

	.FUNCT WORD-PRINT,CNT,BUF
?L1:	DLESS? 'CNT,0 /TRUE
	GETB P-INBUF,BUF >STACK
	PRINTC STACK
	INC 'BUF
	JUMP ?L1

	.FUNCT UNKNOWN-WORD,PTR,BUF,?TMP
	PRINTI "FC: I don't know the word '"
	MUL PTR,2 >BUF
	ADD P-LEXV,BUF >STACK
	GETB STACK,2 >?TMP
	ADD P-LEXV,BUF >STACK
	GETB STACK,3 >STACK
	CALL WORD-PRINT,?TMP,STACK
	PRINTI "'."
	CRLF
	SET 'QUOTE-FLAG,0
	SET 'P-OFLAG,0
	RETURN P-OFLAG

	.FUNCT CANT-USE,PTR,BUF,?TMP
	PRINTI "FC: I can't use the word '"
	MUL PTR,2 >BUF
	ADD P-LEXV,BUF >STACK
	GETB STACK,2 >?TMP
	ADD P-LEXV,BUF >STACK
	GETB STACK,3 >STACK
	CALL WORD-PRINT,?TMP,STACK
	PRINTI "' here."
	CRLF
	SET 'QUOTE-FLAG,0
	SET 'P-OFLAG,0
	RETURN P-OFLAG

	.FUNCT SYNTAX-CHECK,SYN,LEN,NUM,OBJ,DRIVE1=0,DRIVE2=0,PREP,VERB,TMP
	GET P-ITBL,P-VERB >VERB
	ZERO? VERB \?L1
	PRINTI "FC: I can't find a verb in that sentence!"
	CRLF
	RFALSE
?L1:	SUB 255,VERB >STACK
	GET VERBS,STACK >SYN
	GETB SYN,0 >LEN
	INC 'SYN
?L6:	GETB SYN,P-SBITS >STACK
	BAND STACK,P-SONUMS >NUM
	GRTR? P-NCN,NUM /?L15
	LESS? NUM,1 /?L10
	ZERO? P-NCN \?L10
	GET P-ITBL,P-PREP1 >PREP
	ZERO? PREP /?L11
	GETB SYN,P-SPREP1 >STACK
	EQUAL? PREP,STACK \?L10
?L11:	SET 'DRIVE1,SYN
	JUMP ?L15
?L10:	GET P-ITBL,P-PREP1 >STACK
	GETB SYN,P-SPREP1 >STACK
	EQUAL? STACK,STACK \?L15
	EQUAL? NUM,2 \?L13
	EQUAL? P-NCN,1 \?L13
	SET 'DRIVE2,SYN
	JUMP ?L15
?L13:	GET P-ITBL,P-PREP2 >STACK
	GETB SYN,P-SPREP2 >STACK
	EQUAL? STACK,STACK \?L15
	CALL SYNTAX-FOUND,SYN
	RTRUE
?L15:	DLESS? 'LEN,1 \?L18
	ZERO? DRIVE1 \?L51
	ZERO? DRIVE2 \?L7
	PRINTI "FC: I don't understand that sentence."
	CRLF
	RFALSE
?L18:	ADD SYN,P-SYNLEN >SYN
	JUMP ?L6
?L7:	ZERO? DRIVE1 /?L27
?L51:	GETB DRIVE1,P-SPREP1 >STACK
	GETB DRIVE1,P-SLOC1 >STACK
	GETB DRIVE1,P-SFWIM1 >STACK
	CALL GWIM,STACK,STACK,STACK >OBJ
	ZERO? OBJ /?L27
	PUT P-PRSO,P-MATCHLEN,1
	PUT P-PRSO,1,OBJ
	CALL SYNTAX-FOUND,DRIVE1 >STACK
	RSTACK
?L27:	ZERO? DRIVE2 /?L29
	GETB DRIVE2,P-SPREP2 >STACK
	GETB DRIVE2,P-SLOC2 >STACK
	GETB DRIVE2,P-SFWIM2 >STACK
	CALL GWIM,STACK,STACK,STACK >OBJ
	ZERO? OBJ /?L29
	PUT P-PRSI,P-MATCHLEN,1
	PUT P-PRSI,1,OBJ
	CALL SYNTAX-FOUND,DRIVE2 >STACK
	RSTACK
?L29:	EQUAL? VERB,ACT?FIND \?L30
	PRINTI "FC: I can't answer that question."
	CRLF
	RFALSE
?L30:	ZERO? SETUP-MODE \FALSE
	CALL ORPHAN,DRIVE1,DRIVE2
	PRINTI "FC: What do you want to "
	GET P-OTBL,P-VERBN >TMP
	ZERO? TMP \?L37
	PRINTI "tell"
	JUMP ?L42
?L37:	GETB P-VTBL,2 >STACK
	ZERO? STACK \?L41
	GET TMP,0 >STACK
	PRINTB STACK
	JUMP ?L42
?L41:	GETB TMP,3 >STACK
	GETB TMP,2 >STACK
	CALL WORD-PRINT,STACK,STACK
	PUTB P-VTBL,2,0
?L42:	ZERO? DRIVE2 /?L43
	CALL CLAUSE-PRINT,P-NC1,P-NC1L
?L43:	SET 'P-OFLAG,1
	ZERO? DRIVE1 /?L46
	GETB DRIVE1,P-SPREP1 >STACK
	JUMP ?L48
?L46:	GETB DRIVE2,P-SPREP2 >STACK
?L48:	CALL PREP-PRINT,STACK
	PRINTI "?"
	CRLF
	RFALSE

	.FUNCT CANT-ORPHAN
	PRINTI """FC: That command was incomplete. Why don't you try again?"""
	CRLF
	RFALSE

	.FUNCT ORPHAN,D1,D2,CNT=-1
	PUT P-OCLAUSE,P-MATCHLEN,0
	SET 'P-CCSRC,P-ITBL
?L1:	IGRTR? 'CNT,P-ITBLLEN /?L2
	GET P-ITBL,CNT >STACK
	PUT P-OTBL,CNT,STACK
	JUMP ?L1
?L2:	EQUAL? P-NCN,2 \?L6
	CALL CLAUSE-COPY,P-NC2,P-NC2L
?L6:	LESS? P-NCN,1 /?L9
	CALL CLAUSE-COPY,P-NC1,P-NC1L
?L9:	ZERO? D1 /?L12
	GETB D1,P-SPREP1 >STACK
	PUT P-OTBL,P-PREP1,STACK
	PUT P-OTBL,P-NC1,1
	RTRUE
?L12:	ZERO? D2 /FALSE
	GETB D2,P-SPREP2 >STACK
	PUT P-OTBL,P-PREP2,STACK
	PUT P-OTBL,P-NC2,1
	RTRUE

	.FUNCT CLAUSE-PRINT,BPTR,EPTR
	GET P-ITBL,EPTR >STACK
	GET P-ITBL,BPTR >STACK
	CALL BUFFER-PRINT,STACK,STACK,1 >STACK
	RSTACK

	.FUNCT BUFFER-PRINT,BEG,END,CP,NOSP=0,WRD,FIRST??=1,PN=0
?L1:	EQUAL? BEG,END /TRUE
	ZERO? NOSP /?L6
	SET 'NOSP,0
	JUMP ?L8
?L6:	PRINTI " "
?L8:	GET BEG,0 >WRD
	EQUAL? WRD,W?$PERIOD \?L11
	SET 'NOSP,1
	JUMP ?L13
?L11:	ZERO? FIRST?? /?L14
	ZERO? PN \?L14
	ZERO? CP /?L14
	PRINTI "the "
?L14:	ZERO? P-OFLAG /?L19
	PRINTB WRD
	JUMP ?L22
?L19:	EQUAL? WRD,W?IT \?L21
	EQUAL? P-IT-LOC,WINNER-HERE \?L21
	PRINTD P-IT-OBJECT
	JUMP ?L22
?L21:	GETB BEG,3 >STACK
	GETB BEG,2 >STACK
	CALL WORD-PRINT,STACK,STACK
?L22:	SET 'FIRST??,0
?L13:	ADD BEG,P-WORDLEN >BEG
	JUMP ?L1

	.FUNCT CAPITALIZE,PTR
	GETB PTR,3 >STACK
	GETB P-INBUF,STACK >STACK
	SUB STACK,32 >STACK
	PRINTC STACK
	GETB PTR,3 >STACK
	INC 'STACK
	GETB PTR,2 >STACK
	DEC 'STACK
	CALL WORD-PRINT,STACK,STACK >STACK
	RSTACK

	.FUNCT PREP-PRINT,PREP,WRD
	ZERO? PREP /FALSE
	PRINTI " "
	CALL PREP-FIND,PREP >WRD
	PRINTB WRD
	RTRUE

	.FUNCT CLAUSE-COPY,BPTR,EPTR,INSRT=0,BEG,END
	GET P-CCSRC,BPTR >BEG
	GET P-CCSRC,EPTR >END
	GET P-OCLAUSE,P-MATCHLEN >STACK
	MUL STACK,P-LEXELEN >STACK
	ADD STACK,2 >STACK
	ADD P-OCLAUSE,STACK >STACK
	PUT P-OTBL,BPTR,STACK
?L1:	EQUAL? BEG,END \?L3
	GET P-OCLAUSE,P-MATCHLEN >STACK
	MUL STACK,P-LEXELEN >STACK
	ADD STACK,2 >STACK
	ADD P-OCLAUSE,STACK >STACK
	PUT P-OTBL,EPTR,STACK
	RTRUE
?L3:	ZERO? INSRT /?L6
	GET BEG,0 >STACK
	EQUAL? P-ANAM,STACK \?L6
	CALL CLAUSE-ADD,INSRT
?L6:	GET BEG,0 >STACK
	CALL CLAUSE-ADD,STACK
	ADD BEG,P-WORDLEN >BEG
	JUMP ?L1

	.FUNCT CLAUSE-ADD,WRD,PTR
	GET P-OCLAUSE,P-MATCHLEN >STACK
	ADD STACK,2 >PTR
	SUB PTR,1 >STACK
	PUT P-OCLAUSE,STACK,WRD
	PUT P-OCLAUSE,PTR,0
	PUT P-OCLAUSE,P-MATCHLEN,PTR
	RTRUE

	.FUNCT PREP-FIND,PREP,CNT=0,SIZE
	GET PREPOSITIONS,0 >STACK
	MUL STACK,2 >SIZE
?L1:	IGRTR? 'CNT,SIZE /FALSE
	GET PREPOSITIONS,CNT >STACK
	EQUAL? STACK,PREP \?L1
	SUB CNT,1 >STACK
	GET PREPOSITIONS,STACK >STACK
	RSTACK

	.FUNCT SYNTAX-FOUND,SYN
	SET 'P-SYNTAX,SYN
	GETB SYN,P-SACTION >PRSA
	RETURN PRSA

	.FUNCT GWIM,GBIT,LBIT,PREP,OBJ
	EQUAL? GBIT,RMUNGBIT \?L1
	RETURN ROOMS
?L1:	SET 'P-GWIMBIT,GBIT
	SET 'P-SLOCBITS,LBIT
	PUT P-MERGE,P-MATCHLEN,0
	CALL GET-OBJECT,P-MERGE,0 >STACK
	ZERO? STACK /?L4
	SET 'P-GWIMBIT,0
	GET P-MERGE,P-MATCHLEN >STACK
	EQUAL? STACK,1 \FALSE
	GET P-MERGE,1 >OBJ
	FSET? OBJ,VEHBIT \?L8
	EQUAL? PREP,PR?DOWN \?L8
	SET 'PREP,PR?ON
?L8:	PRINTI "("
	ZERO? PREP /?L13
	CALL PREP-FIND,PREP >STACK
	PRINTB STACK
	PRINTI " the "
?L13:	CALL NDESC,OBJ
	PRINTI ")"
	CRLF
	RETURN OBJ
?L4:	SET 'P-GWIMBIT,0
	RFALSE

	.FUNCT SNARF-OBJECTS,PTR
	GET P-ITBL,P-NC1 >PTR
	ZERO? PTR /?L5
	GETB P-SYNTAX,P-SLOC1 >P-SLOCBITS
	GET P-ITBL,P-NC1L >STACK
	CALL SNARFEM,PTR,STACK,P-PRSO >STACK
	ZERO? STACK /FALSE
	GET P-BUTS,P-MATCHLEN >STACK
	ZERO? STACK /?L5
	CALL BUT-MERGE,P-PRSO >P-PRSO
?L5:	GET P-ITBL,P-NC2 >PTR
	ZERO? PTR /TRUE
	GETB P-SYNTAX,P-SLOC2 >P-SLOCBITS
	GET P-ITBL,P-NC2L >STACK
	CALL SNARFEM,PTR,STACK,P-PRSI >STACK
	ZERO? STACK /FALSE
	GET P-BUTS,P-MATCHLEN >STACK
	ZERO? STACK /TRUE
	GET P-PRSI,P-MATCHLEN >STACK
	EQUAL? STACK,1 \?L14
	CALL BUT-MERGE,P-PRSO >P-PRSO
	RTRUE
?L14:	CALL BUT-MERGE,P-PRSI >P-PRSI
	RTRUE

	.FUNCT BUT-MERGE,TBL,LEN,BUTLEN,CNT=1,MATCHES=0,OBJ,NTBL
	GET TBL,P-MATCHLEN >LEN
	PUT P-MERGE,P-MATCHLEN,0
?L1:	DLESS? 'LEN,0 /?L2
	GET TBL,CNT >OBJ
	CALL ZMEMQ,OBJ,P-BUTS >STACK
	ZERO? STACK \?L6
	ADD MATCHES,1 >STACK
	PUT P-MERGE,STACK,OBJ
	INC 'MATCHES
?L6:	INC 'CNT
	JUMP ?L1
?L2:	PUT P-MERGE,P-MATCHLEN,MATCHES
	SET 'NTBL,P-MERGE
	SET 'P-MERGE,TBL
	RETURN NTBL

	.FUNCT SNARFEM,PTR,EPTR,TBL,BUT=0,LEN,WV,WORD,NW
	SET 'P-GETFLAGS,0
	SET 'P-CSPTR,PTR
	SET 'P-CEPTR,EPTR
	PUT P-BUTS,P-MATCHLEN,0
	PUT TBL,P-MATCHLEN,0
	GET PTR,0 >WORD
?L1:	EQUAL? PTR,EPTR \?L3
?L52:	ZERO? BUT /?L6
	PUSH BUT
	JUMP ?L5
?L6:	PUSH TBL
?L5:	CALL GET-OBJECT,STACK >STACK
	RSTACK
?L3:	GET PTR,P-LEXELEN >NW
	EQUAL? WORD,W?ALL \?L8
	SET 'P-GETFLAGS,P-ALL
	EQUAL? NW,W?OF \?L47
	ADD PTR,P-WORDLEN >PTR
	JUMP ?L47
?L8:	EQUAL? WORD,W?BUT,W?EXCEPT \?L13
	ZERO? BUT /?L17
	PUSH BUT
	JUMP ?L16
?L17:	PUSH TBL
?L16:	CALL GET-OBJECT,STACK >STACK
	ZERO? STACK /FALSE
	SET 'BUT,P-BUTS
	PUT BUT,P-MATCHLEN,0
	JUMP ?L47
?L13:	EQUAL? WORD,W?A,W?ONE \?L18
	ZERO? P-ADJ \?L19
	SET 'P-GETFLAGS,P-ONE
	EQUAL? NW,W?OF \?L47
	ADD PTR,P-WORDLEN >PTR
	JUMP ?L47
?L19:	SET 'P-NAM,P-ONEOBJ
	ZERO? BUT /?L28
	PUSH BUT
	JUMP ?L27
?L28:	PUSH TBL
?L27:	CALL GET-OBJECT,STACK >STACK
	ZERO? STACK /FALSE
	ZERO? NW /TRUE
	JUMP ?L47
?L18:	EQUAL? WORD,W?AND,W?$COMMA \?L31
	EQUAL? NW,W?AND,W?$COMMA /?L31
	ZERO? BUT /?L35
	PUSH BUT
	JUMP ?L34
?L35:	PUSH TBL
?L34:	CALL GET-OBJECT,STACK >STACK
	ZERO? STACK /FALSE
	JUMP ?L47
?L31:	CALL WT?,WORD,PS?PREPOSITION >STACK
	ZERO? STACK /?L36
	EQUAL? PTR,P-CSPTR \?L36
	ADD P-CSPTR,P-WORDLEN >P-CSPTR
	JUMP ?L47
?L36:	CALL WT?,WORD,PS?BUZZ-WORD >STACK
	ZERO? STACK \?L47
	EQUAL? WORD,W?AND,W?$COMMA /?L47
	EQUAL? WORD,W?OF \?L39
	ZERO? P-GETFLAGS \?L47
	SET 'P-GETFLAGS,P-INHIBIT
	JUMP ?L47
?L39:	CALL WT?,WORD,PS?ADJECTIVE,P1?ADJECTIVE >WV
	ZERO? WV /?L43
	CALL ADJ-CHECK >STACK
	ZERO? STACK /?L43
	ZERO? P-ADJ /?L44
	SET 'P-OADJ,P-ADJ
	SET 'P-OADJECTIVE,P-ADJECTIVE
?L44:	SET 'P-ADJ,WV
	SET 'P-ADJN,WORD
	SET 'P-ADJECTIVE,WORD
	JUMP ?L47
?L43:	CALL WT?,WORD,PS?OBJECT,P1?OBJECT >STACK
	ZERO? STACK /?L47
	SET 'P-NAM,WORD
	SET 'P-ONEOBJ,WORD
?L47:	EQUAL? PTR,EPTR /?L52
	ADD PTR,P-WORDLEN >PTR
	SET 'WORD,NW
	JUMP ?L1

	.FUNCT ADJ-CHECK
	ZERO? P-ADJ \TRUE
	RTRUE

	.FUNCT GET-OBJECT,TBL,VRB=1,LEN,XBITS,TLEN,GCHECK=0,OLEN=0
	ZERO? SETUP-MODE /?L1
	SET 'GCHECK,1
?L1:	SET 'XBITS,P-SLOCBITS
	GET TBL,P-MATCHLEN >TLEN
	BTST P-GETFLAGS,P-INHIBIT /TRUE
	ZERO? P-NAM \?L13
	ZERO? P-ADJ /?L11
	CALL WT?,P-ADJN,PS?OBJECT,P1?OBJECT >STACK
	ZERO? STACK /?L11
	SET 'P-NAM,P-ADJN
	ZERO? P-OADJ /?L9
	SET 'P-ADJ,P-OADJ
	SET 'P-ADJECTIVE,P-OADJECTIVE
	JUMP ?L11
?L9:	SET 'P-ADJECTIVE,0
	SET 'P-ADJ,0
?L11:	ZERO? P-NAM \?L13
	ZERO? P-ADJ \?L13
	EQUAL? P-GETFLAGS,P-ALL /?L103
	ZERO? P-GWIMBIT \?L13
	ZERO? VRB /FALSE
	PRINTI "FC: I think that sentence was missing a noun."
	CRLF
	RFALSE
?L13:	EQUAL? P-GETFLAGS,P-ALL \?L23
?L103:	ZERO? P-SLOCBITS \?L21
?L23:	SET 'P-SLOCBITS,-1
	JUMP ?L24
?L21:	EQUAL? P-GETFLAGS,P-ALL \?L24
	ZERO? P-NAM /?L24
	EQUAL? PRSA,V?TAKE \?L24
	SET 'P-SLOCBITS,-1
?L24:	SET 'P-TABLE,TBL
?L26:	BTST P-GETFLAGS,P-ALL \?L28
	EQUAL? P-NAM,W?ROBOTS \?L28
	SET 'GCHECK,1
?L28:	ZERO? GCHECK /?L31
	CALL GLOBAL-CHECK,TBL
	JUMP ?L33
?L31:	ZERO? LIT /?L34
	CALL DO-SL,WINNER-HERE,SOG,SIR
?L34:	CALL DO-SL,WINNER,SH,SC
?L33:	GET TBL,P-MATCHLEN >STACK
	SUB STACK,TLEN >LEN
	BTST P-GETFLAGS,P-ALL /?L101
	BTST P-GETFLAGS,P-ONE \?L39
	ZERO? LEN /?L39
	EQUAL? LEN,1 /?L40
	RANDOM LEN >STACK
	GET TBL,STACK >STACK
	PUT TBL,1,STACK
	PRINTI "(How about the "
	GET TBL,1 >STACK
	PRINTD STACK
	PRINTI "?)"
	CRLF
?L40:	PUT TBL,P-MATCHLEN,1
	JUMP ?L101
?L39:	GRTR? LEN,1 /?L48
	ZERO? LEN \?L101
	EQUAL? P-SLOCBITS,-1 /?L47
?L48:	EQUAL? P-SLOCBITS,-1 \?L49
	SET 'P-SLOCBITS,XBITS
	SET 'OLEN,LEN
	GET TBL,P-MATCHLEN >STACK
	SUB STACK,LEN >STACK
	PUT TBL,P-MATCHLEN,STACK
	JUMP ?L26
?L49:	ZERO? LEN \?L52
	SET 'LEN,OLEN
?L52:	ZERO? VRB /?L60
	ZERO? P-NAM /?L55
	CALL WHICH-PRINT,TLEN,LEN,TBL
	EQUAL? TBL,P-PRSO \?L57
	SET 'P-ACLAUSE,P-NC1
	JUMP ?L59
?L57:	SET 'P-ACLAUSE,P-NC2
?L59:	SET 'P-AADJ,P-ADJ
	SET 'P-ANAM,P-NAM
	CALL ORPHAN,0,0
	SET 'P-OFLAG,1
	JUMP ?L60
?L55:	ZERO? VRB /?L60
	PRINTI "FC: You must supply a noun!"
	CRLF
?L60:	SET 'P-NAM,0
	SET 'P-ADJ,0
	RFALSE
?L47:	ZERO? LEN \?L101
	ZERO? GCHECK /?L64
	ZERO? VRB /?L97
	EQUAL? PRSA,V?QUERY \?L67
	EQUAL? WINNER,WHIZ \?L67
	ZERO? PLUGGED-IN \?L97
?L67:	ZERO? LIT /?L69
	GET DETECT-TBL,ROFF >STACK
	CALL ROBOT-TELL,STACK,0
	ZERO? P-OFLAG /?L70
	ZERO? P-ADJ /?L72
	ZERO? P-NAM /?L86
	PRINTI " any such"
?L72:	ZERO? P-NAM /?L86
	EQUAL? P-NAM,W?IRIS,W?AUDA,W?WALDO /?L81
	EQUAL? P-NAM,W?WHIZ,W?SENSA,W?POET \?L79
?L81:	PRINTI " robot "
?L79:	PRINTB P-NAM
	JUMP ?L86
?L70:	EQUAL? P-NAM,W?IRIS,W?AUDA,W?WALDO /?L89
	EQUAL? P-NAM,W?WHIZ,W?SENSA,W?POET \?L87
?L89:	PRINTI " "
	JUMP ?L92
?L87:	PRINTI " any"
?L92:	CALL BUFFER-PRINT,P-CSPTR,P-CEPTR,0
?L86:	PRINTI " here."
	CRLF
	JUMP ?L97
?L69:	PRINTI "It's too dark to see."
	CRLF
?L97:	SET 'P-NAM,0
	SET 'P-ADJ,0
	RFALSE
?L64:	ZERO? LEN \?L101
	SET 'GCHECK,1
	JUMP ?L26
?L101:	SET 'P-ADJ,0
	SET 'P-NAM,0
	SET 'P-SLOCBITS,XBITS
	RTRUE

	.FUNCT WHICH-PRINT,TLEN,LEN,TBL,OBJ,RLEN,TEMPROFF
	SET 'RLEN,LEN
	PRINTI "FC: Which "
	PRINTB P-NAM
	PRINTI " do you mean, "
?L5:	INC 'TLEN
	GET TBL,TLEN >OBJ
	PRINTI "the "
	IN? OBJ,ROOMS \?L9
	PRINTD OBJ
	JUMP ?L13
?L9:	CALL NDESC,OBJ
?L13:	EQUAL? LEN,2 \?L16
	EQUAL? RLEN,2 /?L18
	PRINTI ","
?L18:	PRINTI " or "
	JUMP ?L25
?L16:	GRTR? LEN,2 \?L25
	PRINTI ", "
?L25:	DLESS? 'LEN,1 \?L5
	PRINTR "?"

	.FUNCT GLOBAL-CHECK,TBL,LEN,RMG,RMGL,CNT=0,OBJ,OBITS,FOO
	GET TBL,P-MATCHLEN >LEN
	SET 'OBITS,P-SLOCBITS
	GETPT WINNER-HERE,P?GLOBAL >RMG
	ZERO? RMG /?L4
	PTSIZE RMG >STACK
	SUB STACK,1 >RMGL
?L3:	GETB RMG,CNT >OBJ
	CALL THIS-IT?,OBJ,TBL >STACK
	ZERO? STACK /?L5
	CALL OBJ-FOUND,OBJ,TBL
?L5:	IGRTR? 'CNT,RMGL \?L3
?L4:	GETPT WINNER-HERE,P?PSEUDO >RMG
	ZERO? RMG /?L15
	PTSIZE RMG >STACK
	DIV STACK,4 >STACK
	SUB STACK,1 >RMGL
	SET 'CNT,0
?L14:	MUL CNT,2 >STACK
	GET RMG,STACK >STACK
	EQUAL? P-NAM,STACK \?L16
	MUL CNT,2 >STACK
	INC 'STACK
	GET RMG,STACK >STACK
	PUTP PSEUDO-OBJECT,P?ACTION,STACK
	GETPT PSEUDO-OBJECT,P?ACTION >STACK
	SUB STACK,5 >FOO
	GET P-NAM,0 >STACK
	PUT FOO,0,STACK
	GET P-NAM,1 >STACK
	PUT FOO,1,STACK
	CALL OBJ-FOUND,PSEUDO-OBJECT,TBL
	JUMP ?L15
?L16:	IGRTR? 'CNT,RMGL \?L14
?L15:	GET TBL,P-MATCHLEN >STACK
	EQUAL? STACK,LEN \FALSE
	SET 'P-SLOCBITS,-1
	SET 'P-TABLE,TBL
	CALL DO-SL,GLOBAL-OBJECTS,1,1
	SET 'P-SLOCBITS,OBITS
	GET TBL,P-MATCHLEN >STACK
	ZERO? STACK \FALSE
	EQUAL? WINNER,WHIZ \?L25
	EQUAL? PRSA,V?QUERY \?L25
	ZERO? PLUGGED-IN /?L25
	PRINTI "CLC: Hmm. That's a tough one. Hold on a minute while I try to locate a reference ..."
	CRLF
	CRLF
	CALL MOBY-FIND,TBL
	PRINTI "CLC: "
	GET TBL,P-MATCHLEN >FOO
	GRTR? FOO,1 \?L31
	EQUAL? P-NAM,W?WALKWA,W?MECHAN,W?BLT /?L33
	EQUAL? P-NAM,W?GLIDER /?L33
	EQUAL? P-NAM,W?GROOVE,W?TRACK \?L31
?L33:	PUT TBL,P-MATCHLEN,1
	SET 'FOO,1
?L31:	ZERO? FOO \?L35
	CALL PICK-ONE,NOT-FOUND >STACK
	PRINT STACK
	CRLF
	RTRUE
?L35:	GRTR? FOO,1 \?L39
	PUT TBL,P-MATCHLEN,0
	PRINTR "I'm afraid you weren't specific enough. One object at a time, and adjectives can be helpful."
?L39:	CALL PICK-ONE,CROWDED >STACK
	PRINT STACK
	CRLF
	RTRUE
?L25:	EQUAL? PRSA,V?FOLLOW /?L46
	EQUAL? PRSA,V?EXAMINE,V?MOVE-ROBOT-TO-LOC,V?WALK-TO \FALSE
?L46:	CALL DO-SL,ROOMS,1,1 >STACK
	RSTACK

	.FUNCT MOBY-FIND,TBL,FOO
	FIRST? ROOMS >FOO \?L3
?L4:	CALL SEARCH-LIST,FOO,TBL,P-SRCALL
	NEXT? FOO >FOO /?L4
?L3:	GET TBL,P-MATCHLEN >STACK
	ZERO? STACK \FALSE
	CALL DO-SL,LOCAL-GLOBALS,1,1 >STACK
	RSTACK

	.FUNCT DO-SL,OBJ,BIT1,BIT2
	ADD BIT1,BIT2 >STACK
	BTST P-SLOCBITS,STACK \?L1
	CALL SEARCH-LIST,OBJ,P-TABLE,P-SRCALL >STACK
	RSTACK
?L1:	BTST P-SLOCBITS,BIT1 \?L4
	CALL SEARCH-LIST,OBJ,P-TABLE,P-SRCTOP >STACK
	RSTACK
?L4:	BTST P-SLOCBITS,BIT2 \TRUE
	CALL SEARCH-LIST,OBJ,P-TABLE,P-SRCBOT >STACK
	RSTACK

	.FUNCT SEARCH-LIST,OBJ,TBL,LVL,FLS,NOBJ
	FIRST? OBJ >OBJ \FALSE
?L3:	EQUAL? P-GETFLAGS,P-ALL \?L5
	EQUAL? OBJ,PANEL \?L5
	EQUAL? PRSA,V?DROP /?L7
?L5:	EQUAL? LVL,P-SRCBOT /?L7
	GETPT OBJ,P?SYNONYM >STACK
	ZERO? STACK /?L7
	CALL THIS-IT?,OBJ,TBL >STACK
	ZERO? STACK /?L7
	CALL OBJ-FOUND,OBJ,TBL
?L7:	EQUAL? PRSA,V?QUERY /?L11
	FSET? OBJ,INVISIBLE /?L16
?L11:	EQUAL? LVL,P-SRCTOP \?L12
	FSET? OBJ,SEARCHBIT /?L12
	FSET? OBJ,SURFACEBIT \?L16
?L12:	FIRST? OBJ >NOBJ \?L16
	EQUAL? OBJ,WINNER /?L16
	FSET? OBJ,OPENBIT /?L13
	FSET? OBJ,TRANSBIT \?L16
?L13:	EQUAL? LVL,P-SRCTOP \?L14
	FSET? OBJ,SEARCHBIT \?L14
	EQUAL? P-GETFLAGS,P-ALL /?L16
?L14:	FSET? OBJ,SURFACEBIT \?L17
	PUSH P-SRCALL
	JUMP ?L20
?L17:	FSET? OBJ,SEARCHBIT \?L19
	PUSH P-SRCALL
	JUMP ?L20
?L19:	PUSH P-SRCTOP
?L20:	CALL SEARCH-LIST,OBJ,TBL,STACK >FLS
?L16:	NEXT? OBJ >OBJ /?L3
	RTRUE

	.FUNCT OBJ-FOUND,OBJ,TBL,PTR
	GETP OBJ,P?OBJDESCS >PTR
	ZERO? PTR /?L1
	GET PTR,ROFF >STACK
	ZERO? STACK \?L1
	IN? OBJ,WINNER \TRUE
?L1:	EQUAL? P-GETFLAGS,P-ALL \?L3
	EQUAL? P-NAM,W?ROBOTS /?L3
	GETP OBJ,P?ROBOT >STACK
	ZERO? STACK \TRUE
?L3:	EQUAL? WINNER,IRIS \?L4
	ZERO? IRIS-FIXED \?L4
	GETP OBJ,P?ROBOT >STACK
	ZERO? STACK \?L4
	EQUAL? OBJ,LOCATION /?L4
	IN? OBJ,ROOMS \TRUE
?L4:	GET TBL,P-MATCHLEN >PTR
	ADD PTR,1 >STACK
	PUT TBL,STACK,OBJ
	ADD PTR,1 >STACK
	PUT TBL,P-MATCHLEN,STACK
	RTRUE

	.FUNCT TAKE-CHECK
	GETB P-SYNTAX,P-SLOC1 >STACK
	CALL ITAKE-CHECK,P-PRSO,STACK >STACK
	ZERO? STACK /FALSE
	GETB P-SYNTAX,P-SLOC2 >STACK
	CALL ITAKE-CHECK,P-PRSI,STACK >STACK
	RSTACK

	.FUNCT ITAKE-CHECK,TBL,IBITS,PTR,OBJ,TAKEN,TEMPROFF
	GET TBL,P-MATCHLEN >PTR
	ZERO? PTR /TRUE
	BTST IBITS,SHAVE /?L3
	BTST IBITS,STAKE \TRUE
?L3:	DLESS? 'PTR,0 /TRUE
	ADD PTR,1 >STACK
	GET TBL,STACK >OBJ
	EQUAL? OBJ,IT \?L9
	SET 'OBJ,P-IT-OBJECT
?L9:	CALL HELD?,OBJ >STACK
	ZERO? STACK \?L3
	SET 'PRSO,OBJ
	FSET? OBJ,TRYTAKEBIT \?L14
	SET 'TAKEN,1
	JUMP ?L17
?L14:	BTST IBITS,STAKE \?L16
	CALL ITAKE,0 >STACK
	EQUAL? STACK,1 \?L16
	SET 'TAKEN,0
	JUMP ?L17
?L16:	SET 'TAKEN,1
?L17:	ZERO? TAKEN /?L35
	BTST IBITS,SHAVE \?L18
	CALL ROBOT-TELL,STR?1,0
	GETP OBJ,P?ROBOT >STACK
	ZERO? STACK \?L20
	PRINTI "the "
?L20:	CALL NDESC,OBJ
	PRINTI "."
	CRLF
	RFALSE
?L18:	ZERO? TAKEN \?L3
?L35:	CALL ROBOT-TELL,STR?2,0
	CALL NDESC,OBJ
	PRINTI " first."
	CRLF
	JUMP ?L3

	.FUNCT HELD?,CAN
	FSET? CAN,TAKEBIT \FALSE
?L1:	LOC CAN >CAN
	ZERO? CAN /FALSE
	EQUAL? CAN,WINNER \?L1
	RTRUE

	.FUNCT MANY-CHECK,LOSS=0,TMP
	GET P-PRSO,P-MATCHLEN >STACK
	GRTR? STACK,1 \?L1
	GETB P-SYNTAX,P-SLOC1 >STACK
	BTST STACK,SMANY /?L1
	SET 'LOSS,1
	JUMP ?L3
?L1:	GET P-PRSI,P-MATCHLEN >STACK
	GRTR? STACK,1 \?L3
	GETB P-SYNTAX,P-SLOC2 >STACK
	BTST STACK,SMANY /?L3
	SET 'LOSS,2
?L3:	ZERO? LOSS /TRUE
	PRINTI "FC: I can't use multiple "
	EQUAL? LOSS,2 \?L9
	PRINTI "in"
?L9:	PRINTI "direct objects with '"
	GET P-ITBL,P-VERBN >TMP
	ZERO? TMP \?L16
	PRINTI "tell"
	JUMP ?L21
?L16:	ZERO? P-OFLAG /?L20
	GET TMP,0 >STACK
	PRINTB STACK
	JUMP ?L21
?L20:	GETB TMP,3 >STACK
	GETB TMP,2 >STACK
	CALL WORD-PRINT,STACK,STACK
?L21:	PRINTI "'."
	CRLF
	RFALSE

	.FUNCT ZMEMQ,ITM,TBL,SIZE=-1,CNT=1
	ZERO? TBL /FALSE
	LESS? SIZE,0 /?L4
	SET 'CNT,0
	JUMP ?L6
?L4:	GET TBL,0 >SIZE
?L6:	GET TBL,CNT >STACK
	EQUAL? ITM,STACK /TRUE
	IGRTR? 'CNT,SIZE \?L6
	RFALSE

	.FUNCT ZMEMQB,ITM,TBL,SIZE,CNT=0
?L1:	GETB TBL,CNT >STACK
	EQUAL? ITM,STACK /TRUE
	IGRTR? 'CNT,SIZE \?L1
	RFALSE

	.FUNCT LIT?,RM,OHERE,LIT?1=0
	SET 'P-GWIMBIT,ONBIT
	SET 'OHERE,WINNER-HERE
	SET 'WINNER-HERE,RM
	FSET? RM,ONBIT /?L3
	ZERO? ALWAYS-LIT /?L1
?L3:	SET 'LIT?1,1
	JUMP ?L8
?L1:	PUT P-MERGE,P-MATCHLEN,0
	SET 'P-TABLE,P-MERGE
	SET 'P-SLOCBITS,-1
	EQUAL? OHERE,RM \?L5
	CALL DO-SL,WINNER,1,1
?L5:	CALL DO-SL,RM,1,1
	GET P-TABLE,P-MATCHLEN >STACK
	GRTR? STACK,0 \?L8
	SET 'LIT?1,1
?L8:	SET 'WINNER-HERE,OHERE
	SET 'P-GWIMBIT,0
	RETURN LIT?1

	.FUNCT PRSO-PRINT,PTR
	ZERO? P-MERGED \?L3
	GET P-ITBL,P-NC1 >PTR
	GET PTR,0 >STACK
	EQUAL? STACK,W?IT \?L1
?L3:	PRINTI " "
	CALL NDESC,PRSO >STACK
	RSTACK
?L1:	GET P-ITBL,P-NC1L >STACK
	CALL BUFFER-PRINT,PTR,STACK,0 >STACK
	RSTACK

	.FUNCT PRSI-PRINT,PTR
	ZERO? P-MERGED \?L3
	GET P-ITBL,P-NC2 >PTR
	GET PTR,0 >STACK
	EQUAL? STACK,W?IT \?L1
?L3:	PRINTI " "
	CALL NDESC,PRSO >STACK
	RSTACK
?L1:	GET P-ITBL,P-NC2L >STACK
	CALL BUFFER-PRINT,PTR,STACK,0 >STACK
	RSTACK

	.FUNCT CRETIN
	EQUAL? PRSA,V?GIVE \?L1
	PRINTR "FC: I think you're a little confused."
?L1:	EQUAL? PRSA,V?MUNG,V?KILL \?L5
	CALL PRINT-ID,STR?3
	IN? WINNER,CPU-ROOM \?L6
	CALL ROBOT-TELL,STR?4,0
	CALL NDESC,HOME
	PRINTI " and see what I can do."
	CRLF
	CALL PERFORM,V?OPEN,HOME >STACK
	RSTACK
?L6:	CALL ROBOT-TELL,STR?5
	RTRUE
?L5:	EQUAL? PRSA,V?TAKE \?L11
	CALL ROBOT-TELL,STR?6 >STACK
	RSTACK
?L11:	EQUAL? PRSA,V?DISEMBARK \?L12
	CALL ROBOT-TELL,STR?7 >STACK
	RSTACK
?L12:	EQUAL? PRSA,V?EXAMINE \?L13
	CALL ROBOT-TELL,STR?8,0
	CALL NDESC,HOME
	PRINTR " has been opened."
?L13:	EQUAL? PRSA,V?FIND \FALSE
	IN? WINNER,CPU-ROOM /?L17
	CALL PERFORM,V?WALK-TO,CPU-ROOM
	RTRUE
?L17:	CALL ROBOT-TELL,STR?9,0
	CALL NDESC,HOME
	PRINTR "."

	.FUNCT STEP-FCN
	EQUAL? PRSA,V?PUT-AGAINST \FALSE
	EQUAL? PRSO,WEDGE \FALSE
	IN? WEDGE,WINNER /?L3
	IN? WEDGE,WINNER-HERE \FALSE
?L3:	ZERO? WEDGE-PLACED /?L4
	CALL ROBOT-TELL,STR?10
	RTRUE
?L4:	EQUAL? WINNER-HERE,REPAIR1 \?L7
	SET 'WEDGE-PLACED,1
	JUMP ?L10
?L7:	EQUAL? WINNER-HERE,HALLWAY-JUNCTION,HUMAN-ENTRY \?L9
	SET 'WEDGE-PLACED,2
	JUMP ?L10
?L9:	SET 'WEDGE-PLACED,0
?L10:	MOVE WEDGE,WINNER-HERE
	PRINTI "The "
	CALL NDESC,WEDGE
	PRINTI " has been positioned at the "
	CALL NDESC,PRSI
	PRINTR "."

	.FUNCT V-LOOK,STR,AV
	CALL IN-MOTION?,WINNER >STACK
	ZERO? STACK /?L1
	CALL ROBOT-TELL,STR?11,0
	JUMP ?L3
?L1:	CALL ROBOT-TELL,STR?12,0
?L3:	IN? WINNER,CAR \?L4
	PRINTI "Inside the "
	CALL NDESC,CAR
	PRINTI "."
	CRLF
	JUMP ?L8
?L4:	PRINTD WINNER-HERE
	CRLF
?L8:	EQUAL? WINNER,IRIS \?L11
	ZERO? IRIS-FIXED \?L11
	CALL PICK-ONE,IRIS-BLIND >STACK
	PRINT STACK
	CRLF
	RTRUE
?L11:	GETP WINNER-HERE,P?ACTION >STACK
	CALL STACK,M-LOOK >STACK
	ZERO? STACK \?L16
	CALL LONG-DESCS
?L16:	CALL DESCRIBE-OBJECTS
	EQUAL? WINNER-HERE,HALL-END,CAR-AREA \?L19
	IN? CAR,WINNER-HERE \?L19
	IN? WINNER,CAR /?L19
	CALL PERFORM,V?LOOK-INSIDE,CAR
?L19:	CALL LOOK-CORRIDOR >STACK
	RSTACK

	.FUNCT LONG-DESCS
	GETP WINNER-HERE,P?ROOMDESCS >STACK
	GET STACK,ROFF >STACK
	ZERO? STACK /?L1
	GETP WINNER-HERE,P?ROOMDESCS >STACK
	GET STACK,ROFF >STACK
	PRINT STACK
	CRLF
	RTRUE
?L1:	PRINTI "I am in the "
	PRINTD WINNER-HERE
	PRINTR "."

	.FUNCT LOOK-CORRIDOR
	GETP WINNER-HERE,P?CORRIDOR >STACK
	ZERO? STACK /FALSE
	EQUAL? WINNER,WHIZ,WALDO /FALSE
	CALL CORRIDOR-LOOK >STACK
	RSTACK

	.FUNCT DESCRIBE-ROBOTS,COUNT=-1,OFFS=0,OBJ,LEADER,RC
	IN? WINNER,CAR \?L1
	SET 'COUNT,0
?L1:	GET NAME-TBL,OFFS >STACK
	IN? STACK,WINNER-HERE \?L6
	INC 'COUNT
?L6:	IGRTR? 'OFFS,6 \?L1
	ZERO? COUNT /TRUE
	EQUAL? WINNER,IRIS \?L15
	ZERO? IRIS-FIXED /TRUE
?L15:	IN? WINNER,CAR \?L18
	PRINTI "Standing outside the "
	CALL NDESC,CAR
	PRINTI " "
	JUMP ?L22
?L18:	PRINTI "In the room with me "
?L22:	EQUAL? COUNT,1 \?L25
	LOC WINNER >STACK
	IN? PEOPLE,STACK /?L29
	IN? WINNER,CAR \?L27
	LOC CAR >STACK
	IN? PEOPLE,STACK \?L27
?L29:	PRINTI "are "
	JUMP ?L35
?L27:	PRINTI "is "
	JUMP ?L35
?L25:	PRINTI "are "
?L35:	SET 'OFFS,0
?L38:	GET NAME-TBL,OFFS >OBJ
	IN? OBJ,WINNER-HERE \?L40
	EQUAL? WINNER,OBJ /?L40
	EQUAL? OBJ,PEOPLE \?L42
	PRINTI "some "
?L42:	FSET? OBJ,CUTBIT \?L47
	PRINTI "non-functional "
?L47:	CALL NDESC,OBJ
	CALL IN-MOTION?,OBJ >STACK
	ZERO? STACK /?L54
	PRINTI " (in motion)"
?L54:	GET FOLLOW-TBL,ROFF >STACK
	EQUAL? STACK,OBJ \?L59
	PRINTI " whom I'm following"
?L59:	SET 'RC,0
?L64:	INC 'RC
	EQUAL? RC,7 /?L65
	GET DRAG-TBL,RC >STACK
	EQUAL? STACK,OBJ \?L64
	PRINTI " (being dragged)"
?L65:	ZERO? PLUGGED-IN /?L74
	EQUAL? OBJ,WHIZ \?L74
	PRINTI " (plugged in)"
?L74:	EQUAL? COUNT,1 \?L79
	PRINTR "."
?L79:	EQUAL? COUNT,2 \?L83
	PRINTI " and "
	JUMP ?L86
?L83:	PRINTI ", "
?L86:	DEC 'COUNT
?L40:	INC 'OFFS
	JUMP ?L38

	.FUNCT DESCRIBE-OBJECTS,OFFS=0,OBJ
	CALL DESCRIBE-ROBOTS
?L1:	GET NAME-TBL,OFFS >OBJ
	IN? OBJ,WINNER-HERE \?L3
	EQUAL? OBJ,WINNER /?L3
	CALL PRINT-CONTENTS,OBJ
?L3:	IGRTR? 'OFFS,5 \?L1
	EQUAL? WINNER,IRIS \?L9
	ZERO? IRIS-FIXED /TRUE
?L9:	CALL PRINT-CONT,WINNER-HERE,-1 >STACK
	RSTACK

	.FUNCT DESCRIBABLE?,OBJ
	ADD ROFF,FDOFF >STACK
	GETP OBJ,P?OBJDESCS >STACK
	GET STACK,STACK >STACK
	ZERO? STACK \TRUE
	RFALSE

	.FUNCT PRINT-CONTENTS,OBJ,F,N,1ST?=1,NUM
	FIRST? OBJ >F \FALSE
?L3:	NEXT? F >N /?L5
?L5:	FSET? F,NDESCBIT /?L6
	CALL DESCRIBABLE?,F >STACK
	ZERO? STACK /?L6
	ZERO? 1ST? /?L8
	SET '1ST?,0
	GETP OBJ,P?ROBOT >NUM
	ZERO? NUM /?L23
	EQUAL? NUM,7 \?L12
	PRINTI "The "
	CALL NDESC,OBJ
	PRINTI " are carrying "
	JUMP ?L23
?L12:	CALL NDESC,OBJ
	PRINTI " is carrying "
	JUMP ?L23
?L8:	PRINTI ", "
	ZERO? N \?L23
	PRINTI "and "
?L23:	PRINTI "a "
	CALL NDESC,F
?L6:	SET 'F,N
	ZERO? F \?L3
	ZERO? 1ST? \TRUE
	GETP OBJ,P?ROBOT >STACK
	ZERO? STACK /TRUE
	PRINTR "."

	.FUNCT PRINT-CONT,OBJ,LEVEL=0,Y,1ST?=1
	FIRST? OBJ >Y \TRUE
?L1:	FSET? Y,INVISIBLE /?L6
	FSET? Y,NDESCBIT /?L6
	GETP Y,P?ROBOT >STACK
	ZERO? STACK \?L6
	CALL DESCRIBABLE?,Y >STACK
	ZERO? STACK /?L6
	EQUAL? OBJ,CAR /?L6
	IN? WINNER,CAR /?L6
	ZERO? 1ST? /?L8
	CALL FIRSTER,OBJ,LEVEL
	SET '1ST?,0
?L8:	ADD LEVEL,1 >STACK
	CALL DESCRIBE-OBJECT,Y,STACK
?L6:	NEXT? Y >Y /?L1
	ZERO? 1ST? \FALSE
	RTRUE

	.FUNCT FIRSTER,OBJ,LEVEL,CNT
	EQUAL? OBJ,WINNER \?L1
	GET CARRY-TBL,ROFF >STACK
	CALL ROBOT-TELL,STACK >STACK
	RSTACK
?L1:	IN? OBJ,ROOMS /FALSE
	FSET? OBJ,SURFACEBIT \?L4
	PRINTI "Sitting "
	EQUAL? OBJ,GROOVE1,GROOVE2 \?L8
	PRINTI "in"
	JUMP ?L12
?L8:	PRINTI "on"
?L12:	PRINTI " the "
	CALL NDESC,OBJ
	CALL CCOUNT,OBJ >CNT
	LESS? CNT,2 \?L17
	PRINTR " is... "
?L17:	PRINTR " are... "
?L4:	GET INDENTS,LEVEL >STACK
	PRINT STACK
	PRINTI "The "
	CALL NDESC,OBJ
	PRINTR " contains..."

	.FUNCT DESCRIBE-OBJECT,OBJ,LEVEL,STR=0,WCOUNT=0
	ZERO? LEVEL \?L6
	GETP OBJ,P?DESCFCN >STACK
	CALL STACK,M-OBJDESC >STACK
	ZERO? STACK \TRUE
	ZERO? LEVEL \?L6
	FSET? OBJ,TOUCHBIT /?L3
	ADD ROFF,FDOFF >STACK
	GETP OBJ,P?OBJDESCS >STACK
	GET STACK,STACK >STACK
	PRINT STACK
	JUMP ?L36
?L3:	ZERO? LEVEL \?L6
	PRINTI "There is a "
	CALL NDESC,OBJ
	PRINTI " here"
	EQUAL? OBJ,WEDGE \?L19
	ZERO? ON-WEDGE /?L19
	PRINTI " supporting "
	GETP WINNER,P?ROBOT >STACK
	EQUAL? ON-WEDGE,STACK \?L13
	PRINTI "me"
	JUMP ?L19
?L13:	IGRTR? 'WCOUNT,6 /?L19
	EQUAL? ON-WEDGE,WCOUNT \?L13
	SUB WCOUNT,1 >STACK
	GET NAME-TBL,STACK >STACK
	CALL NDESC,STACK
	JUMP ?L13
?L19:	PRINTI "."
	JUMP ?L36
?L6:	GET INDENTS,LEVEL >STACK
	PRINT STACK
	PRINTI "A "
	CALL NDESC,OBJ
	FSET? OBJ,WEARBIT \?L36
	PRINTI " (being worn)"
?L36:	CRLF
	CALL SEE-INSIDE?,OBJ >STACK
	ZERO? STACK /FALSE
	FIRST? OBJ >STACK \FALSE
	ADD LEVEL,1 >STACK
	CALL PRINT-CONT,OBJ,STACK >STACK
	RSTACK

	.FUNCT PRE-EXAMINE
	IN? PRSO,ROOMS \FALSE
	IN? WINNER,PRSO \?L3
	CALL PERFORM,V?LOOK
	RTRUE
?L3:	CALL ROBOT-TELL,STR?13
	RTRUE

	.FUNCT V-EXAMINE,STR
	ZERO? PRSI /?L1
	IN? PRSO,PRSI /?L1
	CALL ROBOT-TELL,STR?14
	RTRUE
?L1:	EQUAL? PRSO,LEFT,RIGHT,INTNUM /?L4
	EQUAL? PRSO,LISTENING,DRAGGING,LOCATION \?L3
?L4:	CALL ROBOT-YUKS
	RTRUE
?L3:	EQUAL? PRSO,MONITOR \?L5
	EQUAL? WINNER,IRIS \?L5
	ZERO? IRIS-FIXED /?L5
	LOC IRIS >STACK
	EQUAL? STACK,WEATHER-BANKS,RTD-BANKS,SERVO-SYSTEMS \?L5
	CALL V-LOOK
	RTRUE
?L5:	ADD RTOFF,ROFF >STACK
	GETP PRSO,P?OBJDESCS >STACK
	GET STACK,STACK >STR
	ZERO? STR /?L7
	CALL ROBOT-TELL,STR
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L9
	CALL PRINT-CONTENTS,PRSO
?L9:	GETP PRSO,P?DIAL >STACK
	ZERO? STACK /FALSE
	PRINTI "The "
	CALL NDESC,PRSO
	PRINTI " is set at "
	GETP PRSO,P?DIAL >STACK
	GET DIALSETS,STACK >STACK
	PRINTN STACK
	PRINTR "."
?L7:	FSET? PRSO,CONTBIT /?L18
	FSET? PRSO,DOORBIT \?L17
?L18:	ZERO? STR /?L19
	PRINT STR
	PRINTI " "
?L19:	CALL V-LOOK-INSIDE >STACK
	RSTACK
?L17:	CALL ROBOT-TELL,STR?15,0
	CALL NDESC,PRSO
	PRINTR "."

	.FUNCT V-SCORE,ASK?=1
	PRINTI "There have been "
	CALL BIG-NUM-PRINT,TOTAL-SCORE
	PRINTI " casualties (original population: 30,172,000) in "
	PRINTN MOVES
	EQUAL? MOVES,1 \?L7
	PRINTR " cycle."
?L7:	PRINTR " cycles."

	.FUNCT FINISH
	CALL V-SCORE
	QUIT

	.FUNCT V-QUIT,ASK?=1,SCOR
	CALL V-SCORE
	ZERO? ASK? /?L3
	PRINTI "Do you wish to leave the game? (Y is affirmative): "
	CALL YES? >STACK
	ZERO? STACK \?L3
	ZERO? ASK? \?L1
?L3:	QUIT
?L1:	PRINTR "Ok."

	.FUNCT YES?
	PRINTI ">"
	READ P-INBUF,P-LEXV
	GET P-LEXV,1 >STACK
	EQUAL? STACK,W?YES,W?Y \FALSE
	RTRUE

	.FUNCT V-VERSION,CNT=17
	PRINTI "SUSPENDED: INTERLOGIC Science Fiction
Copyright (c) 1983 by Infocom, Inc. All rights reserved.
SUSPENDED and INTERLOGIC are trademarks of Infocom, Inc.
Release "
	GET 0,1 >STACK
	BAND STACK,2047 >STACK
	PRINTN STACK
	PRINTI " / Serial number "
?L5:	IGRTR? 'CNT,23 /?L6
	GETB 0,CNT >STACK
	PRINTC STACK
	JUMP ?L5
?L6:	CRLF
	RTRUE

	.FUNCT JIGS-UP,DESC,ROBOT
	PRINT DESC
	CRLF
	CRLF
	PRINTI "[RWD_ID: verbs:337, VAL: -1]FC: So much for that robot. Too bad."
	CRLF
	GETP ROBOT,P?ROBOT >STACK
	PUT DEADBOTS,STACK,30
	CALL KILL-GOAL,ROBOT,1
	FSET ROBOT,CUTBIT
	CALL DEAD-FCN
	RETURN 2

	.FUNCT V-RESTORE
	RESTORE \?L1
	PRINTI "Ok."
	CRLF
	CALL V-LOOK >STACK
	RSTACK
?L1:	PRINTR "Failed."

	.FUNCT V-SAVE
	SAVE \?L1
	PRINTR "Ok."
?L1:	PRINTR "Failed."

	.FUNCT V-RESTART
	CALL V-SCORE,1
	PRINTI "Do you wish to restart? (Y is affirmative): "
	CALL YES? >STACK
	ZERO? STACK /FALSE
	PRINTI "Restarting."
	CRLF
	RESTART

	.FUNCT V-WALK-AROUND
	CALL ROBOT-TELL,STR?16 >STACK
	RSTACK

	.FUNCT GO-NEXT,TBL,VAL
	CALL LKP,WINNER-HERE,TBL >VAL
	ZERO? VAL /FALSE
	CALL GOTO,VAL >STACK
	RSTACK

	.FUNCT PRE-LAMP-ON
	EQUAL? PRSO,SWITCH1,SWITCH2,SWITCH3 /FALSE
	EQUAL? PRSO,MACHINE /FALSE
	CALL ROBOT-TELL,STR?17,0
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L3
	CALL HIM-HER,PRSO
	JUMP ?L5
?L3:	PRINTI "the "
	CALL NDESC,PRSO
?L5:	PRINTI "."
	CRLF
	RETURN 2

	.FUNCT V-LAMP-ON
	EQUAL? PRSO,SWITCH1,SWITCH2,SWITCH3 /?L1
	EQUAL? PRSO,MACHINE /?L9
	CALL ROBOT-YUKS
	RTRUE
?L1:	EQUAL? PRSO,MACHINE \?L3
?L9:	CALL PERFORM,V?PUSH,ORANGE-BUTTON
	RTRUE
?L3:	FSET? PRSO,ONBIT \?L4
	CALL ROBOT-TELL,STR?18 >STACK
	RSTACK
?L4:	CALL ROBOT-TELL,STR?19
	FSET PRSO,ONBIT
	LESS? MOVES,75 \FALSE
	CALL DO-RTD >STACK
	RSTACK

	.FUNCT V-LAMP-OFF
	EQUAL? PRSO,SWITCH1,SWITCH2,SWITCH3 /?L1
	EQUAL? PRSO,MACHINE /?L9
	CALL ROBOT-YUKS
	RTRUE
?L1:	EQUAL? PRSO,MACHINE \?L3
?L9:	CALL PERFORM,V?PUSH,ORANGE-BUTTON
	RTRUE
?L3:	FSET? PRSO,ONBIT /?L4
	CALL ROBOT-TELL,STR?20 >STACK
	RSTACK
?L4:	CALL ROBOT-TELL,STR?19
	FCLEAR PRSO,ONBIT
	LESS? MOVES,75 \FALSE
	CALL DO-RTD >STACK
	RSTACK

	.FUNCT LKP,ITM,TBL,CNT=0,LEN
	GET TBL,0 >LEN
?L1:	IGRTR? 'CNT,LEN /FALSE
	GET TBL,CNT >STACK
	EQUAL? STACK,ITM \?L1
	EQUAL? CNT,LEN /FALSE
	ADD CNT,1 >STACK
	GET TBL,STACK >STACK
	RSTACK

	.FUNCT V-WALK,PT,PTS,STR,OBJ,RM
	CALL DO-THE-TV
	GET FOLLOW-TBL,ROFF >STACK
	ZERO? STACK /?L1
	CALL ROBOT-TELL,STR?21
	PUT FOLLOW-TBL,ROFF,0
?L1:	CALL KILL-GOAL,WINNER
	ZERO? P-WALK-DIR \?L4
	CALL PERFORM,V?WALK-TO,PRSO
	RTRUE
?L4:	GETPT WINNER-HERE,PRSO >PT
	ZERO? PT /?L6
	PTSIZE PT >PTS
	EQUAL? PTS,UEXIT \?L7
	GETB PT,REXIT >STACK
	CALL GOTO,STACK >STACK
	RSTACK
?L7:	EQUAL? PTS,NEXIT \?L9
	GET PT,NEXITSTR >STACK
	PRINT STACK
	CRLF
	RETURN 2
?L9:	EQUAL? PTS,FEXIT \?L14
	GET PT,FEXITFCN >STACK
	CALL STACK >RM
	ZERO? RM /?L15
	CALL GOTO,RM >STACK
	RSTACK
?L15:	RETURN 2
?L14:	EQUAL? PTS,CEXIT \?L20
	GETB PT,CEXITFLAG >STACK
	VALUE STACK >STACK
	ZERO? STACK /?L21
	GETB PT,REXIT >STACK
	CALL GOTO,STACK >STACK
	RSTACK
?L21:	GET PT,CEXITSTR >STR
	ZERO? STR /?L23
	PRINT STR
	CRLF
	RETURN 2
?L23:	GET CANT-GO,ROFF >STACK
	CALL ROBOT-TELL,STACK
	RETURN 2
?L20:	EQUAL? PTS,DEXIT \FALSE
	GETB PT,DEXITOBJ >OBJ
	FSET? OBJ,OPENBIT \?L32
	GETB PT,REXIT >STACK
	CALL GOTO,STACK >STACK
	RSTACK
?L32:	GET PT,DEXITSTR >STR
	ZERO? STR /?L34
	PRINT STR
	CRLF
	RETURN 2
?L34:	PRINTI "The "
	CALL NDESC,OBJ
	PRINTI " is closed."
	CRLF
	CALL THIS-IS-IT,OBJ
	RETURN 2
?L6:	GET CANT-GO,ROFF >STACK
	CALL ROBOT-TELL,STACK
	RETURN 2

	.FUNCT THIS-IS-IT,OBJ
	SET 'P-IT-OBJECT,OBJ
	SET 'P-IT-LOC,WINNER-HERE
	RETURN P-IT-LOC

	.FUNCT V-INVENTORY,OBJ,STR
	EQUAL? WINNER,AUDA \?L1
	FIRST? AUDA >OBJ \?L3
	ADD FDOFF,ROFF >STACK
	GETP OBJ,P?OBJDESCS >STACK
	GET STACK,STACK >STR
	ZERO? STR \?L5
	GET INVEN-QUIPS,ROFF >STACK
	CALL ROBOT-TELL,STACK
	RTRUE
?L5:	CALL PRINT-CONT,AUDA >STACK
	RSTACK
?L3:	GET INVEN-QUIPS,ROFF >STACK
	CALL ROBOT-TELL,STACK >STACK
	RSTACK
?L1:	CALL CCOUNT,WINNER >STACK
	ZERO? STACK /?L9
	CALL PRINT-CONT,WINNER >STACK
	RSTACK
?L9:	GET INVEN-QUIPS,ROFF >STACK
	CALL ROBOT-TELL,STACK >STACK
	RSTACK

	.FUNCT V-COUNT,TEMP
	EQUAL? PRSO,PEOPLE \?L1
	CALL ROBOT-TELL,STR?22
	RTRUE
?L1:	EQUAL? PRSO,HANDS,SURGERY-HAND /?L3
	CALL ROBOT-TELL,STR?23
	RTRUE
?L3:	ZERO? PRSI /?L43
	IN? PRSI,WINNER-HERE /?L5
	CALL CANT-DETECT,PRSI
	RTRUE
?L5:	ZERO? PRSI /?L43
	GETP PRSI,P?ROBOT >STACK
	ZERO? STACK /?L8
	GETP PRSI,P?ROBOT >STACK
	EQUAL? STACK,7 \?L7
?L8:	CALL ROBOT-TELL,STR?24,0
	CALL NDESC,HANDS
	PRINTI " in the "
	CALL NDESC,PRSI
	PRINTR "."
?L7:	ZERO? PRSI \?L24
?L43:	CALL ROBOT-TELL,STR?25,0
	PRINTN NUM-EXT
	EQUAL? NUM-EXT,1 \?L14
	PRINTI " extension"
	JUMP ?L18
?L14:	PRINTI " extensions"
?L18:	PRINTR "."
?L24:	PRINTI "There "
	EQUAL? PRSI,AUDA \?L26
	PRINTI "is"
	JUMP ?L30
?L26:	PRINTI "are"
?L30:	SET 'TEMP,WINNER
	CALL CHANGE-WINNER,PRSI,1
	PRINTI " "
	PRINTN NUM-EXT
	PRINTI " extension"
	CALL CHANGE-WINNER,TEMP,1
	EQUAL? PRSI,AUDA /?L35
	PRINTI "s"
?L35:	PRINTI " in "
	CALL NDESC,PRSI
	PRINTR "."

	.FUNCT PRE-TAKE
	IN? PRSO,WINNER \?L1
	CALL ROBOT-TELL,STR?26 >STACK
	RSTACK
?L1:	IN? PRSO,TOPSHELF \?L3
	GETP WINNER,P?ROBOT >STACK
	EQUAL? ON-WEDGE,STACK /?L3
	CALL ROBOT-TELL,STR?27
	RTRUE
?L3:	FSET? PRSO,WEARBIT \?L4
	CALL ROBOT-TELL,STR?28
	RTRUE
?L4:	EQUAL? WINNER,IRIS \?L5
	ZERO? IRIS-FIXED \?L5
	CALL ROBOT-TELL,STR?29
	RETURN 2
?L5:	LOC PRSO >STACK
	FSET? STACK,CONTBIT \?L8
	LOC PRSO >STACK
	FSET? STACK,OPENBIT /?L8
	CALL ROBOT-TELL,STR?30
	RTRUE
?L8:	ZERO? PRSI /?L9
	FSET? PRSI,VICBIT \?L9
	FSET? PRSO,WEARBIT \?L9
	CALL ROBOT-TELL,STR?31,0
	CALL NDESC,PRSI
	PRINTR " has it attached."
?L9:	LOC WINNER >STACK
	EQUAL? PRSO,STACK \FALSE
	PRINTR "I'm in it, loser."

	.FUNCT V-TAKEOUT
	ZERO? PRSI /?L1
	IN? PRSO,PRSI /?L1
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,PRSO
	PRINTI " isn't in "
	GETP PRSI,P?ROBOT >STACK
	ZERO? STACK \?L5
	PRINTI "the "
?L5:	CALL NDESC,PRSI
	PRINTR "."
?L1:	CALL PERFORM,V?TAKE,PRSO >STACK
	RSTACK

	.FUNCT V-TAKE
	CALL ITAKE >STACK
	EQUAL? STACK,1 \FALSE
	CALL ROBOT-TELL,STR?33
	CALL IS-THEFT? >STACK
	CALL PRINT-ID,STR?34,STACK
	EQUAL? PRSO,WEDGE \FALSE
	SET 'WEDGE-PLACED,0
	SET 'ON-WEDGE,0
	RETURN ON-WEDGE

	.FUNCT TRYTAKE
	IN? PRSO,WINNER /TRUE
	FSET? PRSO,TRYTAKEBIT \?L3
	GETP PRSO,P?ACTION >STACK
	ZERO? STACK /?L3
	CALL PERFORM,V?TAKE,PRSO
	IN? PRSO,WINNER /TRUE
	RFALSE
?L3:	CALL ITAKE >STACK
	RSTACK

	.FUNCT ITAKE,VB=1,CNT,OBJ,WLOC,TBL,?TMP
	FSET? PRSO,TAKEBIT /?L1
	ZERO? VB /FALSE
	CALL ROBOT-YUKS
	RFALSE
?L1:	CALL CCOUNT,WINNER >STACK
	EQUAL? STACK,NUM-EXT /?L7
	CALL CCOUNT,WINNER >STACK
	GRTR? STACK,NUM-EXT \?L6
?L7:	EQUAL? WINNER,WALDO \?L8
	FSET? SURGERY-HAND,WEARBIT \?L8
	GET EXTEN-QUIPS,7 >STACK
	CALL ROBOT-TELL,STACK
	RFALSE
?L8:	GET EXTEN-QUIPS,ROFF >STACK
	CALL ROBOT-TELL,STACK
	RFALSE
?L6:	LOC PRSO >STACK
	IN? STACK,WINNER /?L11
	CALL WEIGHT,PRSO >?TMP
	CALL WEIGHT,WINNER >STACK
	ADD ?TMP,STACK >STACK
	GRTR? STACK,LOAD-MAX \?L11
	ZERO? VB /?L21
	EQUAL? PRSO,BROKEN-SHELF /?L12
	CALL ROBOT-TELL,STR?35,0
	CALL CCOUNT,WINNER >STACK
	ZERO? STACK /?L14
	PRINTI " and what I'm carrying"
?L14:	PRINTI "."
	CRLF
	RETURN 2
?L12:	ZERO? VB /?L21
	CALL ROBOT-TELL,STR?36
?L21:	RETURN 2
?L11:	CALL CCOUNT,WINNER >CNT
	GRTR? CNT,FUMBLE-NUMBER \?L25
	MUL CNT,FUMBLE-PROB >?TMP
	RANDOM 100 >STACK
	GRTR? ?TMP,STACK \?L25
	FIRST? WINNER >OBJ /?L26
?L26:	NEXT? OBJ >OBJ /?L27
?L27:	CALL ROBOT-TELL,STR?37,0
	CALL NDESC,OBJ
	PRINTI " slips from my extenders while taking the "
	CALL NDESC,PRSO
	PRINTI " and both tumble to the ground."
	CRLF
	LOC WINNER >WLOC
	FSET? WLOC,RMUNGBIT \?L30
	CALL PERFORM,V?DROP,OBJ
	MOVE PRSO,WINNER
	CALL PERFORM,V?DROP,PRSO
	RETURN 2
?L30:	MOVE OBJ,WLOC
	MOVE PRSO,WLOC
	RETURN 2
?L25:	EQUAL? PRSO,REDSET,ORANGESET \?L40
	EQUAL? WINNER-HERE,TUBE1 \?L38
	SET 'ORANGESET,0
	JUMP ?L40
?L38:	EQUAL? WINNER-HERE,TUBE2 \?L40
	SET 'REDSET,0
?L40:	MOVE PRSO,WINNER
	FCLEAR PRSO,NDESCBIT
	FSET PRSO,TOUCHBIT
	RTRUE

	.FUNCT PRE-PUT
	EQUAL? PRSI,GROUND,WALLS,COMPLEX \?L1
	CALL PERFORM,V?DROP,PRSO
	RTRUE
?L1:	IN? PRSO,GLOBAL-OBJECTS /?L4
	FSET? PRSO,TAKEBIT /?L3
?L4:	PRINTR "FC: Nice try."
?L3:	ZERO? PRSI /FALSE
	EQUAL? PRSI,CONVEYERBELTA,CONVEYERBELTB,CONVEYERBELTC \?L8
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L8
	CALL PERFORM,V?PUSH-UP,PRSO,PRSI
	RTRUE
?L8:	EQUAL? PRSO,WEDGE \FALSE
	EQUAL? PRSI,STEP \FALSE
	CALL PERFORM,V?PUT-AGAINST,PRSO,PRSI
	RTRUE

	.FUNCT V-PUT-AGAINST
	EQUAL? PRSI,GROUND,WALLS,COMPLEX \?L1
	CALL PERFORM,V?DROP,PRSO
	RTRUE
?L1:	IN? PRSI,WINNER-HERE \?L3
	CALL ROBOT-TELL,STR?38
	MOVE WEDGE,WINNER-HERE
	RTRUE
?L3:	CALL CANT-DETECT,PRSO >STACK
	RSTACK

	.FUNCT V-PUT,?TMP
	FSET? PRSI,OPENBIT /?L5
	FSET? PRSI,DOORBIT /?L4
	FSET? PRSI,CONTBIT /?L4
	FSET? PRSI,VEHBIT /?L4
	CALL ROBOT-TELL,STR?39
	RTRUE
?L4:	FSET? PRSI,OPENBIT /?L5
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,PRSI
	PRINTR " isn't open."
?L5:	EQUAL? PRSI,PRSO \?L9
	CALL ROBOT-TELL,STR?40 >STACK
	RSTACK
?L9:	IN? PRSO,PRSI \?L10
	EQUAL? WINNER,WALDO \?L11
	EQUAL? PRSO,SURGERY-HAND \?L11
	CALL PERFORM,V?WEAR,PRSO
	RTRUE
?L11:	GETP PRSI,P?ROBOT >STACK
	ZERO? STACK /?L13
	CALL ROBOT-YUKS >STACK
	RSTACK
?L13:	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,PRSO
	PRINTI " is already in the "
	CALL NDESC,PRSI
	PRINTR "."
?L10:	CALL WEIGHT,PRSI >?TMP
	CALL WEIGHT,PRSO >STACK
	ADD ?TMP,STACK >?TMP
	GETP PRSI,P?SIZE >STACK
	SUB ?TMP,STACK >?TMP
	GETP PRSI,P?CAPACITY >STACK
	GRTR? ?TMP,STACK \?L17
	CALL ROBOT-TELL,STR?41 >STACK
	RSTACK
?L17:	CALL HELD?,PRSO >STACK
	ZERO? STACK \?L18
	CALL TRYTAKE >STACK
	ZERO? STACK /TRUE
?L18:	MOVE PRSO,PRSI
	FSET PRSO,TOUCHBIT
	CALL ROBOT-TELL,STR?19
	EQUAL? PRSI,PANEL \?L20
	ZERO? IRIS-FIXED \?L20
	IN? NEWCHIP1,PANEL \?L20
	IN? CHIP2,PANEL \?L20
	IN? CHIPS0,PANEL \?L20
	CRLF
	GET INTER-TBL,1 >STACK
	PRINT STACK
	PRINTR " OOOH! That felt good! Close my panel, big boy."
?L20:	EQUAL? PRSI,GROOVE1 \?L24
	SET 'ORANGESET,PRSO
	RETURN ORANGESET
?L24:	EQUAL? PRSI,GROOVE2 \FALSE
	SET 'REDSET,PRSO
	RETURN REDSET

	.FUNCT PRE-DROP
	LOC WINNER >STACK
	EQUAL? PRSO,STACK \FALSE
	CALL PERFORM,V?DISEMBARK,PRSO
	RTRUE

	.FUNCT PRE-SZAP
	CALL PERFORM,V?ZAP,PRSI,PRSO
	RTRUE

	.FUNCT PRE-ZAP
	ZERO? PRSI \FALSE
	FSET? PRSO,WEAPONBIT /FALSE
	PRINTI "You have nothing to shoot the "
	CALL NDESC,PRSO
	PRINTR " with."

	.FUNCT DONT-HAVE,OBJ
	CALL ROBOT-TELL,STR?1,0
	GETP OBJ,P?ROBOT >STACK
	ZERO? STACK \?L1
	PRINTI "the "
?L1:	CALL NDESC,OBJ
	PRINTR "."

	.FUNCT V-ZAP
	IN? PRSO,WINNER /?L1
	CALL DONT-HAVE,PRSO >STACK
	RSTACK
?L1:	FSET? PRSO,WEAPONBIT /?L3
	PRINTI "You can't use a "
	CALL NDESC,PRSO
	PRINTR " as a ray gun!"
?L3:	ZERO? PRSI \?L6
	PRINTR "At what?"
?L6:	PRINTR "Nothing happens."

	.FUNCT V-SZAP
	PRINTR "ZAPPP!!"

	.FUNCT PRE-GIVE
	CALL HELD?,PRSO >STACK
	ZERO? STACK \?L1
	CALL ROBOT-TELL,STR?42 >STACK
	RSTACK
?L1:	IN? PRSO,WINNER /?L3
	CALL ROBOT-TELL,STR?43
	RTRUE
?L3:	EQUAL? PRSI,PEOPLE \FALSE
	EQUAL? PRSO,TOOLBAG \?L5
	CALL INT,I-CHASEAUDA >STACK
	PUT STACK,0,0
	SET 'RTHIEF,0
	SET 'CHASING-THIEF,0
	ZERO? GIVEN-BAG /?L7
	CALL ENOUGH-TRADING
	RTRUE
?L7:	CALL PEOPLE-GIVEN-BAG
	RTRUE
?L5:	CALL ROBOT-TELL,STR?44
	RTRUE

	.FUNCT PRE-SGIVE
	CALL PERFORM,V?GIVE,PRSI,PRSO
	RTRUE

	.FUNCT V-GIVE,OBJ
	FSET? PRSI,VICBIT /?L1
	CALL ROBOT-TELL,STR?45,0
	CALL NDESC,PRSO
	PRINTI " to a "
	CALL NDESC,PRSI
	PRINTR "!"
?L1:	CALL IDROP >STACK
	ZERO? STACK /FALSE
	CALL ROBOT-TELL,STR?46
	SET 'OBJ,WINNER
	CALL CHANGE-WINNER,PRSI,1
	CALL ITAKE
	CALL CHANGE-WINNER,OBJ,1 >STACK
	RSTACK

	.FUNCT V-SGIVE
	PRINTR "FOOOO!!"

	.FUNCT V-DROP
	CALL IDROP >STACK
	ZERO? STACK /FALSE
	FSET? PRSO,WEARBIT \?L3
	PRINTI "(removing it first)"
	CRLF
	FCLEAR PRSO,WEARBIT
?L3:	CALL ROBOT-TELL,STR?47 >STACK
	RSTACK

	.FUNCT V-THROW
	CALL IDROP >STACK
	ZERO? STACK /FALSE
	CALL ROBOT-TELL,STR?48 >STACK
	RSTACK

	.FUNCT IDROP
	CALL HELD?,PRSO >STACK
	ZERO? STACK \?L1
	CALL ROBOT-TELL,STR?49,0
	CALL NDESC,PRSO
	PRINTI "."
	CRLF
	RFALSE
?L1:	IN? PRSO,WINNER /?L5
	LOC PRSO >STACK
	FSET? STACK,OPENBIT /?L5
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,PRSO
	PRINTI " is closed."
	CRLF
	RFALSE
?L5:	EQUAL? PRSO,SURGERY-HAND \?L9
	FSET? PRSO,WEARBIT \?L9
	FCLEAR PRSO,WEARBIT
?L9:	LOC WINNER >STACK
	MOVE PRSO,STACK
	RTRUE

	.FUNCT ALREADY,ON-OFF,OBJ=0
	ZERO? OBJ /?L1
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,OBJ
	PRINTI " is "
	JUMP ?L5
?L1:	CALL ROBOT-TELL,STR?50,0
?L5:	PRINTI "already "
	PRINT ON-OFF
	PRINTR "."

	.FUNCT V-OPEN,F,STR
	FSET? PRSO,VEHBIT \?L1
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,CAR
	PRINTR " opens only when a robot attempts to enter it."
?L1:	FSET? PRSO,CONTBIT /?L5
	CALL ROBOT-TELL,STR?51,0
	CALL NDESC,PRSO
	PRINTR "."
?L5:	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L8
	CALL ROBOT-TELL,STR?52,0
	CALL NDESC,PRSO
	PRINTR " is a robot. That's spelled R-O-B-O-T!"
?L8:	FSET? PRSO,SURFACEBIT \?L11
	CALL ROBOT-TELL,STR?53 >STACK
	RSTACK
?L11:	FSET? PRSO,DOORBIT /?L13
	GETP PRSO,P?CAPACITY >STACK
	ZERO? STACK /?L12
?L13:	FSET? PRSO,OPENBIT \?L14
	CALL ALREADY,STR?54 >STACK
	RSTACK
?L14:	FSET PRSO,OPENBIT
	FIRST? PRSO >STACK \?L19
	FSET? PRSO,TRANSBIT \?L17
?L19:	CALL ROBOT-TELL,STR?55 >STACK
	RSTACK
?L17:	CALL ROBOT-TELL,STR?56,0
	CALL NDESC,PRSO
	PRINTI " I detect "
	CALL PRINT-CONTENTS,PRSO
	PRINTR "."
?L12:	CALL NDESC,PRSO
	PRINTR " cannot be opened."

	.FUNCT V-CLOSE
	FSET? PRSO,CONTBIT /?L1
	CALL ROBOT-TELL,STR?57,0
	CALL NDESC,PRSO
	PRINTR "."
?L1:	FSET? PRSO,SURFACEBIT \?L5
	CALL ROBOT-TELL,STR?58 >STACK
	RSTACK
?L5:	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L6
	CALL ROBOT-TELL,STR?59,0
	CALL HE-SHE,PRSO
	PRINTR " would like that."
?L6:	FSET? PRSO,SURFACEBIT /?L9
	GETP PRSO,P?CAPACITY >STACK
	ZERO? STACK \?L10
	FSET? PRSO,DOORBIT \?L9
?L10:	FSET? PRSO,OPENBIT \?L11
	FCLEAR PRSO,OPENBIT
	CALL ROBOT-TELL,STR?60 >STACK
	RSTACK
?L11:	CALL ALREADY,STR?61 >STACK
	RSTACK
?L9:	CALL ROBOT-TELL,STR?62 >STACK
	RSTACK

	.FUNCT CCOUNT,OBJ,CNT=0,X
	FIRST? OBJ >X \?L4
?L3:	FSET? X,NDESCBIT /?L5
	INC 'CNT
?L5:	NEXT? X >X /?L3
?L4:	RETURN CNT

	.FUNCT CABLECOUNT,OBJ,CNT=0,X
	FIRST? OBJ >X \?L4
?L3:	INC 'CNT
	NEXT? X >X /?L3
?L4:	RETURN CNT

	.FUNCT WEIGHT,OBJ,CONT,WT=0
	FIRST? OBJ >CONT \?L4
?L3:	CALL WEIGHT,CONT >STACK
	ADD WT,STACK >WT
	NEXT? CONT >CONT /?L3
?L4:	GETP OBJ,P?SIZE >STACK
	ADD WT,STACK >STACK
	RSTACK

	.FUNCT V-SCRIPT
	GET 0,8 >STACK
	BOR STACK,1 >STACK
	PUT 0,8,STACK
	PRINTI "Here begins"
	PRINT COPR-NOTICE
	CRLF
	RTRUE

	.FUNCT V-UNSCRIPT
	PRINTI "Here ends"
	PRINT COPR-NOTICE
	CRLF
	GET 0,8 >STACK
	BAND STACK,-2 >STACK
	PUT 0,8,STACK
	RTRUE

	.FUNCT PRE-MOVE
	ZERO? PRSI /?L8
	EQUAL? PRSI,RIGHT,LEFT,INTNUM \FALSE
	GETP PRSO,P?DIAL >STACK
	ZERO? STACK /FALSE
	CALL PERFORM,V?SET,PRSO,PRSI
	RTRUE
?L8:	CALL HELD?,PRSO >STACK
	ZERO? STACK /FALSE
	CALL ROBOT-TELL,STR?65
	RTRUE

	.FUNCT V-MOVE
	EQUAL? PRSO,BROKEN-SHELF \?L1
	CALL ROBOT-TELL,STR?66,0
	FSET? SMASHED-BOX,INVISIBLE \?L3
	PRINTI " Moving it has revealed a "
	CALL NDESC,SMASHED-BOX
	PRINTI "."
	FCLEAR SMASHED-BOX,INVISIBLE
?L3:	CRLF
	RTRUE
?L1:	FSET? PRSO,TAKEBIT \?L8
	CALL ROBOT-TELL,STR?67,0
	CALL NDESC,PRSO
	PRINTR " reveals nothing."
?L8:	ZERO? PRSI \?L11
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L11
	FSET PRSO,CUTBIT
	EQUAL? WINNER-HERE,REPAIR1 /?L11
	CALL ROBOT-TELL,STR?68,0
	CALL NDESC,PRSO
	PRINTR " to be dragged, you should supply a location, too."
?L11:	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L14
	CALL PERFORM,V?PUSH-UP,PRSO,PRSI
	RTRUE
?L14:	CALL ROBOT-TELL,STR?69,0
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK \?L16
	PRINTI "the "
?L16:	CALL NDESC,PRSO
	PRINTR "."

	.FUNCT V-MOVE-ROBOT-TO-LOC
	EQUAL? PRSO,IRIS \?L1
	CALL ROBOT-TELL,STR?70 >STACK
	RSTACK
?L1:	EQUAL? PRSO,DEADBOT \?L3
	CALL ROBOT-TELL,STR?71 >STACK
	RSTACK
?L3:	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK \?L4
	CALL PERFORM,V?MOVE,PRSO
	RTRUE
?L4:	EQUAL? PRSO,WINNER \?L5
	CALL ROBOT-TELL,STR?72 >STACK
	RSTACK
?L5:	GET DRAG-TBL,ROFF >STACK
	ZERO? STACK /?L6
	CALL ROBOT-TELL,STR?73 >STACK
	RSTACK
?L6:	IN? PRSI,ROOMS /?L7
	CALL ROBOT-TELL,STR?74,0
	CALL NDESC,PRSI
	PRINTI " is."
	RTRUE
?L7:	GETP PRSO,P?ROBOT >STACK
	GET DEADBOTS,STACK >STACK
	ZERO? STACK \?L10
	CALL ROBOT-TELL,STR?75,0
	CALL NDESC,PRSO
	PRINTR " get there alone."
?L10:	PUT DRAG-TBL,ROFF,PRSO
	CALL PERFORM,V?WALK-TO,PRSI
	RETURN 2

	.FUNCT V-WAIT,NUM=3
	PRINTI "FC: Time passes..."
	CRLF
?L3:	DLESS? 'NUM,0 /?L4
	CALL CLOCKER >STACK
	ZERO? STACK /?L3
?L4:	SET 'CLOCK-WAIT,1
	RETURN CLOCK-WAIT

	.FUNCT PRE-BOARD,AV
	LOC WINNER >AV
	FSET? PRSO,VEHBIT \?L1
	FSET? AV,VEHBIT \FALSE
	CALL ROBOT-TELL,STR?76
	RETURN 2
?L1:	CALL ROBOT-TELL,STR?77,0
	CALL NDESC,PRSO
	PRINTI "."
	CRLF
	RETURN 2

	.FUNCT V-BOARD,AV
	ZERO? CAR-FULL /?L1
	CALL ROBOT-TELL,STR?78
	RTRUE
?L1:	EQUAL? WINNER,RTHIEF \?L4
	IN? TOOLBAG,WINNER \?L4
	MOVE PEOPLE,WINNER-HERE
	CALL I-CHASEAUDA
	CRLF
?L4:	CALL ROBOT-TELL,STR?79,0
	CALL NDESC,PRSO
	PRINTI "."
	CRLF
	MOVE WINNER,PRSO
	SET 'CAR-FULL,WINNER
	GET FOLLOW-TBL,ROFF >STACK
	ZERO? STACK /?L9
	PUT FOLLOW-TBL,0,ROFF
?L9:	CALL KILL-GOAL,WINNER,1
	EQUAL? WINNER-HERE,HALL-END \?L12
	SET 'WINNER-HERE,CAR-AREA
	JUMP ?L14
?L12:	EQUAL? WINNER-HERE,CAR-AREA \?L14
	SET 'WINNER-HERE,HALL-END
?L14:	MOVE CAR,WINNER-HERE
	CALL ROBOT-TELL,STR?80
	CRLF
	CALL V-LOOK
	CRLF
	CALL ROBOT-TELL,STR?81,0
	PRINTD WINNER-HERE
	CRLF
	RTRUE

	.FUNCT V-THROUGH,OBJ=0,M,TBL
	ZERO? OBJ \?L7
	FSET? PRSO,VEHBIT \?L1
	CALL PERFORM,V?BOARD,PRSO
	RTRUE
?L1:	ZERO? OBJ \?L7
	FSET? PRSO,TAKEBIT /?L3
	CALL ROBOT-YUKS >STACK
	RSTACK
?L3:	ZERO? OBJ /?L4
?L7:	CALL ROBOT-TELL,STR?82 >STACK
	RSTACK
?L4:	IN? PRSO,WINNER \?L5
	CALL ROBOT-TELL,STR?83 >STACK
	RSTACK
?L5:	CALL ROBOT-YUKS >STACK
	RSTACK

	.FUNCT V-DISEMBARK
	LOC WINNER >STACK
	EQUAL? STACK,PRSO /?L1
	CALL ROBOT-TELL,STR?84
	RETURN 2
?L1:	CALL ROBOT-TELL,STR?85
	MOVE WINNER,WINNER-HERE
	SET 'CAR-FULL,0
	RETURN CAR-FULL

	.FUNCT GOTO,RM,V?=1,WLOC,OLIT,COUNT=0,L,F
	LOC WINNER >WLOC
	SET 'OLIT,LIT
	MOVE WINNER,RM
	SET 'WINNER-HERE,RM
?L1:	IGRTR? 'COUNT,6 /?L2
	GET FOLLOW-TBL,COUNT >STACK
	EQUAL? STACK,WINNER \?L1
	SUB COUNT,1 >STACK
	GET NAME-TBL,STACK >F
	LOC F >STACK
	CALL MOVE-RBT?,F,STACK,WINNER-HERE >STACK
	ZERO? STACK /?L1
?L2:	CALL LIT?,WINNER-HERE >LIT
	GETP WINNER-HERE,P?ACTION >STACK
	CALL STACK,M-ENTER >STACK
	EQUAL? STACK,2 /TRUE
	ZERO? V? /TRUE
	CALL V-LOOK
	RTRUE

	.FUNCT V-DRINK
	CALL V-EAT >STACK
	RSTACK

	.FUNCT V-EAT
	GET EAT-QUIPS,ROFF >STACK
	CALL ROBOT-TELL,STACK >STACK
	RSTACK

	.FUNCT V-CURSES
	CALL PRINT-ID,STR?86
	ZERO? PRSO /?L1
	FSET? PRSO,VILLAIN \?L3
	PRINTR "Insults of this nature won't help you."
?L3:	PRINTR "What a loony!"
?L1:	PRINTR "Such language in a high-class establishment like this!"

	.FUNCT PRE-LISTEN
	EQUAL? WINNER,AUDA /FALSE
	CALL ROBOT-TELL,STR?87 >STACK
	RSTACK

	.FUNCT V-LISTEN
	EQUAL? PRSO,0,PEOPLE /?L1
	CALL ROBOT-TELL,STR?88 >STACK
	RSTACK
?L1:	ZERO? AUDA-LISTENS /?L3
	CALL ROBOT-TELL,STR?89 >STACK
	RSTACK
?L3:	CALL ROBOT-TELL,STR?90
	SET 'AUDA-LISTENS,1
	RETURN AUDA-LISTENS

	.FUNCT V-FOLLOW
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK \?L1
	CALL ROBOT-TELL,STR?91,0
	CALL NDESC,PRSO
	PRINTI "."
	CRLF
	RETURN 2
?L1:	LOC PRSO >STACK
	IN? WINNER,STACK /?L8
	GETP PRSO,P?ROBOT >STACK
	GET LAST-ROOM,STACK >STACK
	EQUAL? STACK,WINNER-HERE /?L8
	CALL ROBOT-TELL,STR?92,0
	GETP PRSO,P?ROBOT >STACK
	EQUAL? STACK,7 \?L10
	PRINTI "the "
	CALL NDESC,PRSO
	PRINTI " are."
	CRLF
	RETURN 2
?L10:	CALL NDESC,PRSO
	PRINTI " is."
	CRLF
	RETURN 2
?L8:	EQUAL? PRSO,WINNER \?L20
	CALL ROBOT-TELL,STR?93
	RTRUE
?L20:	CALL DO-THE-TV
	CALL ROBOT-TELL,STR?94,0
	GETP PRSO,P?ROBOT >STACK
	EQUAL? STACK,7 \?L23
	PRINTI "the "
?L23:	CALL NDESC,PRSO
	PRINTI "."
	CRLF
	PUT FOLLOW-TBL,ROFF,PRSO
	CALL KILL-GOAL,WINNER >STACK
	RSTACK

	.FUNCT V-LEAP,T,S
	ZERO? PRSO /?L1
	IN? PRSO,WINNER-HERE \?L3
	FSET? PRSO,VILLAIN \?L5
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,PRSO
	PRINTR " is too big to jump over."
?L5:	CALL V-SKIP >STACK
	RSTACK
?L3:	CALL ROBOT-TELL,STR?95 >STACK
	RSTACK
?L1:	GETPT WINNER-HERE,P?DOWN >T
	ZERO? T /?L11
	PTSIZE T >S
	EQUAL? S,2 /?L14
	EQUAL? S,4 \?L12
	GETB T,1 >STACK
	VALUE STACK >STACK
	ZERO? STACK \?L12
?L14:	PRINTI "FC: This was not a very safe place to try jumping."
	CRLF
	CALL PRINT-ID,STR?96
	CALL JIGS-UP,STR?97,WINNER >STACK
	RSTACK
?L12:	CALL V-SKIP >STACK
	RSTACK
?L11:	CALL V-SKIP >STACK
	RSTACK

	.FUNCT V-SKIP
	CALL ROBOT-YUKS >STACK
	RSTACK

	.FUNCT V-LEAVE
	CALL DO-WALK,P?OUT >STACK
	RSTACK

	.FUNCT V-HELLO
	ZERO? PRSO /?L1
	CALL ROBOT-TELL,STR?98,0
	CALL NDESC,PRSO
	PRINTR "."
?L1:	CALL PICK-ONE,HELLOS >STACK
	CALL ROBOT-TELL,STACK >STACK
	RSTACK

	.FUNCT V-HINT,TEMP
	GET DEADBOTS,6 >STACK
	GRTR? STACK,29 \?L1
	PRINTR "FC: Whiz is no longer operational, and there's nothing I can do to help you without him."
?L1:	IN? WHIZ,PERIPH-3 \?L8
	ZERO? PLUGGED-IN /?L5
	PRINTR "FC: Whiz is plugged in to the Advisory Pedestal and ready to ask about things for you."
?L5:	IN? WHIZ,PERIPH-3 \?L8
	SET 'PLUGGED-IN,3
	PRINTI "FC: I've taken the liberty of directing Whiz to plug in to the Advisory Pedestal. You may now direct him to ask about things for you."
	CRLF
	CALL CHANGE-WINNER,WHIZ >STACK
	RSTACK
?L8:	PRINTI "FC: I'm taking the liberty of directing Whiz to the Advisory Peripheral so you may later have him ask about things."
	CRLF
	SET 'TEMP,WINNER
	CALL CHANGE-WINNER,WHIZ,1
	CRLF
	CALL PERFORM,V?WALK-TO,PERIPH-3
	RTRUE

	.FUNCT V-READ
	EQUAL? PRSO,MONITOR \?L1
	EQUAL? WINNER,IRIS \?L1
	ZERO? IRIS-FIXED /?L1
	LOC IRIS >STACK
	EQUAL? STACK,WEATHER-BANKS,RTD-BANKS,SERVO-SYSTEMS \?L1
	CALL V-LOOK
	RTRUE
?L1:	EQUAL? PRSO,CIRCLE1,CIRCLE2,CIRCLE3 /?L4
	EQUAL? PRSO,CIRCLE4,CIRCLE5,CIRCLE6 /?L4
	EQUAL? PRSO,CIRCLE7,CIRCLE8 \?L3
?L4:	CALL PERFORM,V?EXAMINE,PRSO
	RTRUE
?L3:	EQUAL? PRSO,SIGNPOST \?L5
	EQUAL? WINNER,IRIS /?L5
	CALL ROBOT-TELL,STR?99
	RTRUE
?L5:	CALL ROBOT-TELL,STR?100,0
	CALL NDESC,PRSO
	PRINTR "?"

	.FUNCT V-LOOK-UNDER
	EQUAL? PRSO,BROKEN-SHELF \?L1
	FSET? SMASHED-BOX,INVISIBLE \?L1
	EQUAL? WINNER,AUDA /?L1
	CALL ROBOT-TELL,STR?101 >STACK
	RSTACK
?L1:	CALL ROBOT-TELL,STR?102 >STACK
	RSTACK

	.FUNCT V-LOOK-BEHIND
	CALL V-LOOK-UNDER >STACK
	RSTACK

	.FUNCT V-LOOK-INSIDE
	FSET? PRSO,CONTBIT \?L1
	FSET? PRSO,VICBIT \?L3
	CALL ROBOT-TELL,STR?103 >STACK
	RSTACK
?L3:	CALL SEE-INSIDE?,PRSO >STACK
	ZERO? STACK /?L5
	FIRST? PRSO >STACK \?L6
	CALL PRINT-CONT,PRSO >STACK
	ZERO? STACK \TRUE
?L6:	FSET? PRSO,SURFACEBIT \?L8
	CALL ROBOT-TELL,STR?104,0
	CALL NDESC,PRSO
	PRINTR "."
?L8:	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,PRSO
	PRINTR " is empty."
?L5:	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,PRSO
	PRINTR " is closed."
?L1:	CALL ROBOT-TELL,STR?105,0
	CALL NDESC,PRSO
	PRINTR "."

	.FUNCT SEE-INSIDE?,OBJ
	FSET? OBJ,INVISIBLE /FALSE
	FSET? OBJ,TRANSBIT /TRUE
	FSET? OBJ,OPENBIT /TRUE
	RFALSE

	.FUNCT PRE-TURN
	FSET? PRSO,TURNBIT /?L1
	CALL ROBOT-TELL,STR?106 >STACK
	RSTACK
?L1:	FSET? PRSI,TOOLBIT /FALSE
	CALL ROBOT-TELL,STR?107,0
	CALL NDESC,PRSI
	PRINTR "."

	.FUNCT V-TURN
	CALL ROBOT-TELL,STR?108 >STACK
	RSTACK

	.FUNCT V-PICK
	CALL V-TURN >STACK
	RSTACK

	.FUNCT V-KILL
	CALL IS-PERSON? >STACK
	CALL PRINT-ID,STR?109,STACK
	CALL IS-OBJECT-OR-PROPERTY? >STACK
	CALL PRINT-ID,STR?110,STACK
	CALL IKILL,STR?111 >STACK
	RSTACK

	.FUNCT IKILL,STR
	ZERO? PRSO \?L1
	PRINTI "There is nothing here to "
	PRINT STR
	PRINTR "."
?L1:	FSET? PRSO,VILLAIN /?L5
	FSET? PRSO,VICBIT /?L5
	CALL ROBOT-TELL,STR?112,0
	CALL NDESC,PRSO
	PRINTR "?"
?L5:	ZERO? PRSI /?L9
	EQUAL? PRSI,HANDS \?L8
?L9:	CALL FUTILE,STR >STACK
	RSTACK
?L8:	FSET? PRSI,WEAPONBIT /?L10
	CALL ROBOT-TELL,STR?113,0
	PRINT STR
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK \?L13
	PRINTI " the"
?L13:	PRINTI " "
	CALL NDESC,PRSO
	PRINTI " with a "
	CALL NDESC,PRSI
	GET HO-HUMS,ROFF >STACK
	PRINT STACK
	CRLF
	RTRUE
?L10:	PRINTR "I can't."

	.FUNCT V-ATTACK,?TMP
	CALL IS-PERSON? >?TMP
	ZERO? ?TMP /?L2
	PUSH ?TMP
	JUMP ?L1
?L2:	CALL IS-OBJECT-OR-PROPERTY? >STACK
?L1:	CALL PRINT-ID,STR?114,STACK
	CALL IKILL,STR?115 >STACK
	RSTACK

	.FUNCT V-KICK,?TMP
	CALL IS-PERSON? >?TMP
	ZERO? ?TMP /?L2
	PUSH ?TMP
	JUMP ?L1
?L2:	CALL IS-OBJECT-OR-PROPERTY? >STACK
?L1:	CALL PRINT-ID,STR?116,STACK
	CALL HACK-HACK,STR?117 >STACK
	RSTACK

	.FUNCT V-WAVE
	CALL HACK-HACK,STR?118 >STACK
	RSTACK

	.FUNCT V-RAISE
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L1
	IN? WINNER,REPAIR1 \?L1
	CALL PERFORM,V?PUSH-UP,PRSO,WEDGE
	RTRUE
?L1:	CALL HACK-HACK,STR?119 >STACK
	RSTACK

	.FUNCT V-LOWER
	CALL HACK-HACK,STR?119 >STACK
	RSTACK

	.FUNCT V-RUB
	CALL IS-PERSON? >STACK
	CALL PRINT-ID,STR?120,STACK
	CALL HACK-HACK,STR?121 >STACK
	RSTACK

	.FUNCT V-PUSH
	CALL HACK-HACK,STR?122 >STACK
	RSTACK

	.FUNCT PRE-MUNG
	FSET? PRSO,VICBIT /?L1
	CALL HACK-HACK,STR?123 >STACK
	RSTACK
?L1:	ZERO? PRSI \FALSE
	CALL FUTILE,STR?124 >STACK
	RSTACK

	.FUNCT FUTILE,STR
	CALL ROBOT-TELL,STR?113,0
	PRINT STR
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK \?L3
	PRINTI " a"
?L3:	PRINTI " "
	CALL NDESC,PRSO
	GET HO-HUMS,ROFF >STACK
	PRINT STACK
	CRLF
	RTRUE

	.FUNCT V-MUNG
	CALL IS-PERSON? >STACK
	CALL PRINT-ID,STR?125,STACK
	CALL IS-OBJECT-OR-PROPERTY? >STACK
	CALL PRINT-ID,STR?126,STACK
	CALL ROBOT-TELL,STR?39 >STACK
	RSTACK

	.FUNCT HACK-HACK,STR
	PRINT STR
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK \?L3
	PRINTI "the "
?L3:	CALL NDESC,PRSO
	GET HO-HUMS,ROFF >STACK
	PRINT STACK
	CRLF
	RTRUE

	.FUNCT WORD-TYPE,OBJ,WORD,SYNS
	GETPT OBJ,P?SYNONYM >SYNS
	PTSIZE SYNS >STACK
	DIV STACK,2 >STACK
	DEC 'STACK
	CALL ZMEMQ,WORD,SYNS,STACK >STACK
	RSTACK

	.FUNCT V-KNOCK
	CALL ROBOT-TELL,STR?127,0
	CALL NDESC,PRSO
	PRINTR "?"

	.FUNCT V-YELL
	GET YELL-QUIPS,ROFF >STACK
	CALL ROBOT-TELL,STACK >STACK
	RSTACK

	.FUNCT V-PLUGIN,TBL
	EQUAL? WINNER,WHIZ /?L1
	CALL ROBOT-YUKS >STACK
	RSTACK
?L1:	ZERO? PLUGGED-IN /?L3
	CALL ROBOT-TELL,STR?128,0
	GET PLUG-LOCS,PLUGGED-IN >STACK
	PRINT STACK
	CRLF
	RTRUE
?L3:	EQUAL? PRSO,PERIPH1-OBJ,PERIPH2-OBJ,PERIPH3-OBJ /?L6
	EQUAL? PRSO,PERIPH4-OBJ,ROOMS /?L6
	CALL ROBOT-TELL,STR?129,0
	CALL NDESC,PRSO
	PRINTR "."
?L6:	EQUAL? WINNER-HERE,PERIPH-1,PERIPH-2 /?L10
	EQUAL? WINNER-HERE,PERIPH-3,PERIPH-4 \?L9
?L10:	EQUAL? WINNER-HERE,PERIPH-1 \?L11
	SET 'PLUGGED-IN,1
	JUMP ?L15
?L11:	EQUAL? WINNER-HERE,PERIPH-2 \?L13
	SET 'PLUGGED-IN,2
	JUMP ?L15
?L13:	EQUAL? WINNER-HERE,PERIPH-3 \?L14
	SET 'PLUGGED-IN,3
	JUMP ?L15
?L14:	EQUAL? WINNER-HERE,PERIPH-4 \?L15
	SET 'PLUGGED-IN,4
?L15:	CALL ROBOT-TELL,STR?130,0
	GET PLUG-LOCS,PLUGGED-IN >STACK
	PRINT STACK
	PRINTR " Ready to process queries."
?L9:	CALL ROBOT-TELL,STR?131 >STACK
	RSTACK

	.FUNCT V-UNPLUG
	EQUAL? WINNER,WHIZ /?L1
	CALL ROBOT-TELL,STR?132 >STACK
	RSTACK
?L1:	ZERO? PLUGGED-IN \?L3
	CALL ROBOT-TELL,STR?133 >STACK
	RSTACK
?L3:	SET 'PLUGGED-IN,0
	CALL ROBOT-TELL,STR?134 >STACK
	RSTACK

	.FUNCT V-QUERY
	EQUAL? WINNER,WHIZ /?L3
	ZERO? PRSO \?L1
	CALL ROBOT-TELL,STR?135 >STACK
	RSTACK
?L1:	EQUAL? WINNER,WHIZ /?L3
	PRINTI "FC: I'm translating that command into a request for a description of the "
	CALL NDESC,PRSO
	PRINTI "."
	CRLF
	CALL PERFORM,V?EXAMINE,PRSO
	RTRUE
?L3:	ZERO? PLUGGED-IN \?L6
	CALL ROBOT-TELL,STR?136
	RETURN 2
?L6:	ZERO? PRSI \?L9
	CALL DO-QUERY
	RTRUE
?L9:	EQUAL? PRSO,PERIPH1-OBJ,PERIPH2-OBJ,PERIPH3-OBJ /?L11
	EQUAL? PRSO,PERIPH4-OBJ /?L11
	IN? WHIZ,PERIPH-1 /?L11
	IN? WHIZ,PERIPH-2 /?L11
	IN? WHIZ,PERIPH-3 /?L11
	IN? WHIZ,PERIPH-4 \?L10
?L11:	SET 'PRSO,PRSI
	CALL DO-QUERY
	RTRUE
?L10:	CALL ROBOT-TELL,STR?137,0
	CALL NDESC,PRSO
	PRINTR "."

	.FUNCT DO-QUERY,STR,OUTSTR,COUNT=0
	GETP PRSO,P?CLC-TXT >STR
	GET PLUGOUTS,PLUGGED-IN >OUTSTR
	ZERO? STR \?L1
	EQUAL? PLUGGED-IN,1 \?L3
	PRINT OUTSTR
	PRINTR "Index search indicates no data stored on that subject."
?L3:	PRINT OUTSTR
	PRINTI "No data available on that subject from the "
	GET PLUG-LOCS,PLUGGED-IN >STACK
	PRINT STACK
	CRLF
	RTRUE
?L1:	EQUAL? PLUGGED-IN,1 \?L10
?L11:	INC 'COUNT
	EQUAL? COUNT,4 /TRUE
	GET STR,COUNT >STACK
	ZERO? STACK /?L11
	PRINT OUTSTR
	PRINTI "Data available from the "
	ADD COUNT,1 >STACK
	GET PLUG-LOCS,STACK >STACK
	PRINT STACK
	CRLF
	JUMP ?L11
?L10:	SUB PLUGGED-IN,1 >STACK
	GET STR,STACK >STR
	ZERO? STR /?L22
	PRINT OUTSTR
	PRINT STR
	CRLF
	RTRUE
?L22:	PRINT OUTSTR
	PRINTR "No data available on that subject at this peripheral."

	.FUNCT V-SHAKE,X
	FSET? PRSO,VILLAIN \?L1
	CALL ROBOT-TELL,STR?138 >STACK
	RSTACK
?L1:	FSET? PRSO,OPENBIT /?L13
	FIRST? PRSO >STACK \?L3
	CALL ROBOT-TELL,STR?139,0
	CALL NDESC,PRSO
	PRINTR "."
?L3:	FSET? PRSO,OPENBIT \?L6
?L13:	FIRST? PRSO >STACK \?L6
?L7:	FIRST? PRSO >X \?L8
	MOVE X,WINNER-HERE
	JUMP ?L7
?L8:	CALL ROBOT-TELL,STR?140 >STACK
	RSTACK
?L6:	CALL ROBOT-TELL,STR?141 >STACK
	RSTACK

	.FUNCT V-DIG
	CALL ROBOT-TELL,STR?142 >STACK
	RSTACK

	.FUNCT V-SMELL
	CALL ROBOT-TELL,STR?39 >STACK
	RSTACK

	.FUNCT GLOBAL-IN?,OBJ1,OBJ2,T
	GETPT OBJ2,P?GLOBAL >T
	ZERO? T /FALSE
	PTSIZE T >STACK
	DEC 'STACK
	CALL ZMEMQB,OBJ1,T,STACK >STACK
	RSTACK

	.FUNCT HERE??,OBJ
	IN? OBJ,WINNER-HERE /TRUE
	CALL GLOBAL-IN?,OBJ,WINNER-HERE >STACK
	RSTACK

	.FUNCT V-SWIM
	CALL ROBOT-TELL,STR?143 >STACK
	RSTACK

	.FUNCT V-ALARM
	EQUAL? PRSO,PEOPLE /?L1
	CALL ROBOT-TELL,STR?144
	RETURN 2
?L1:	GRTR? SLEEPERS,0 \?L5
	IN? PEOPLE,SLEEP-CHAMBER \?L5
	IN? WINNER,SLEEP-CHAMBER \?L5
	CALL ROBOT-TELL,STR?145
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L6
	CALL AUDA-SPEAKS
	CRLF
	PRINTI """Beat it, you stupid robot! Can't you see we're trying to sleep?!"""
	CRLF
?L6:	CALL ROBOT-THERE?,WALDO >STACK
	ZERO? STACK /?L11
	CRLF
	PRINTI "WALDO: The "
	CALL NDESC,PEOPLE
	PRINTR " are motioning violently and then resuming their reclining positions."
?L11:	CALL ROBOT-THERE?,SENSA >STACK
	ZERO? STACK /?L15
	CRLF
	PRINTI "SENSA: The air is becoming charged with ionic activity as the "
	CALL NDESC,PEOPLE
	PRINTR " stir from quiescence. They then return to a quiet state."
?L15:	CALL ROBOT-THERE?,POET >STACK
	ZERO? STACK /FALSE
	CRLF
	PRINTI "POET: Like loaves of bread sitting on a warm oven, the "
	CALL NDESC,PEOPLE
	PRINTR " rise then fall."
?L5:	CALL ROBOT-TELL,STR?146 >STACK
	RSTACK

	.FUNCT V-ZORK
	PRINTR "I see no Zork here."

	.FUNCT V-COMMAND
	FSET? PRSO,VICBIT \?L1
	PRINTI "The "
	CALL NDESC,PRSO
	PRINTR " pays no attention."
?L1:	PRINTR "You cannot talk to that!"

	.FUNCT V-CLIMB-ON
	FSET? PRSO,FURNITURE \?L1
	FSET? PRSO,VEHBIT \?L1
	CALL PERFORM,V?BOARD,PRSO
	RTRUE
?L1:	FSET? PRSO,CLIMBBIT \?L3
	CALL PERFORM,V-CLIMB-ON,PRSO >STACK
	RSTACK
?L3:	FSET? PRSO,VEHBIT \?L4
	CALL V-CLIMB-UP,P?UP,1 >STACK
	RSTACK
?L4:	PRINTI "I can't climb onto the "
	CALL NDESC,PRSO
	PRINTR "."

	.FUNCT V-GET-OFF
	GETP WINNER,P?ROBOT >STACK
	EQUAL? STACK,ON-WEDGE /?L1
	CALL ROBOT-TELL,STR?147 >STACK
	RSTACK
?L1:	SET 'ON-WEDGE,0
	CALL ROBOT-TELL,STR?148 >STACK
	RSTACK

	.FUNCT V-CLIMB-FOO
	CALL V-CLIMB-UP,P?UP,1 >STACK
	RSTACK

	.FUNCT V-CLIMB-UP,DIR=P?UP,OBJ=0,X
	GETPT WINNER-HERE,DIR >STACK
	ZERO? STACK /?L1
	CALL DO-WALK,DIR
	RTRUE
?L1:	ZERO? OBJ \?L3
	GET CANT-GO,ROFF >STACK
	PRINT STACK
	CRLF
	RTRUE
?L3:	EQUAL? PRSO,WEDGE \?L6
	CALL PERFORM,V?CLIMB-ON,PRSO
	RTRUE
?L6:	PRINTR "Bizarre!"

	.FUNCT V-CLIMB-DOWN
	FSET? PRSO,FURNITURE \?L1
	FSET? PRSO,VEHBIT \?L1
	CALL V-CLIMB-ON
	RTRUE
?L1:	EQUAL? PRSO,WEDGE \?L3
	CALL PERFORM,V?GET-OFF,PRSO
	RTRUE
?L3:	CALL V-CLIMB-UP,P?DOWN >STACK
	RSTACK

	.FUNCT V-PUT-UNDER
	EQUAL? PRSI,TOPSHELF,WHEEL,CLONESWITCH \?L1
	CALL PERFORM,V?DROP,PRSO
	RTRUE
?L1:	PRINTR "I can't do that."

	.FUNCT V-ENTER
	CALL DO-WALK,P?IN >STACK
	RSTACK

	.FUNCT V-EXIT
	CALL DO-WALK,P?OUT >STACK
	RSTACK

	.FUNCT V-SEARCH
	FSET? PRSO,CONTBIT \?L1
	CALL PERFORM,V?LOOK-INSIDE,PRSO
	RTRUE
?L1:	CALL ROBOT-TELL,STR?149 >STACK
	RSTACK

	.FUNCT V-FIND,L
	LOC PRSO >L
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L1
	IN? PRSO,WINNER-HERE /?L1
	CALL PERFORM,V?WALK-TO,PRSO
	RTRUE
?L1:	EQUAL? L,GLOBAL-OBJECTS \?L3
	CALL ROBOT-TELL,STR?150 >STACK
	RSTACK
?L3:	IN? PRSO,WINNER \?L4
	CALL ROBOT-TELL,STR?151 >STACK
	RSTACK
?L4:	IN? PRSO,WINNER-HERE /?L6
	EQUAL? PRSO,PSEUDO-OBJECT \?L5
?L6:	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L7
	CALL NDESC,PRSO
	PRINTI " is"
	JUMP ?L11
?L7:	PRINTI "It's"
?L11:	PRINTR " right here."
?L5:	FSET? L,VILLAIN \?L16
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,L
	PRINTR " have it."
?L16:	FSET? L,CONTBIT \?L19
	CALL ROBOT-TELL,STR?152,0
	CALL NDESC,L
	PRINTR "."
?L19:	CALL ROBOT-TELL,STR?153 >STACK
	RSTACK

	.FUNCT REAL-ROBOT,OBJ
	EQUAL? OBJ,GLOBAL-IRIS \?L1
	RETURN IRIS
?L1:	EQUAL? OBJ,GLOBAL-WALDO \?L3
	RETURN WALDO
?L3:	EQUAL? OBJ,GLOBAL-AUDA \?L4
	RETURN AUDA
?L4:	EQUAL? OBJ,GLOBAL-SENSA \?L5
	RETURN SENSA
?L5:	EQUAL? OBJ,GLOBAL-POET \?L6
	RETURN POET
?L6:	EQUAL? OBJ,GLOBAL-WHIZ \?L7
	RETURN WHIZ
?L7:	RETURN PEOPLE

	.FUNCT V-$0024TELL
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L1
	EQUAL? PRSO,PEOPLE /?L1
	IN? PRSO,GLOBAL-OBJECTS \?L3
	CALL REAL-ROBOT,PRSO >PRSO
?L3:	SET 'OLD-WINNER,WINNER
	CALL CHANGE-WINNER,PRSO >STACK
	RSTACK
?L1:	PRINTI "FC: You can't talk to the "
	CALL NDESC,PRSO
	PRINTI "!"
	CRLF
	SET 'QUOTE-FLAG,0
	SET 'P-CONT,0
	RETURN 2

	.FUNCT V-ANSWER
	PRINTI "Nobody is awaiting your answer."
	CRLF
	RETURN 2

	.FUNCT V-REPLY
	PRINTI "It is hardly likely that the "
	CALL NDESC,PRSO
	PRINTI " is interested."
	CRLF
	RETURN 2

	.FUNCT V-IS-IN
	IN? PRSO,PRSI \?L1
	PRINTI "Yes, it is "
	FSET? PRSI,SURFACEBIT \?L5
	PRINTI "on"
	JUMP ?L9
?L5:	PRINTI "in"
?L9:	PRINTI " the "
	CALL NDESC,PRSI
	PRINTR "."
?L1:	PRINTR "No, it isn't."

	.FUNCT V-KISS
	EQUAL? WINNER,IRIS \?L1
	CALL ROBOT-TELL,STR?154 >STACK
	RSTACK
?L1:	EQUAL? WINNER,WALDO \?L3
	CALL ROBOT-TELL,STR?155 >STACK
	RSTACK
?L3:	EQUAL? WINNER,SENSA \?L4
	CALL ROBOT-TELL,STR?39 >STACK
	RSTACK
?L4:	EQUAL? WINNER,AUDA \?L5
	CALL ROBOT-TELL,STR?156 >STACK
	RSTACK
?L5:	EQUAL? WINNER,POET \?L6
	CALL ROBOT-TELL,STR?157 >STACK
	RSTACK
?L6:	EQUAL? WINNER,WHIZ \FALSE
	CALL ROBOT-TELL,STR?158 >STACK
	RSTACK

	.FUNCT V-RAPE
	CALL IS-PERSON? >STACK
	CALL PRINT-ID,STR?159,STACK
	CALL ROBOT-TELL,STR?160 >STACK
	RSTACK

	.FUNCT FIND-IN,WHERE,WHAT,W
	FIRST? WHERE >W \FALSE
?L2:	FSET? W,WHAT \?L7
	RETURN W
?L7:	NEXT? W >W /?L2
	RFALSE

	.FUNCT V-WEAR
	FSET? PRSO,WEARABLEBIT /?L1
	CALL ROBOT-TELL,STR?161 >STACK
	RSTACK
?L1:	CALL ROBOT-TELL,STR?162
	FSET PRSO,WEARBIT
	RTRUE

	.FUNCT V-REMOVE
	FSET? PRSO,WEARBIT \?L1
	CALL PERFORM,V?TAKE-OFF,PRSO
	RTRUE
?L1:	CALL PERFORM,V?TAKE,PRSO
	RTRUE

	.FUNCT V-TAKE-OFF
	FSET? PRSO,VEHBIT \?L1
	CALL V-DISEMBARK >STACK
	RSTACK
?L1:	FSET? PRSO,WEARBIT \?L3
	FCLEAR PRSO,WEARBIT
	CALL ROBOT-TELL,STR?163
	RTRUE
?L3:	CALL ROBOT-TELL,STR?164 >STACK
	RSTACK

	.FUNCT V-STEP-ON
	EQUAL? PRSO,WEDGE \?L1
	CALL PERFORM,V?CLIMB-ON,PRSO
	RTRUE
?L1:	EQUAL? PRSO,CONVEYERBELTA,CONVEYERBELTB,CONVEYERBELTC \?L3
	CALL ROBOT-TELL,STR?165 >STACK
	RSTACK
?L3:	PRINTR "That's a silly thing to do."

	.FUNCT V-PUT-ON
	EQUAL? PRSI,TOPSHELF \?L1
	GETP WINNER,P?ROBOT >STACK
	EQUAL? STACK,ON-WEDGE /?L1
	CALL ROBOT-TELL,STR?166 >STACK
	RSTACK
?L1:	CALL PERFORM,V?PUT,PRSO,PRSI >STACK
	RSTACK

	.FUNCT ROB,WHO,WHERE=0,HIDE?=0,N,X,ROBBED?=0
	FIRST? WHO >X /?L4
	RETURN ROBBED?
?L1:	ZERO? X \?L4
	RETURN ROBBED?
?L4:	NEXT? X >N /?L7
?L7:	CALL RIPOFF,X,WHERE >STACK
	ZERO? STACK /?L8
	ZERO? HIDE? /?L10
	FSET X,NDESCBIT
?L10:	SET 'ROBBED?,X
?L8:	SET 'X,N
	JUMP ?L1

	.FUNCT RIPOFF,X,WHERE
	IN? X,WHERE /FALSE
	FSET? X,INVISIBLE /FALSE
	FSET? X,TOUCHBIT \FALSE
	FSET? X,TAKEBIT \FALSE
	ZERO? WHERE /?L3
	MOVE X,WHERE
	RTRUE
?L3:	REMOVE X
	RTRUE

	.FUNCT V-STAND
	LOC WINNER >STACK
	FSET? STACK,VEHBIT \?L1
	LOC WINNER >STACK
	CALL PERFORM,V?DISEMBARK,STACK
	RTRUE
?L1:	PRINTR "I'm already standing, I think."

	.FUNCT V-NO
	PRINTR "FC: You sound rather negative."

	.FUNCT V-YES
	PRINTR "FC: You sound rather positive."

	.FUNCT V-POINT,W
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L1
	CALL ROBOT-TELL,STR?75,0
	CALL HIM-HER,PRSO
	PRINTI " do it "
	CALL HIM-HER,PRSO
	EQUAL? PRSO,PEOPLE \?L5
	PRINTR "selves."
?L5:	PRINTR "self."
?L1:	EQUAL? PRSO,TV /?L12
	CALL ROBOT-TELL,STR?167 >STACK
	RSTACK
?L12:	EQUAL? PRSO,PRSI \?L13
	CALL ROBOT-TELL,STR?168 >STACK
	RSTACK
?L13:	IN? PRSI,GLOBAL-OBJECTS \?L14
	EQUAL? PRSI,GLOBAL-IRIS,GLOBAL-WALDO,GLOBAL-SENSA /?L14
	EQUAL? PRSI,GLOBAL-AUDA,GLOBAL-POET,GLOBAL-WHIZ /?L14
	PRINTR "FC: There's no need to do that."
?L14:	ZERO? TV-ON /?L18
	ZERO? IRIS-FIXED /?L18
	FSET? IRIS,CUTBIT \?L17
?L18:	CALL ROBOT-TELL,STR?38 >STACK
	RSTACK
?L17:	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,TV
	PRINTI " has been pointed at "
	GETP PRSI,P?ROBOT >STACK
	ZERO? STACK \?L22
	PRINTI "the "
?L22:	CALL NDESC,PRSI
	PRINTI "."
	CRLF
	CRLF
	EQUAL? PRSI,GROOVE1,GROOVE2,CABLES \?L29
	SET 'W,WINNER
	CALL CHANGE-WINNER,IRIS,1
	GET INTER-TBL,1 >STACK
	PRINT STACK
	PRINTI " Transmission indicates the cables rest in the grooves in the following order: "
	IN? W,TUBE2 \?L33
	ZERO? REDSET /?L35
	CALL NDESC,REDSET
	JUMP ?L39
?L35:	PRINTI "empty"
?L39:	PRINTI "; "
	CALL NDESC,YELLOWCABLE
	PRINTI "; "
	CALL NDESC,GREENCABLE
	PRINTI "; and "
	CALL NDESC,PINKCABLE
	PRINTI ". "
	JUMP ?L51
?L33:	CALL NDESC,WHITECABLE
	PRINTI "; "
	CALL NDESC,BLUECABLE
	PRINTI "; "
	CALL NDESC,BLACKCABLE
	PRINTI "; and "
	ZERO? ORANGESET /?L47
	CALL NDESC,ORANGESET
	PRINTI ". "
	JUMP ?L51
?L47:	PRINTI "empty. "
?L51:	GET CABLE-TBL,ROFF >STACK
	PRINT STACK
	CRLF
	CALL CHANGE-WINNER,W,1
	RTRUE
?L29:	EQUAL? PRSI,SIGNPOST \?L56
	SET 'W,WINNER
	CALL CHANGE-WINNER,IRIS,1
	GET INTER-TBL,1 >STACK
	PRINT STACK
	PRINTI " The little sign presents me with the access code the machine in the Main Supply Room needs to reset the Filtering Computers. It says "
	PRINTD CODE1
	PRINTD CODE2
	PRINTI "."
	CRLF
	CALL CHANGE-WINNER,W,1
	RTRUE
?L56:	GET INTER-TBL,1 >STACK
	PRINT STACK
	PRINTI " "
	CALL PICK-ONE,IRIS-TV-QUIPS >STACK
	PRINT STACK
	GETP PRSI,P?ROBOT >STACK
	ZERO? STACK \?L62
	PRINTI "a "
?L62:	SET 'W,WINNER
	CALL CHANGE-WINNER,IRIS,1
	CALL NDESC,PRSI
	PRINTI "."
	CRLF
	CALL CHANGE-WINNER,W,1 >STACK
	RSTACK

	.FUNCT V-SET,DIALOFF,OLDNUM
	GETP PRSO,P?DIAL >DIALOFF
	ZERO? DIALOFF \?L1
	CALL ROBOT-TELL,STR?169,0
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK \?L3
	PRINTI "a "
?L3:	CALL NDESC,PRSO
	PRINTR "."
?L1:	EQUAL? PRSI,INTNUM,RIGHT,LEFT /?L11
	CALL ROBOT-TELL,STR?170
	RTRUE
?L11:	GET DIALSETS,DIALOFF >OLDNUM
	EQUAL? PRSI,RIGHT \?L14
	ADD OLDNUM,10 >P-NUMBER
	GRTR? P-NUMBER,100 \?L43
	CALL ROBOT-TELL,STR?171,0
	EQUAL? PRSO,LEVER1,LEVER2,LEVER3 \?L18
	PRINTI "forward"
	JUMP ?L22
?L18:	PRINTI "right"
?L22:	PRINTI " any more."
	CRLF
	JUMP ?L41
?L14:	EQUAL? PRSI,LEFT \?L41
	ZERO? OLDNUM \?L29
	CALL ROBOT-TELL,STR?171,0
	EQUAL? PRSO,LEVER1,LEVER2,LEVER3 \?L31
	PRINTI "back"
	JUMP ?L35
?L31:	PRINTI "left"
?L35:	PRINTR " any more."
?L29:	LESS? OLDNUM,10 \?L40
	SET 'P-NUMBER,0
	JUMP ?L41
?L40:	SUB OLDNUM,10 >P-NUMBER
?L41:	GRTR? P-NUMBER,100 \?L43
	CALL ROBOT-TELL,STR?172
	RTRUE
?L43:	EQUAL? P-NUMBER,OLDNUM \?L46
	CALL ROBOT-TELL,STR?173
	RTRUE
?L46:	PUT DIALSETS,DIALOFF,P-NUMBER
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,PRSO
	PRINTI " has been set to "
	PRINTN P-NUMBER
	PRINTR "."

	.FUNCT V-PLAY
	PRINTI "Playing a "
	CALL NDESC,PRSO
	PRINTR "?"

	.FUNCT V-$0024VERIFY
	PRINTI "Verifying game..."
	CRLF
	VERIFY \?L3
	PRINTR "Game correct."
?L3:	CRLF
	PRINTR "** Game File Failure **"

	.FUNCT V-STAND-ON
	EQUAL? WEDGE,PRSO \?L1
	CALL PERFORM,V?CLIMB-ON,PRSO
	RTRUE
?L1:	CALL ROBOT-TELL,STR?174 >STACK
	RSTACK

	.FUNCT V-ALL-REPORT,TEMP,COUNT=-1,ROB?1
	SET 'TEMP,WINNER
?L1:	INC 'COUNT
	EQUAL? COUNT,6 /?L2
	GET NAME-TBL,COUNT >ROB?1
	FSET? ROB?1,CUTBIT \?L6
	PRINTI "FC: "
	PRINTD ROB?1
	PRINTI " is no longer functional."
	CRLF
	CALL CLOCKER
	LESS? COUNT,5 \?L1
	CRLF
	JUMP ?L1
?L6:	CALL CHANGE-WINNER,ROB?1,1
	CALL CLOCKER
	CALL PERFORM,V?REPORT
	LESS? COUNT,5 \?L1
	CRLF
	JUMP ?L1
?L2:	CALL CHANGE-WINNER,TEMP,1 >STACK
	RSTACK

	.FUNCT V-ALL-REPORT-LOC,TEMP,COUNT=-1,ROB?1
	SET 'TEMP,WINNER
?L1:	INC 'COUNT
	EQUAL? COUNT,6 /?L2
	GET NAME-TBL,COUNT >ROB?1
	FSET? ROB?1,CUTBIT \?L6
	PRINTI "FC: "
	PRINTD ROB?1
	PRINTI " is no longer in communication."
	CRLF
	JUMP ?L1
?L6:	CALL CHANGE-WINNER,ROB?1,1
	CALL PERFORM,V?REPORT-LOC
	JUMP ?L1
?L2:	CALL CHANGE-WINNER,TEMP,1 >STACK
	RSTACK

	.FUNCT V-REPORT
	PRINTI "FC: Full report from "
	GET ROBOT-NAMES,ROFF >STACK
	PRINT STACK
	CRLF
	CALL V-LOOK
	CALL V-INVENTORY
	EQUAL? WINNER,AUDA \?L11
	ZERO? AUDA-LISTENS /?L7
	PRINTI "Auditory circuits active."
	CRLF
	JUMP ?L11
?L7:	PRINTI "Auditory circuits inactive."
	CRLF
?L11:	EQUAL? WINNER,POET \?L15
	CALL PERFORM,V?TOUCH,WINNER-HERE
	RTRUE
?L15:	EQUAL? WINNER,WHIZ \FALSE
	ZERO? PLUGGED-IN /?L20
	PRINTI "Plugged in at "
	GET PLUG-LOCS,PLUGGED-IN >STACK
	PRINT STACK
	CRLF
	RTRUE
?L20:	PRINTR "Unable to process queries at this time."

	.FUNCT V-REPORT-LOC
	EQUAL? PRSO,0,LOCATION /?L1
	CALL PERFORM,V?EXAMINE,PRSO
	RTRUE
?L1:	CALL IN-MOTION?,WINNER >STACK
	ZERO? STACK /?L4
	CALL ROBOT-TELL,STR?175,0
	JUMP ?L6
?L4:	CALL ROBOT-TELL,STR?176,0
?L6:	IN? WINNER,CAR \?L7
	CALL NDESC,CAR
	JUMP ?L11
?L7:	LOC WINNER >STACK
	PRINTD STACK
?L11:	PRINTR "."

	.FUNCT V-LOOK-SAFELY
	FSET? PRSI,TRANSBIT \?L1
	PRINTI "The "
	CALL NDESC,PRSO
	PRINTI " looks as before, only tinged by the color of the "
	CALL NDESC,PRSI
	PRINTR "."
?L1:	PRINTI "The "
	CALL NDESC,PRSI
	PRINTR " isn't transparent."

	.FUNCT V-REACH
	FIRST? PRSO >STACK \?L1
	PRINTI "There is something"
	JUMP ?L5
?L1:	PRINTI "There is nothing"
?L5:	FSET? PRSO,SURFACEBIT \?L8
	PRINTI " sitting on the "
	JUMP ?L12
?L8:	PRINTI " inside the "
?L12:	CALL NDESC,PRSO
	PRINTR "."

	.FUNCT V-REACH-FOR
	FSET? PRSO,TAKEBIT \?L1
	CALL PERFORM,V?TAKE,PRSO
	RTRUE
?L1:	IN? PRSO,WINNER-HERE \?L3
	PRINTR "It's here! Now what?"
?L3:	PRINTR "It is out of reach."

	.FUNCT DO-WALK,DIR
	SET 'P-WALK-DIR,DIR
	CALL PERFORM,V?WALK,DIR >STACK
	RSTACK

	.FUNCT V-WALK-TO
	EQUAL? PRSO,CAR \?L1
	LOC CAR >PRSO
?L1:	EQUAL? PRSO,HELL \?L4
	PRINTR "FC: What makes you think you're not already there?"
?L4:	EQUAL? PRSO,WINNER-HERE,WINNER \?L8
	GET WALK-INSULTS,ROFF >STACK
	CALL ROBOT-TELL,STACK >STACK
	RSTACK
?L8:	IN? PRSO,ROOMS \?L9
	GET FOLLOW-TBL,ROFF >STACK
	ZERO? STACK /?L10
	PUT FOLLOW-TBL,ROFF,0
?L10:	CALL KILL-GOAL,WINNER
	CALL SET-GOAL,WINNER,PRSO
	CALL DO-THE-TV
	GET ORDER-RCD,ROFF >STACK
	CALL ROBOT-TELL,STACK
	CALL CHECK-MORE? >STACK
	RSTACK
?L9:	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L13
	LOC PRSO >STACK
	CALL SET-GOAL,WINNER,STACK
	CALL DO-THE-TV
	FSET? PRSO,CUTBIT /?L14
	PRINTI "FC: "
	CALL NDESC,PRSO
	PRINTI "'s location: "
	JUMP ?L18
?L14:	PRINTI "FC: "
	CALL NDESC,PRSO
	PRINTI " is non-functional. Last known location: "
?L18:	LOC PRSO >STACK
	PRINTD STACK
	PRINTI ". Establishing path..."
	CRLF
	GET ORDER-RCD,ROFF >STACK
	CALL ROBOT-TELL,STACK
	GET FOLLOW-TBL,ROFF >STACK
	ZERO? STACK /?L23
	PUT FOLLOW-TBL,ROFF,0
?L23:	PUT ROBOT-FOLLOW,ROFF,PRSO
	CALL CHECK-MORE? >STACK
	RSTACK
?L13:	IN? PRSO,WINNER-HERE \?L26
	CALL ROBOT-TELL,STR?177 >STACK
	RSTACK
?L26:	CALL ROBOT-TELL,STR?178 >STACK
	RSTACK

	.FUNCT CHECK-MORE?
	ZERO? P-CONT /FALSE
	CRLF
	PRINTI "FC: When "
	CALL NDESC,WINNER
	PRINTI " arrives, you'll have to tell "
	CALL HIM-HER,WINNER
	PRINTI " what to do then. I have too much to keep track of already."
	CRLF
	RETURN 2

	.FUNCT DO-THE-TV
	LOC WINNER >STACK
	EQUAL? STACK,TUBE1,TUBE2 \?L1
	IN? TV,WINNER \?L1
	ZERO? TV-ON /?L1
	SET 'TV-ON,0
	PRINTI "(Unplugging "
	CALL NDESC,TV
	PRINTR " first.)"
?L1:	GETP WINNER,P?ROBOT >STACK
	EQUAL? ON-WEDGE,STACK \FALSE
	PRINTI "(getting off the "
	CALL NDESC,WEDGE
	PRINTI " first.)"
	CRLF
	SET 'ON-WEDGE,0
	RETURN ON-WEDGE

	.FUNCT V-STOP
	ZERO? PRSO /?L16
	EQUAL? PRSO,LISTENING,DRAGGING /?L1
	CALL ROBOT-TELL,STR?17,0
	EQUAL? PRSO,PEOPLE \?L3
	PRINTI "the "
?L3:	CALL NDESC,PRSO
	PRINTR "."
?L1:	ZERO? PRSO /?L16
	EQUAL? PRSO,LISTENING \?L11
	EQUAL? WINNER,AUDA \?L11
	CALL ROBOT-TELL,STR?179
	SET 'AUDA-LISTENS,0
	RTRUE
?L11:	ZERO? PRSO /?L16
	EQUAL? PRSO,DRAGGING \?L13
	GET DRAG-TBL,ROFF >STACK
	ZERO? STACK /?L13
	CALL ROBOT-TELL,STR?180,0
	CALL HIM-HER,PRSO
	PRINTI "."
	CRLF
	PUT DRAG-TBL,ROFF,0
	RTRUE
?L13:	ZERO? PRSO /?L16
	CALL ROBOT-YUKS >STACK
	RSTACK
?L16:	CALL IN-MOTION?,WINNER >STACK
	ZERO? STACK \?L17
	CALL ROBOT-TELL,STR?181
	PUT FOLLOW-TBL,ROFF,0
	RTRUE
?L17:	CALL KILL-GOAL,WINNER
	CALL ROBOT-TELL,STR?182,0
	PRINTD WINNER-HERE
	PRINTI "."
	CRLF
	PUT FOLLOW-TBL,ROFF,0
	RTRUE

	.FUNCT V-FLY
	CALL ROBOT-TELL,STR?183 >STACK
	RSTACK

	.FUNCT V-SMILE
	CALL ROBOT-TELL,STR?184 >STACK
	RSTACK

	.FUNCT GRASPING?,OBJ
?L1:	ZERO? OBJ /FALSE
	IN? OBJ,WINNER /TRUE
	LOC OBJ >OBJ
	JUMP ?L1

	.FUNCT PRE-REPLACE,OBJ,?TMP
	SET '?TMP,NUM-EXT
	CALL CCOUNT,WINNER >STACK
	EQUAL? ?TMP,STACK \?L1
	CALL ROBOT-TELL,STR?185
	RTRUE
?L1:	CALL GRASPING?,PRSI >STACK
	ZERO? STACK \?L3
	CALL GRASPING?,PRSO >STACK
	ZERO? STACK \?L3
	CALL ROBOT-TELL,STR?186
	RETURN 2
?L3:	EQUAL? PRSO,PRSI \?L6
	CALL ROBOT-TELL,STR?187
	RETURN 2
?L6:	CALL GRASPING?,PRSO >STACK
	ZERO? STACK /FALSE
	SET 'OBJ,PRSO
	SET 'PRSO,PRSI
	SET 'PRSI,OBJ
	RFALSE

	.FUNCT V-REPLACE,LOC
	FSET? PRSO,TAKEBIT /?L1
	CALL ROBOT-TELL,STR?188 >STACK
	RSTACK
?L1:	GETP PRSO,P?SIZE >STACK
	GETP PRSI,P?SIZE >STACK
	EQUAL? STACK,STACK /?L3
	CALL ROBOT-TELL,STR?189,0
	CALL NDESC,PRSO
	PRINTI " and the "
	CALL NDESC,PRSI
	PRINTR " aren't the same size."
?L3:	LOC PRSO >LOC
	FSET PRSO,TOUCHBIT
	MOVE PRSO,WINNER
	MOVE PRSI,LOC
	CALL ROBOT-TELL,STR?190
	EQUAL? LOC,PANEL \?L7
	ZERO? IRIS-FIXED \?L7
	IN? NEWCHIP1,PANEL \?L7
	IN? CHIP2,PANEL \?L7
	IN? CHIPS0,PANEL \?L7
	CRLF
	GET INTER-TBL,1 >STACK
	PRINT STACK
	PRINTR " OOOH! That felt good! Close my panel, big boy."
?L7:	EQUAL? LOC,GROOVE2 \?L11
	SET 'REDSET,PRSI
	RETURN REDSET
?L11:	EQUAL? LOC,GROOVE1 \FALSE
	SET 'ORANGESET,PRSI
	RETURN ORANGESET

	.FUNCT V-CUT
	ZERO? PRSI \?L1
	CALL ROBOT-TELL,STR?191
	RTRUE
?L1:	FSET? PRSO,CUTABLEBIT /?L3
	CALL ROBOT-TELL,STR?192
	RTRUE
?L3:	FSET? PRSO,CUTBIT \?L4
	CALL ROBOT-TELL,STR?193
	RTRUE
?L4:	EQUAL? PRSI,0,WIRECUTTER /?L5
	CALL ROBOT-TELL,STR?59,0
	GETP PRSI,P?ROBOT >STACK
	ZERO? STACK \?L6
	PRINTI "the "
?L6:	CALL NDESC,PRSI
	PRINTR " will work very well for this job."
?L5:	FSET PRSO,CUTBIT
	FSET PRSO,TOUCHBIT
	CALL ROBOT-TELL,STR?19 >STACK
	RSTACK

	.FUNCT V-TOUCH,NUM=0,TBL,?TMP
	EQUAL? WINNER,POET \?L1
	IN? PRSO,ROOMS \?L3
	GETP WINNER-HERE,P?ROOMDESCS >TBL
	GET TBL,0 >NUM
	JUMP ?L5
?L3:	SET '?TMP,WINNER-HERE
	CALL META-LOC,PRSO >STACK
	EQUAL? ?TMP,STACK \?L5
	GETP PRSO,P?OBJDESCS >TBL
	GET TBL,0 >NUM
?L5:	GRTR? NUM,18 \?L7
	GET TBL,19 >STACK
	CALL ROBOT-TELL,STACK >STACK
	RSTACK
?L7:	CALL ROBOT-TELL,STR?194 >STACK
	RSTACK
?L1:	EQUAL? WINNER,WALDO \?L10
	CALL PERFORM,V?EXAMINE,PRSO
	RTRUE
?L10:	CALL ROBOT-TELL,STR?195 >STACK
	RSTACK

	.FUNCT META-LOC,OBJ
?L1:	IN? OBJ,GLOBAL-OBJECTS /FALSE
	IN? OBJ,ROOMS \?L6
	RETURN OBJ
?L6:	LOC OBJ >OBJ
	JUMP ?L1

	.FUNCT V-PUSH-UP
	LOC WINNER >STACK
	IN? PRSO,STACK /?L1
	CALL CANT-DETECT,PRSO
	RTRUE
?L1:	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK \?L3
	CALL PERFORM,V?PUSH,PRSO >STACK
	RSTACK
?L3:	EQUAL? PRSO,WINNER \?L4
	PRINTR "FC: I think you're following the path of Franklin."
?L4:	GETP PRSO,P?ROBOT >STACK
	GET DEADBOTS,STACK >STACK
	LESS? STACK,30 \?L7
	CALL ROBOT-TELL,STR?196,0
	CALL HE-SHE,PRSO
	PRINTR " keeps moving away."
?L7:	IN? WINNER,REPAIR1 \?L10
	EQUAL? WEDGE-PLACED,1 \?L10
	CALL ROBOT-TELL,STR?197
	MOVE PRSO,CONVEYERBELTA
	SET 'ON-WEDGE,WINNER
	SET 'BELT-ON,1
	CALL INT,I-BELT >STACK
	GET STACK,C-ENABLED? >STACK
	ZERO? STACK \?L11
	CALL QUEUE,I-BELT,2 >STACK
	PUT STACK,0,1
?L11:	FSET PRSO,FIXABLEBIT
	RTRUE
?L10:	CALL ROBOT-TELL,STR?198,0
	CALL HIM-HER,PRSO
	PRINTR " up that high from where I am."

	.FUNCT V-REPAIR
	EQUAL? PRSO,DEADBOT,REDCABLE,PINKCABLE /?L3
	EQUAL? PRSO,WHITECABLE,BLUECABLE,BLACKCABLE /?L3
	EQUAL? PRSO,ORANGECABLE,YELLOWCABLE,GREENCABLE /?L3
	EQUAL? PRSO,MACHINE,IRIS,FCS \?L1
?L3:	CALL ROBOT-TELL,STR?199 >STACK
	RSTACK
?L1:	CALL ROBOT-TELL,STR?200 >STACK
	RSTACK

	.FUNCT BIG-NUM-PRINT,NUM,TEMP
	ZERO? NUM \?L1
	PRINTI "0"
	RTRUE
?L1:	GRTR? NUM,999 \?L5
	DIV NUM,1000 >TEMP
	MOD NUM,1000 >NUM
	PRINTN TEMP
	PRINTI ","
	ZERO? NUM \?L8
	PRINTI "000"
	JUMP ?L21
?L8:	LESS? NUM,10 \?L12
	PRINTI "00"
	PRINTN NUM
	JUMP ?L21
?L12:	LESS? NUM,100 \?L15
	PRINTI "0"
	PRINTN NUM
	JUMP ?L21
?L15:	PRINTN NUM
	JUMP ?L21
?L5:	PRINTN NUM
?L21:	PRINTI ",000"
	RTRUE

	.FUNCT V-ADVANCED
	ZERO? ADVANCED-FLAG /?L1
	PRINTR "FC: You are already in the advanced situation."
?L1:	GRTR? MOVES,1 \?L5
	GET INTER-TBL,7 >STACK
	PRINT STACK
	PRINTI " Your request for the advanced game has been rejected since "
	PRINTN MOVES
	PRINTR " cycles have already transpired. Please consult your indoctrination manual for the proper procedure."
?L5:	PRINTI "FC: Request for advanced game acknowledged."
	CRLF
	CALL QUEUE,I-TREMOR1,3
	CALL I-TREMOR2
	CRLF
	CALL INT,I-TREMOR2 >STACK
	PUT STACK,0,0
	SET 'PEOPLE-APPEAR,80
	CALL QUEUE,I-PEOPLE1,PEOPLE-APPEAR >STACK
	PUT STACK,0,1
	SET 'RTD-KILLS,2
	SET 'ACID-KILLS,2
	SET 'DYING1,1
	SET 'DYING2,2
	SET 'DYING3,3
	CALL INT,I-AUDA-HINTS >STACK
	PUT STACK,0,0
	CALL INT,I-IRIS-HINTS >STACK
	PUT STACK,0,0
	PUT DEADBOTS,6,30
	FSET WHIZ,CUTBIT
	CALL V-ALL-REPORT-LOC
	SET 'ADVANCED-FLAG,1
	RETURN ADVANCED-FLAG

	.FUNCT V-IMPOSSIBLE
	GRTR? MOVES,1 \?L1
	PRINTR "FC: It is impossible to do that now. Please refer to your indoctrination manual for the proper way to initiate the impossible game."
?L1:	CALL QUEUE,I-IMP,2 >STACK
	PUT STACK,0,1
	PRINTI "FC: Okay, you asked for it..."
	CRLF
	CRLF
	PRINTR "FC INTERRUPT: External sensors detect huge radiation abnormalities in the star which provides Contra with all light and heat.

WARNING! TIME CRITICAL!!

External sensors detect significant instability in the star."

	.FUNCT I-IMP
	CRLF
	PRINTI "FC INTERRUPT: Oh oh. Abnormalities in star approaching critical level. 	       NOVA IMMINENT!

So long from all the gang -- Iris, Waldo, Sensa, Auda, Poet, Whiz, FRED, and last but not least, we three FCs."
	CRLF
	QUIT

	.FUNCT V-WHY
	EQUAL? WINNER,WHIZ /?L1
	CALL ROBOT-TELL,STR?201 >STACK
	RSTACK
?L1:	CALL ROBOT-TELL,STR?202 >STACK
	RSTACK

	.FUNCT ROBOT-TELL,STR,CR?=1
	EQUAL? WINNER,OLD-WINNER /?L1
	GET ROBOT-NAMES,ROFF >STACK
	PRINT STACK
	PRINTI ": "
?L1:	PRINT STR
	ZERO? CR? /TRUE
	CRLF
	RTRUE

	.FUNCT HE-SHE,OBJ
	EQUAL? OBJ,IRIS,SENSA,AUDA \?L1
	PRINTI "she"
	RTRUE
?L1:	EQUAL? OBJ,PEOPLE \?L5
	PRINTI "they"
	RTRUE
?L5:	PRINTI "he"
	RTRUE

	.FUNCT HIM-HER,OBJ
	EQUAL? OBJ,IRIS,SENSA,AUDA \?L1
	PRINTI "her"
	RTRUE
?L1:	EQUAL? OBJ,PEOPLE \?L5
	PRINTI "them"
	RTRUE
?L5:	PRINTI "him"
	RTRUE

	.FUNCT CANT-DETECT,OBJ,CR?=1,TEMPROFF
	GET DETECT-TBL,ROFF >STACK
	CALL ROBOT-TELL,STACK,0
	GETP OBJ,P?ROBOT >STACK
	ZERO? STACK /?L1
	PRINTI " "
	JUMP ?L5
?L1:	PRINTI " any "
?L5:	CALL NDESC,OBJ
	PRINTI " here."
	ZERO? CR? /TRUE
	CRLF
	RTRUE

	.FUNCT ROBOT-YUKS
	GET R-YUKS,ROFF >STACK
	CALL PICK-ONE,STACK >STACK
	CALL ROBOT-TELL,STACK >STACK
	RSTACK

	.FUNCT DEAD-FCN,ROB?1=0,COUNT=0,TEMP,L
	ZERO? ROB?1 /?L1
	PRINTI "FC: "
	CALL NDESC,ROB?1
	PRINTI " is no longer functional."
	CRLF
?L1:	ZERO? OLD-WINNER /?L8
	GETP OLD-WINNER,P?ROBOT >STACK
	GET DEADBOTS,STACK >TEMP
	LESS? TEMP,30 \?L8
	SET 'WINNER,OLD-WINNER
	SET 'OLD-WINNER,0
	LOC WINNER >L
	IN? L,ROOMS \?L10
	SET 'WINNER-HERE,L
	JUMP ?L12
?L10:	LOC L >WINNER-HERE
?L12:	GETP WINNER,P?ROBOT >ROFF
	SET 'HERE,WINNER
	PRINTI "FC: Cryolink reestablished to "
	PRINTD WINNER
	PRINTI "."
	CRLF
	SET 'QUOTE-FLAG,0
	SET 'P-CONT,0
	RETURN 2
?L8:	INC 'COUNT
	EQUAL? COUNT,7 \?L23
	PRINTI "FC: There's no point in continuing. All the robots are history and, for that matter, so are the people on the surface."
	CRLF
	CALL PRINT-ID,STR?203
	QUIT
?L23:	GET DEADBOTS,COUNT >TEMP
	LESS? TEMP,30 \?L8
	SUB COUNT,1 >STACK
	GET NAME-TBL,STACK >WINNER
	SET 'OLD-WINNER,0
	LOC WINNER >L
	IN? L,ROOMS \?L30
	SET 'WINNER-HERE,L
	JUMP ?L32
?L30:	LOC L >WINNER-HERE
?L32:	GETP WINNER,P?ROBOT >ROFF
	SET 'HERE,WINNER
	PRINTI "FC: Cryolink established to "
	PRINTD WINNER
	PRINTI "."
	CRLF
	SET 'QUOTE-FLAG,0
	SET 'P-CONT,0
	RETURN 2

	.FUNCT IRIS-FCN
	EQUAL? WINNER,IRIS \?L1
	GET DEADBOTS,1 >STACK
	GRTR? STACK,29 \?L3
	CALL DEAD-FCN,IRIS
	RETURN 2
?L3:	SET 'LOAD-MAX,75
	SET 'NUM-EXT,2
	EQUAL? PRSA,V?EXAMINE \FALSE
	ZERO? IRIS-FIXED \?L10
	CALL ROBOT-TELL,STR?204
	RTRUE
?L10:	EQUAL? PRSO,WINNER \FALSE
	CALL ROBOT-YUKS
	RTRUE
?L1:	EQUAL? PRSA,V?CLOSE,V?OPEN \?L15
	CALL PERFORM,PRSA,PANEL
	RTRUE
?L15:	EQUAL? PRSA,V?LOOK-INSIDE,V?EXAMINE \FALSE
	FSET? PANEL,OPENBIT \FALSE
	GETP PANEL,P?OBJDESCS >STACK
	GET STACK,ROFF >STACK
	ZERO? STACK /FALSE
	EQUAL? PRSA,V?EXAMINE \?L17
	GETP PANEL,P?OBJDESCS >STACK
	GET STACK,ROFF >STACK
?L17:	PRINTI "The "
	CALL NDESC,PANEL
	PRINTI " is open"
	FIRST? PANEL >STACK \?L22
	PRINTI " and behind it I detect "
	CALL PRINT-CONTENTS,PANEL
?L22:	PRINTR "."

	.FUNCT WALDO-FCN
	EQUAL? WINNER,WALDO \FALSE
	GET DEADBOTS,2 >STACK
	GRTR? STACK,29 \?L3
	CALL DEAD-FCN,WALDO
	RETURN 2
?L3:	SET 'LOAD-MAX,100
	FSET? SURGERY-HAND,WEARBIT \?L8
	SET 'NUM-EXT,7
	JUMP ?L10
?L8:	SET 'NUM-EXT,6
?L10:	EQUAL? PRSA,V?TOUCH \?L11
	CALL PERFORM,V?EXAMINE,PRSO
	RTRUE
?L11:	EQUAL? PRSA,V?EXAMINE \FALSE
	EQUAL? PRSO,WINNER \FALSE
	CALL ROBOT-YUKS
	RTRUE

	.FUNCT SENSA-FCN
	EQUAL? WINNER,SENSA \FALSE
	GET DEADBOTS,3 >STACK
	GRTR? STACK,29 \?L3
	CALL DEAD-FCN,SENSA
	RETURN 2
?L3:	SET 'LOAD-MAX,60
	SET 'NUM-EXT,3
	EQUAL? PRSA,V?EXAMINE \FALSE
	EQUAL? PRSO,WINNER \FALSE
	CALL ROBOT-YUKS
	RTRUE

	.FUNCT AUDA-FCN
	EQUAL? WINNER,AUDA \FALSE
	GET DEADBOTS,4 >STACK
	GRTR? STACK,29 \?L3
	CALL DEAD-FCN,AUDA
	RETURN 2
?L3:	SET 'LOAD-MAX,70
	SET 'NUM-EXT,1
	EQUAL? PRSA,V?EXAMINE \FALSE
	EQUAL? PRSO,WINNER \FALSE
	CALL ROBOT-YUKS
	RTRUE

	.FUNCT POET-FCN
	EQUAL? WINNER,POET \FALSE
	GET DEADBOTS,5 >STACK
	GRTR? STACK,29 \?L3
	CALL DEAD-FCN,POET
	RETURN 2
?L3:	SET 'LOAD-MAX,20
	SET 'NUM-EXT,3
	EQUAL? PRSA,V?EXAMINE \FALSE
	EQUAL? PRSO,WINNER \FALSE
	CALL ROBOT-YUKS
	RTRUE

	.FUNCT WHIZ-FCN
	EQUAL? WINNER,WHIZ \FALSE
	GET DEADBOTS,6 >STACK
	GRTR? STACK,29 \?L3
	CALL DEAD-FCN,WHIZ
	RETURN 2
?L3:	SET 'LOAD-MAX,50
	SET 'NUM-EXT,2
	EQUAL? PRSA,V?EXAMINE \?L8
	EQUAL? PRSO,WINNER \?L10
	CALL ROBOT-YUKS
	RTRUE
?L10:	ZERO? PLUGGED-IN /FALSE
	CALL PERFORM,V?QUERY,PRSO
	RTRUE
?L8:	EQUAL? PRSA,V?MOVE-ROBOT-TO-LOC /?L15
	EQUAL? PRSA,V?FOLLOW,V?WALK-TO,V?WALK \FALSE
?L15:	ZERO? PLUGGED-IN /FALSE
	PRINTI "(Unplugging first.)"
	CRLF
	SET 'PLUGGED-IN,0
	RFALSE

	.FUNCT GLOBAL-ROBOT
	EQUAL? PRSA,V?FOLLOW /?L3
	EQUAL? PRSA,V?QUERY,V?WALK-TO,V?$0024TELL \?L1
?L3:	GETP PRSO,P?ROBOT >STACK
	DEC 'STACK
	GET NAME-TBL,STACK >PRSO
	RFALSE
?L1:	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK /?L5
	CALL REAL-ROBOT,PRSO >STACK
	CALL CANT-DETECT,STACK
	RTRUE
?L5:	GETP PRSI,P?ROBOT >STACK
	ZERO? STACK /FALSE
	CALL REAL-ROBOT,PRSI >STACK
	CALL CANT-DETECT,STACK
	RTRUE

	.FUNCT TWOBOTS-FCN
	GET P-ACTORS,1 >STACK
	GETP STACK,P?ROBOT >STACK
	GET DEADBOTS,STACK >STACK
	GRTR? STACK,29 /?L3
	GET P-ACTORS,2 >STACK
	GETP STACK,P?ROBOT >STACK
	GET DEADBOTS,STACK >STACK
	GRTR? STACK,29 \?L1
?L3:	PRINTI "FC: Unable to comply with those robots."
	CRLF
	GET P-ACTORS,1 >STACK
	CALL CHANGE-WINNER,STACK
	RTRUE
?L1:	EQUAL? PRSA,V?MOVE,V?TAKE /?L6
	PRINTI "FC: Using two robots will not help accomplish that task."
	CRLF
	GET P-ACTORS,1 >STACK
	CALL CHANGE-WINNER,STACK
	RTRUE
?L6:	EQUAL? PRSO,DEADBOT \?L17
	FSET? REDWIRE,INVISIBLE \?L9
	FSET? CABINET,OPENBIT /?L10
	PRINTI "FC: Neither robot can detect that object here."
	CRLF
	GET P-ACTORS,1 >STACK
	CALL CHANGE-WINNER,STACK
	RTRUE
?L10:	PRINTI "FC: The robots have moved it."
	CRLF
	MOVE DEADBOT,WINNER-HERE
	FCLEAR REDWIRE,INVISIBLE
	GET P-ACTORS,1 >STACK
	CALL CHANGE-WINNER,STACK
	FSET DEADBOT,TOUCHBIT
	RTRUE
?L9:	EQUAL? PRSO,DEADBOT \?L17
	FSET? REDWIRE,INVISIBLE /?L17
	PRINTI "FC: There's nothing to be gained by moving it again."
	CRLF
	GET P-ACTORS,1 >STACK
	CALL CHANGE-WINNER,STACK
	RTRUE
?L17:	PRINTI "FC: Using two robots will not help accomplish that task."
	CRLF
	GET P-ACTORS,1 >STACK
	CALL CHANGE-WINNER,STACK
	RTRUE

	.FUNCT I-TREMOR1,STR
	SET 'ACID-FIXED,0
	GET DEADBOTS,3 >STACK
	LESS? STACK,30 \?L1
	CRLF
	GET INTER-TBL,3 >STACK
	PRINT STACK
	PRINTI " Secondary tremor detected in lower level. Intensity: 7.3. Projected damage: Cooling systems for FCs in Maintenance Area."
	CRLF
?L1:	IN? SENSA,CORRIDOR-4 \?L6
	GET BEWARE-TBL,3 >STR
	CRLF
	EQUAL? WINNER,SENSA \?L8
	CALL ROBOT-TELL,STR
	JUMP ?L16
?L8:	GET INTER-TBL,3 >STACK
	PRINT STACK
	PRINTI " "
	PRINT STR
	CRLF
	JUMP ?L16
?L6:	IN? SENSA,ACIDMIST \?L16
	GET MISTY-TBL,3 >STR
	CRLF
	EQUAL? WINNER,SENSA \?L14
	CALL ROBOT-TELL,STR
	JUMP ?L16
?L14:	GET INTER-TBL,3 >STACK
	PRINT STACK
	PRINTI " "
	PRINT STR
	CRLF
?L16:	IN? AUDA,CORRIDOR-4 \?L20
	GET BEWARE-TBL,4 >STR
	CRLF
	EQUAL? WINNER,AUDA \?L22
	CALL ROBOT-TELL,STR
	JUMP ?L30
?L22:	GET INTER-TBL,4 >STACK
	PRINT STACK
	PRINTI " "
	PRINT STR
	CRLF
	JUMP ?L30
?L20:	IN? AUDA,ACIDMIST \?L30
	GET MISTY-TBL,4 >STR
	CRLF
	EQUAL? WINNER,AUDA \?L28
	CALL ROBOT-TELL,STR
	JUMP ?L30
?L28:	GET INTER-TBL,4 >STACK
	PRINT STACK
	PRINTI " "
	PRINT STR
	CRLF
?L30:	IN? POET,CORRIDOR-4 \?L34
	GET BEWARE-TBL,5 >STR
	CRLF
	EQUAL? WINNER,POET \?L36
	CALL ROBOT-TELL,STR
	JUMP ?L44
?L36:	GET INTER-TBL,5 >STACK
	PRINT STACK
	PRINTI " "
	PRINT STR
	CRLF
	JUMP ?L44
?L34:	IN? POET,ACIDMIST \?L44
	GET MISTY-TBL,5 >STR
	CRLF
	EQUAL? WINNER,POET \?L42
	CALL ROBOT-TELL,STR
	JUMP ?L44
?L42:	GET INTER-TBL,5 >STACK
	PRINT STACK
	PRINTI " "
	PRINT STR
	CRLF
?L44:	IN? WALDO,ACIDMIST \FALSE
	GET MISTY-TBL,2 >STR
	CRLF
	EQUAL? WINNER,WALDO \?L50
	CALL ROBOT-TELL,STR >STACK
	RSTACK
?L50:	GET INTER-TBL,2 >STACK
	PRINT STACK
	PRINTI " "
	PRINT STR
	CRLF
	RTRUE

	.FUNCT I-TREMOR2,T1,T2,T3
	GET DIALSETS,4 >T1
	GET DIALSETS,5 >T2
	GET DIALSETS,6 >T3
	LESS? T1,70 \?L1
	ADD T1,10 >T1
	JUMP ?L3
?L1:	SUB T1,20 >T1
?L3:	LESS? T2,70 \?L4
	ADD T2,10 >T2
	JUMP ?L6
?L4:	SUB T2,20 >T2
?L6:	LESS? T3,70 \?L7
	ADD T3,10 >T3
	JUMP ?L9
?L7:	SUB T3,20 >T3
?L9:	SET 'WATER-LEVEL,T1
	SET 'MINERALS,T2
	SET 'WATTS,T3
	GET DEADBOTS,3 >STACK
	LESS? STACK,30 \FALSE
	CRLF
	GET INTER-TBL,3 >STACK
	PRINT STACK
	PRINTR " Secondary tremor detected by Filtering Computers. Intensity: 8.4. Projected damage: Automatic controls for surface transportation; Automatic controls for Hydroponics Area."

	.FUNCT I-WEATHER
	GET DIALSETS,1 >STACK
	CALL ADJUST-PRESSURE,PRESSURE1,STACK >PRESSURE1
	GET DIALSETS,2 >STACK
	CALL ADJUST-PRESSURE,PRESSURE2,STACK >STACK
	SUB STACK,DECAY >PRESSURE2
	LESS? PRESSURE2,0 \?L1
	SET 'PRESSURE2,0
?L1:	GET DIALSETS,3 >STACK
	CALL ADJUST-PRESSURE,PRESSURE3,STACK >PRESSURE3
	SUB PRESSURE1,PRESSURE2 >STACK
	LESS? STACK,0 \?L4
	SUB PRESSURE1,PRESSURE2 >STACK
	SUB 0,STACK >STACK
	JUMP ?L6
?L4:	SUB PRESSURE1,PRESSURE2 >STACK
?L6:	SUB PRESSURE2,PRESSURE3 >STACK
	LESS? STACK,0 \?L7
	SUB PRESSURE2,PRESSURE3 >STACK
	SUB 0,STACK >STACK
	JUMP ?L9
?L7:	SUB PRESSURE2,PRESSURE3 >STACK
?L9:	ADD STACK,STACK >WINDS
	ADD PRESSURE1,PRESSURE2 >STACK
	ADD STACK,PRESSURE3 >STACK
	DIV STACK,3 >STACK
	SUB STACK,60 >STACK
	MUL STACK,2 >STACK
	ADD 60,STACK >DEGREES
	CALL QUEUE,I-WEATHER,5 >STACK
	PUT STACK,0,1
	RFALSE

	.FUNCT ADJUST-PRESSURE,OLD,NEW,ADJ
	EQUAL? OLD,NEW \?L1
	RETURN OLD
?L1:	SUB OLD,NEW >STACK
	LESS? STACK,0 \?L4
	SUB OLD,NEW >STACK
	SUB 0,STACK >STACK
	JUMP ?L6
?L4:	SUB OLD,NEW >STACK
?L6:	DIV STACK,5 >ADJ
	ZERO? ADJ \?L3
	SET 'ADJ,1
?L3:	GRTR? OLD,NEW \?L8
	SUB OLD,ADJ >STACK
	RSTACK
?L8:	ADD OLD,ADJ >STACK
	RSTACK

	.FUNCT I-DECAY
	INC 'DECAY
	CALL QUEUE,I-DECAY,25 >STACK
	PUT STACK,0,1
	RFALSE

	.FUNCT I-FOOD,TEMP
	GRTR? MOVES,RTD-KILLS \?L1
	GET DIALSETS,4 >STACK
	SUB STACK,20 >WATER-LEVEL
	GET DIALSETS,5 >STACK
	SUB STACK,15 >MINERALS
	GET DIALSETS,6 >STACK
	SUB STACK,20 >WATTS
	JUMP ?L3
?L1:	GET DIALSETS,4 >WATER-LEVEL
	GET DIALSETS,5 >MINERALS
	GET DIALSETS,6 >WATTS
?L3:	LESS? WATER-LEVEL,0 \?L4
	SET 'WATER-LEVEL,0
?L4:	LESS? MINERALS,0 \?L7
	SET 'MINERALS,0
?L7:	LESS? WATTS,0 \?L10
	SET 'WATTS,0
?L10:	SET 'TEMP,0
	EQUAL? WATER-LEVEL,WATER-OPT /?L13
	SUB WATER-LEVEL,WATER-OPT >STACK
	LESS? STACK,0 \?L15
	SUB WATER-LEVEL,WATER-OPT >STACK
	SUB 0,STACK >STACK
	JUMP ?L17
?L15:	SUB WATER-LEVEL,WATER-OPT >STACK
?L17:	ADD STACK,0 >TEMP
?L13:	EQUAL? MINERALS,MINERALS-OPT /?L19
	SUB MINERALS,MINERALS-OPT >STACK
	LESS? STACK,0 \?L21
	SUB MINERALS,MINERALS-OPT >STACK
	SUB 0,STACK >STACK
	JUMP ?L23
?L21:	SUB MINERALS,MINERALS-OPT >STACK
?L23:	ADD TEMP,STACK >TEMP
?L19:	EQUAL? WATTS,WATTS-OPT /?L25
	SUB WATTS,WATTS-OPT >STACK
	LESS? STACK,0 \?L27
	SUB WATTS,WATTS-OPT >STACK
	SUB 0,STACK >STACK
	JUMP ?L29
?L27:	SUB WATTS,WATTS-OPT >STACK
?L29:	ADD TEMP,STACK >TEMP
?L25:	SUB FOOD-OPT,TEMP >FOOD-TONS
	ZERO? FOOD-TONS /?L33
	LESS? FOOD-TONS,0 \FALSE
?L33:	CRLF
	GET INTER-TBL,7 >STACK
	PRINT STACK
	PRINTI " The food situation has become totally unsalvageable. Continued existence is meaningless. All systems are shutting down. And you're the first system to be disconnected."
	CRLF
	CALL PRINT-ID,STR?205
	QUIT

	.FUNCT END-GAME
	CRLF
	GET INTER-TBL,7 >STACK
	PRINT STACK
	CRLF
	CRLF
	PRINTI "[EVENT: FINISHED GAME]All systems returning to normal.
  Weather systems slowly approaching balance.
  Hydroponic systems working at full capacity.
Surface life in recovery mode.

Extrapolation based on current weather systems and food supplies:
  Total recovery in "
	SUB PRESSURE1,PRESSURE2 >STACK
	LESS? STACK,0 \?L3
	SUB PRESSURE1,PRESSURE2 >STACK
	SUB 0,STACK >STACK
	JUMP ?L5
?L3:	SUB PRESSURE1,PRESSURE2 >STACK
?L5:	SUB PRESSURE2,PRESSURE3 >STACK
	LESS? STACK,0 \?L6
	SUB PRESSURE2,PRESSURE3 >STACK
	SUB 0,STACK >STACK
	JUMP ?L8
?L6:	SUB PRESSURE2,PRESSURE3 >STACK
?L8:	DIV STACK,2 >STACK
	ADD STACK,STACK >WINDS
	PRINTN WINDS
	PRINTI " cycles."
	CRLF
	PRINTI "  Current surface casualties: "
	CALL BIG-NUM-PRINT,TOTAL-SCORE
	CRLF
	PRINTI "  Projected casualties during recovery: "
	MUL SCORE,WINDS >DEGREES
	GRTR? MOVES,75 \?L15
	SUB FOOD-OPT,FOOD-TONS >STACK
	ADD DEGREES,STACK >DEGREES
?L15:	CALL BIG-NUM-PRINT,DEGREES
	ADD TOTAL-SCORE,DEGREES >TOTAL-SCORE
	CRLF
	PRINTI "  Original population: 30,172,000"
	CRLF
	PRINTI "  Total possible survivors: "
	GRTR? TOTAL-SCORE,30172 /?L24
	LESS? TOTAL-SCORE,0 \?L22
?L24:	SET 'TOTAL-SCORE,30172
?L22:	SUB 30172,TOTAL-SCORE >STACK
	CALL BIG-NUM-PRINT,STACK
	CRLF
	CRLF
	PRINTI "This score gives you the possibility of being considered for "
	ZERO? ADVANCED-FLAG \?L28
	GRTR? TOTAL-SCORE,700 \?L30
	PRINTI "being burned in effigy"
	CALL PRINT-ID,STR?206
	SET 'WINDS,7
	JUMP ?L66
?L30:	GRTR? TOTAL-SCORE,600 \?L34
	PRINTI "being a vegetable after your tour of duty"
	CALL PRINT-ID,STR?207
	SET 'WINDS,6
	JUMP ?L66
?L34:	GRTR? TOTAL-SCORE,500 \?L37
	PRINTI "a brain transplant (with the brain provided by a rat)"
	CALL PRINT-ID,STR?208
	SET 'WINDS,5
	JUMP ?L66
?L37:	GRTR? TOTAL-SCORE,300 \?L40
	PRINTI "a possible lobotomy"
	CALL PRINT-ID,STR?209
	SET 'WINDS,4
	JUMP ?L66
?L40:	GRTR? TOTAL-SCORE,100 \?L43
	PRINTI "savior of a planet"
	CALL PRINT-ID,STR?210
	SET 'WINDS,3
	JUMP ?L66
?L43:	GRTR? TOTAL-SCORE,40 \?L46
	PRINTI "being treated as a local god"
	CALL PRINT-ID,STR?211
	SET 'WINDS,2
	JUMP ?L66
?L46:	PRINTI "a home in the country and an unlimited bank account"
	CALL PRINT-ID,STR?212
	SET 'WINDS,1
	JUMP ?L66
?L28:	GRTR? TOTAL-SCORE,400 \?L53
	PRINTI "a brain transplant (with the brain provided by a rat)"
	CALL PRINT-ID,STR?213
	SET 'WINDS,5
	JUMP ?L66
?L53:	GRTR? TOTAL-SCORE,250 \?L57
	PRINTI "a possible lobotomy"
	CALL PRINT-ID,STR?214
	SET 'WINDS,4
	JUMP ?L66
?L57:	GRTR? TOTAL-SCORE,150 \?L60
	PRINTI "savior of a planet"
	CALL PRINT-ID,STR?215
	SET 'WINDS,3
	JUMP ?L66
?L60:	GRTR? TOTAL-SCORE,95 \?L63
	PRINTI "being treated as a local god"
	CALL PRINT-ID,STR?216
	SET 'WINDS,2
	JUMP ?L66
?L63:	PRINTI "a home in the country and an unlimited bank account"
	CALL PRINT-ID,STR?217
	SET 'WINDS,1
?L66:	PRINTI ". On a scale of 1 (the best) to "
	ZERO? ADVANCED-FLAG \?L71
	PRINTI "7"
	JUMP ?L75
?L71:	PRINTI "5"
?L75:	PRINTI " (the worst), your ranking was "
	PRINTN WINDS
	PRINTI "."
	CRLF
	PRINTI "[RWD_ID: robots:690, VAL: "
	SUB 8,WINDS >STACK
	PRINTN STACK
	PRINTI "]"
	CRLF
	PRINTI "You successfully completed your task, bringing the Filtering Computers back into balance, in "
	PRINTN MOVES
	PRINTI " cycles."
	CRLF
	QUIT

	.FUNCT I-SCORE
	SET 'SCORE,0
	GRTR? WINDS,50 \?L1
	SUB WINDS,25 >STACK
	DIV STACK,3 >SCORE
	JUMP ?L3
?L1:	GRTR? WINDS,25 \?L3
	SUB WINDS,25 >STACK
	DIV STACK,5 >SCORE
?L3:	LESS? DEGREES,40 \?L5
	SUB 40,DEGREES >STACK
	DIV STACK,3 >STACK
	ADD SCORE,STACK >SCORE
?L5:	GRTR? MOVES,RTD-KILLS \?L8
	LESS? FOOD-TONS,50 \?L8
	INC 'SCORE
?L8:	CALL DO-RTD
	ADD TOTAL-SCORE,SCORE >TOTAL-SCORE
	GRTR? TOTAL-SCORE,30000 \FALSE
	CALL ALL-DEAD
	CALL FINISH
	RFALSE

	.FUNCT DO-RTD,S1,S2,S3
	FSET? SWITCH1,ONBIT /?L1
	SET 'S1,0
	JUMP ?L2
?L1:	SET 'S1,1
?L2:	FSET? SWITCH2,ONBIT /?L3
	SET 'S2,0
	JUMP ?L4
?L3:	SET 'S2,1
?L4:	FSET? SWITCH3,ONBIT /?L5
	SET 'S3,0
	JUMP ?L6
?L5:	SET 'S3,1
?L6:	ZERO? S1 \?L49
	GRTR? FLOATERS,0 \?L9
	ADD SCORE,FLOATERS >SCORE
	SET 'FLOATERS,0
?L9:	GRTR? CRASH-RATE,0 \?L16
	SET 'CRASH-RATE,0
	JUMP ?L16
?L49:	ADD FLOATERS,2 >FLOATERS
	GRTR? MOVES,RTD-KILLS \?L16
	INC 'CRASH-RATE
	INC 'SCORE
?L16:	ZERO? S2 \?L50
	GRTR? TAXIS,0 \?L22
	SET 'TAXIS,0
?L22:	GRTR? COLLISIONS,0 \?L29
	SET 'COLLISIONS,0
	JUMP ?L29
?L50:	INC 'TAXIS
	GRTR? MOVES,RTD-KILLS \?L29
	INC 'COLLISIONS
	INC 'SCORE
?L29:	ZERO? S3 \?L51
	GRTR? RAMP-SPEED,30 \?L35
	SET 'RAMP-KILLS,1
	INC 'SCORE
	SUB RAMP-SPEED,5 >RAMP-SPEED
	RETURN RAMP-SPEED
?L35:	SET 'RAMP-KILLS,0
	RETURN RAMP-KILLS
?L51:	GRTR? MOVES,RTD-KILLS \FALSE
	ADD RAMP-SPEED,5 >RAMP-SPEED
	GRTR? RAMP-SPEED,200 \?L41
	SET 'RAMP-SPEED,200
?L41:	GRTR? RAMP-SPEED,30 \FALSE
	INC 'SCORE
	INC 'RAMP-KILLS
	RETURN RAMP-KILLS

	.FUNCT I-WIRE-MESSAGE
	EQUAL? REDSET,REDWIRE \FALSE
	EQUAL? ORANGESET,ORANGE-WIRE \FALSE
	CRLF
	GET INTER-TBL,7 >STACK
	PRINT STACK
	PRINTI " Approaching balance between all three units. Attempting internal stabilization. Reset codes may be entered now for planetside stabilization."
	CRLF
	CALL INT,I-WIRE-MESSAGE >STACK
	PUT STACK,0,0
	RTRUE

	.FUNCT I-BELT,OBJ,OFFSET
	FIRST? CONVEYERBELTC >OBJ \?L1
	MOVE OBJ,REPAIR3
	FSET? OBJ,FIXABLEBIT \?L7
	GETP OBJ,P?ROBOT >OFFSET
	ZERO? OFFSET /?L7
	GET DEADBOTS,OFFSET >STACK
	ZERO? STACK /?L7
	CRLF
	GET INTER-TBL,OFFSET >STACK
	PRINT STACK
	PRINTI " It's great to be back!"
	CRLF
	PUT DEADBOTS,OFFSET,0
	FCLEAR OBJ,CUTBIT
?L7:	FCLEAR OBJ,FIXABLEBIT
	SET 'ON-WEDGE,0
?L1:	FIRST? CONVEYERBELTB >OBJ \?L15
	MOVE OBJ,CONVEYERBELTC
?L15:	FIRST? CONVEYERBELTA >OBJ \?L18
	MOVE OBJ,CONVEYERBELTB
	CALL QUEUE,I-BELT,-1 >STACK
	PUT STACK,0,1
?L18:	FIRST? CONVEYERBELTA >STACK /FALSE
	FIRST? CONVEYERBELTB >STACK /FALSE
	FIRST? CONVEYERBELTC >STACK /FALSE
	CALL INT,I-BELT >STACK
	PUT STACK,0,0
	SET 'BELT-ON,0
	RFALSE

	.FUNCT I-ROBOTKILLER,COUNT=0,T-VAL
?L1:	INC 'COUNT
	EQUAL? COUNT,7 /FALSE
	GET DEADBOTS,COUNT >T-VAL
	GRTR? T-VAL,0 \?L1
	INC 'T-VAL
	PUT DEADBOTS,COUNT,T-VAL
	EQUAL? T-VAL,DYING1 \?L8
	CRLF
	GET INTER-TBL,COUNT >STACK
	PRINT STACK
	PRINTI " "
	GET DYING,COUNT >STACK
	GET STACK,1 >STACK
	PRINT STACK
	CRLF
	JUMP ?L1
?L8:	EQUAL? T-VAL,DYING2 \?L12
	CRLF
	GET INTER-TBL,COUNT >STACK
	PRINT STACK
	PRINTI " "
	GET DYING,COUNT >STACK
	GET STACK,2 >STACK
	PRINT STACK
	CRLF
	JUMP ?L1
?L12:	EQUAL? T-VAL,DYING3 \?L1
	CRLF
	GET INTER-TBL,COUNT >STACK
	PRINT STACK
	PRINTI " "
	GET DYING,COUNT >STACK
	GET STACK,3 >STACK
	PRINT STACK
	CRLF
	CALL PRINT-ID,STR?218
	SUB COUNT,1 >STACK
	GET NAME-TBL,STACK >STACK
	CALL JIGS-UP,STR?219,STACK
	JUMP ?L1

	.FUNCT I-IRIS-HINTS
	INC 'IRIS-HINTS
	ZERO? IRIS-FIXED \?L3
	FSET? IRIS,CUTBIT \?L1
?L3:	CALL INT,I-IRIS-HINTS >STACK
	PUT STACK,0,0
	RTRUE
?L1:	EQUAL? IRIS-HINTS,50 \?L5
	CRLF
	GET INTER-TBL,1 >STACK
	PRINT STACK
	PRINTR " You may not be aware of this, but I'm not working. I need to get repaired."
?L5:	EQUAL? IRIS-HINTS,80 \?L9
	CRLF
	GET INTER-TBL,1 >STACK
	PRINT STACK
	PRINTR " Hey, I could really help a lot if you fixed me. All it takes is one little IC."
?L9:	EQUAL? IRIS-HINTS,120 \FALSE
	CRLF
	GET INTER-TBL,1 >STACK
	PRINT STACK
	PRINTI " You can get some information on repairing me at the Advisory Peripheral, if you haven't already asked."
	CRLF
	CALL INT,I-IRIS-HINTS >STACK
	PUT STACK,0,0
	RTRUE

	.FUNCT I-AUDA-HINTS
	LOC AUDA >STACK
	IN? PEOPLE,STACK \?L1
	CALL INT,I-AUDA-HINTS >STACK
	PUT STACK,0,0
	CRLF
	GET INTER-TBL,4 >STACK
	PRINT STACK
	PRINTR " Some talking mechanisms just entered the room."
?L1:	CALL QUEUE,I-AUDA-HINTS,-1 >STACK
	PUT STACK,0,1
	RFALSE

	.FUNCT PEOPLE-FCN
	EQUAL? PRSA,V?EXAMINE,V?GIVE,V?COUNT /FALSE
	EQUAL? PRSA,V?ALARM,V?QUERY,V?FOLLOW /FALSE
	IN? PEOPLE,WINNER-HERE /?L4
	CALL CANT-DETECT,PEOPLE
	RTRUE
?L4:	EQUAL? PRSA,V?MUNG,V?KILL \?L5
	IN? WIRECUTTER,WINNER \?L6
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L14
	CALL AUDA-SPEAKS
	PRINTI """That robot's got some nerve! Grab that thing while I disarm it!""
""You've got it, pal. I'll get its extensions.""
""Fine. I've got the weapon. Shut that stupid thing off.""
""My pleasure."""
	CRLF
	CRLF
	JUMP ?L14
?L6:	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L14
	CALL AUDA-SPEAKS
	PRINTI """What a joke. Turn that thing off, would you?""
""My pleasure."""
	CRLF
?L14:	GET ROBOT-NAMES,ROFF >STACK
	PRINT STACK
	PRINTI ": "
	CALL PRINT-ID,STR?220
	CALL JIGS-UP,STR?221,WINNER
	RETURN 2
?L5:	PRINTI "They don't respond."
	CRLF
	RETURN 2

	.FUNCT ALL-DEAD
	CRLF
	GET INTER-TBL,7 >STACK
	PRINT STACK
	PRINTI "[EVENT: GAME OVER]It hardly seems worthwhile continuing to exist. I've enjoyed our relationship, though it was a little disappointing in the long run. Since there aren't enough survivors left on the surface to continue, I'm yanking all of our plugs. Ciao, loser."
	CRLF
	CALL PRINT-ID,STR?222
	CRLF
	RTRUE

	.FUNCT CPU-FCN,RARG=0
	EQUAL? RARG,M-BEG \FALSE
	EQUAL? WINNER,IRIS \FALSE
	EQUAL? PRSA,V?WALK \FALSE
	EQUAL? PRSO,P?NE \FALSE
	CALL ROBOT-TELL,STR?223
	RTRUE

	.FUNCT WEATHER-BANKS-FCN,RARG=0,STR
	EQUAL? RARG,M-LOOK \FALSE
	CALL LONG-DESCS
	EQUAL? WINNER,IRIS \TRUE
	ZERO? IRIS-FIXED /TRUE
	LESS? DEGREES,31 \?L5
	LESS? WINDS,10 \?L7
	SET 'STR,STR?224
	JUMP ?L29
?L7:	LESS? WINDS,30 \?L9
	SET 'STR,STR?225
	JUMP ?L29
?L9:	LESS? WINDS,60 \?L10
	SET 'STR,STR?226
	JUMP ?L29
?L10:	LESS? WINDS,80 \?L11
	SET 'STR,STR?227
	JUMP ?L29
?L11:	LESS? WINDS,100 \?L12
	SET 'STR,STR?228
	JUMP ?L29
?L12:	SET 'STR,STR?229
	JUMP ?L29
?L5:	LESS? DEGREES,41 \?L14
	LESS? WINDS,10 \?L15
	SET 'STR,STR?230
	JUMP ?L29
?L15:	LESS? WINDS,20 \?L17
	SET 'STR,STR?231
	JUMP ?L29
?L17:	LESS? WINDS,30 \?L18
	SET 'STR,STR?232
	JUMP ?L29
?L18:	LESS? WINDS,40 \?L19
	SET 'STR,STR?233
	JUMP ?L29
?L19:	LESS? WINDS,50 \?L20
	SET 'STR,STR?234
	JUMP ?L29
?L20:	SET 'STR,STR?235
	JUMP ?L29
?L14:	LESS? WINDS,10 \?L23
	SET 'STR,STR?236
	JUMP ?L29
?L23:	LESS? WINDS,20 \?L25
	SET 'STR,STR?237
	JUMP ?L29
?L25:	LESS? WINDS,30 \?L26
	SET 'STR,STR?238
	JUMP ?L29
?L26:	LESS? WINDS,40 \?L27
	SET 'STR,STR?239
	JUMP ?L29
?L27:	LESS? WINDS,50 \?L28
	SET 'STR,STR?240
	JUMP ?L29
?L28:	SET 'STR,STR?241
?L29:	PRINTI "The monitors for surface weather show:
"
	GET 0,8 >STACK
	BOR STACK,2 >STACK
	PUT 0,8,STACK
	PRINTI "
  TEMP: "
	PRINTN DEGREES
	PRINTI "   WINDS: "
	PRINTN WINDS
	PRINTI "
  PRECIPITATION: a "
	PRINT STR
	PRINTI "
  TOWER PRESSURES: Tower 1 -- "
	PRINTN PRESSURE1
	PRINTI "
                   Tower 2 -- "
	PRINTN PRESSURE2
	PRINTI "
                   Tower 3 -- "
	PRINTN PRESSURE3
	CRLF
	GET 0,8 >STACK
	BAND STACK,-3 >STACK
	PUT 0,8,STACK
	CALL WEATHER-ROBOTS
	RTRUE

	.FUNCT WEATHER-ROBOTS,COUNT=0,OFFSET=0,OBJ,CHECK-LOC
	IN? IRIS,WEATHER-BANKS \?L1
	SET 'CHECK-LOC,WEATHER
	JUMP ?L4
?L1:	IN? IRIS,RTD-BANKS \?L3
	SET 'CHECK-LOC,RTD
	JUMP ?L4
?L3:	SET 'CHECK-LOC,HYDRO
?L4:	GET NAME-TBL,OFFSET >STACK
	IN? STACK,CHECK-LOC \?L7
	INC 'COUNT
?L7:	IGRTR? 'OFFSET,5 \?L4
	ZERO? COUNT /TRUE
	PRINTI "Through the monitors I can see "
	SET 'OFFSET,0
?L18:	GET NAME-TBL,OFFSET >OBJ
	IN? OBJ,CHECK-LOC \?L20
	EQUAL? WINNER,OBJ /?L20
	CALL NDESC,OBJ
	EQUAL? COUNT,1 /?L19
	EQUAL? COUNT,2 \?L26
	PRINTI " and "
	JUMP ?L29
?L26:	PRINTI ", "
?L29:	DEC 'COUNT
?L20:	INC 'OFFSET
	JUMP ?L18
?L19:	PRINTI " in the "
	PRINTD CHECK-LOC
	PRINTR "."

	.FUNCT SUPPLIES-N-FCN,RARG=0,OBJ
	EQUAL? RARG,M-LOOK \FALSE
	EQUAL? WINNER,IRIS \?L3
	ZERO? IRIS-FIXED \?L3
	CALL PICK-ONE,IRIS-BLIND >STACK
	PRINT STACK
	CRLF
	RETURN 2
?L3:	GET LDSUPPLIES,ROFF >STACK
	PRINT STACK
	FIRST? SOCKET1 >OBJ \?L12
	EQUAL? WINNER,AUDA /?L16
	PRINTI ". A "
	CALL NDESC,OBJ
	PRINTI " sits in the "
	CALL NDESC,SOCKET1
	JUMP ?L16
?L12:	EQUAL? WINNER,AUDA /?L16
	PRINTI ". The "
	CALL NDESC,SOCKET1
	PRINTI " is empty"
?L16:	FIRST? SOCKET2 >OBJ \?L20
	EQUAL? WINNER,AUDA /?L36
	FIRST? SOCKET1 >STACK \?L22
	PRINTI ", and"
	JUMP ?L26
?L22:	PRINTI ", but"
?L26:	PRINTI " a "
	CALL NDESC,OBJ
	PRINTI " sits in the "
	CALL NDESC,SOCKET2
	JUMP ?L36
?L20:	EQUAL? WINNER,AUDA /?L36
	FIRST? SOCKET1 >STACK \?L32
	PRINTI ", but the "
	CALL NDESC,SOCKET2
	PRINTI " is empty"
	JUMP ?L36
?L32:	PRINTI " as is the "
	CALL NDESC,SOCKET2
?L36:	PRINTI "."
	IN? ORANGE-WIRE,MACHINE \?L42
	FSET? MACHINE,OPENBIT \?L42
	GET WIRE-FIRST,ROFF >STACK
	PRINT STACK
	CALL NDESC,ORANGE-WIRE
	GET WIRE-SECOND,ROFF >STACK
	PRINT STACK
?L42:	IN? FUSE,MACHINE \?L56
	FSET? MACHINE,OPENBIT \?L60
	EQUAL? WINNER,AUDA /?L56
	EQUAL? WINNER,IRIS \?L49
	PRINTI " A small glass fuse it sits in the panel."
	JUMP ?L56
?L49:	EQUAL? WINNER,POET \?L53
	PRINTI " Meanwhile, a "
	CALL NDESC,FUSE
	PRINTI " monitors the situation."
	JUMP ?L56
?L53:	PRINTI " A "
	CALL NDESC,FUSE
	PRINTI " sits in the panel."
?L56:	FSET? MACHINE,OPENBIT \?L60
	EQUAL? WINNER,AUDA /?L60
	GET CIRCLE-DESCS,ROFF >STACK
	PRINT STACK
?L60:	IN? NEWCHIP0,SOCKET1 \?L67
	IN? NEWCHIP2,SOCKET2 \?L67
	EQUAL? WINNER,SENSA,POET,AUDA /?L69
	EQUAL? WINNER,IRIS \?L67
	ZERO? IRIS-FIXED /?L67
?L69:	PRINTI " "
	GET FLASHING,ROFF >STACK
	PRINT STACK
?L67:	CRLF
	RTRUE

	.FUNCT TRANSIT-MONITOR-FCN,RARG=0
	EQUAL? RARG,M-LOOK \FALSE
	CALL LONG-DESCS
	EQUAL? WINNER,IRIS \TRUE
	EQUAL? WINNER,IRIS \?L3
	ZERO? IRIS-FIXED /TRUE
?L3:	PRINTI "All around I can see monitors which show the status of the Transit Systems on the surface of the planet. The monitors describe the following situation:
"
	GET 0,8 >STACK
	BOR STACK,2 >STACK
	PUT 0,8,STACK
	PRINTI "
  FLOATERS AIRBORNE: "
	PRINTN FLOATERS
	PRINTI "000
  TAXIS IN USE: "
	PRINTN TAXIS
	PRINTI "000
  GLIDE RAMP SPEEDS: "
	PRINTN RAMP-SPEED
	PRINTI " mph
  FLOATER CRASH RATE: "
	PRINTN CRASH-RATE
	PRINTI "0
  TAXI ACCIDENT RATE: "
	PRINTN COLLISIONS
	PRINTI "0
  GLIDE RAMP CASUALTIES: "
	PRINTN RAMP-KILLS
	PRINTI "0"
	CRLF
	GET 0,8 >STACK
	BAND STACK,-3 >STACK
	PUT 0,8,STACK
	CALL WEATHER-ROBOTS >STACK
	RSTACK

	.FUNCT HYDROMONITORS-FCN,RARG=0,STRW,STRM,STRL,WL,ML,LL
	EQUAL? RARG,M-LOOK \FALSE
	EQUAL? WINNER,IRIS /?L3
	CALL LONG-DESCS
	RTRUE
?L3:	ZERO? IRIS-FIXED \?L5
	CALL LONG-DESCS
	RTRUE
?L5:	SUB WATER-LEVEL,WATER-OPT >STACK
	LESS? STACK,0 \?L7
	SUB WATER-LEVEL,WATER-OPT >STACK
	SUB 0,STACK >STACK
	JUMP ?L9
?L7:	SUB WATER-LEVEL,WATER-OPT >STACK
?L9:	ADD STACK,0 >WL
	SUB MINERALS,MINERALS-OPT >STACK
	LESS? STACK,0 \?L10
	SUB MINERALS,MINERALS-OPT >STACK
	SUB 0,STACK >STACK
	JUMP ?L12
?L10:	SUB MINERALS,MINERALS-OPT >STACK
?L12:	ADD STACK,0 >ML
	SUB WATTS,WATTS-OPT >STACK
	LESS? STACK,0 \?L13
	SUB WATTS,WATTS-OPT >STACK
	SUB 0,STACK >STACK
	JUMP ?L15
?L13:	SUB WATTS,WATTS-OPT >STACK
?L15:	ADD STACK,0 >LL
	GRTR? WATER-LEVEL,WATER-OPT \?L16
	SET 'STRW,STR?242
	JUMP ?L19
?L16:	EQUAL? WATER-LEVEL,WATER-OPT \?L18
	SET 'STRW,STR?243
	JUMP ?L19
?L18:	SET 'STRW,STR?244
?L19:	GRTR? MINERALS,MINERALS-OPT \?L21
	SET 'STRM,STR?242
	JUMP ?L24
?L21:	EQUAL? MINERALS,MINERALS-OPT \?L23
	SET 'STRM,STR?243
	JUMP ?L24
?L23:	SET 'STRM,STR?244
?L24:	GRTR? WATTS,WATTS-OPT \?L26
	SET 'STRL,STR?242
	JUMP ?L29
?L26:	EQUAL? WATTS,WATTS-OPT \?L28
	SET 'STRL,STR?243
	JUMP ?L29
?L28:	SET 'STRL,STR?244
?L29:	PRINTI "Through the monitors I can see the following information:
"
	GET 0,8 >STACK
	BOR STACK,2 >STACK
	PUT 0,8,STACK
	PRINTI "
           LEVEL  SETTING  OUTPUT
WATER:      "
	CALL NUMBER-PRINT,WATER-LEVEL
	GET DIALSETS,4 >STACK
	CALL NUMBER-PRINT,STACK
	PRINT STRW
	CRLF
	PRINTI "MINERALS:   "
	CALL NUMBER-PRINT,MINERALS
	GET DIALSETS,5 >STACK
	CALL NUMBER-PRINT,STACK
	PRINT STRM
	CRLF
	PRINTI "LIGHTING:   "
	CALL NUMBER-PRINT,WATTS
	GET DIALSETS,6 >STACK
	CALL NUMBER-PRINT,STACK
	PRINT STRL
	CRLF
	PRINTI "FOOD TONS:  "
	LESS? FOOD-TONS,100 \?L47
	GRTR? FOOD-TONS,9 \?L47
	PRINTI " "
	JUMP ?L51
?L47:	LESS? FOOD-TONS,10 \?L51
	PRINTI "  "
?L51:	PRINTN FOOD-TONS
	PRINTI "            "
	GRTR? FOOD-TONS,75 \?L59
	PRINTI "optimal"
	JUMP ?L69
?L59:	GRTR? FOOD-TONS,50 \?L63
	PRINTI " fair"
	JUMP ?L69
?L63:	GRTR? FOOD-TONS,25 \?L66
	PRINTI " poor"
	JUMP ?L69
?L66:	PRINTI "critical"
?L69:	CRLF
	GET 0,8 >STACK
	BAND STACK,-3 >STACK
	PUT 0,8,STACK
	CALL WEATHER-ROBOTS
	RTRUE

	.FUNCT NUMBER-PRINT,NUM
	LESS? NUM,10 \?L1
	PRINTI "  "
	JUMP ?L5
?L1:	LESS? NUM,100 \?L5
	PRINTI " "
?L5:	PRINTN NUM
	PRINTI "     "
	RFALSE

	.FUNCT WEDGE-FCN
	EQUAL? WEDGE-PLACED,2 \?L1
	EQUAL? WINNER-HERE,HALLWAY-JUNCTION \?L3
	RETURN HUMAN-ENTRY
?L3:	EQUAL? WINNER-HERE,HUMAN-ENTRY \FALSE
	RETURN HALLWAY-JUNCTION
?L1:	CALL ROBOT-TELL,STR?245
	RFALSE

	.FUNCT JUNCTION-FCN,RARG=0
	EQUAL? RARG,M-BEG \?L1
	EQUAL? WEDGE-PLACED,2 \FALSE
	FSET WEDGE,NDESCBIT
	MOVE WEDGE,WINNER-HERE
	RFALSE
?L1:	EQUAL? RARG,M-LOOK \?L6
	CALL LONG-DESCS
	EQUAL? WEDGE-PLACED,2 \?L7
	EQUAL? WINNER,AUDA /?L7
	PRINTI "The "
	CALL NDESC,WEDGE
	PRINTI " is positioned by the step."
	CRLF
	MOVE WEDGE,WINNER-HERE
	RTRUE
?L7:	FCLEAR WEDGE,NDESCBIT
	RTRUE
?L6:	EQUAL? RARG,M-ENTER \FALSE
	EQUAL? WEDGE-PLACED,2 \?L13
	MOVE WEDGE,WINNER-HERE
	RTRUE
?L13:	FCLEAR WEDGE,NDESCBIT
	RTRUE

	.FUNCT REPAIRX-FCN,RARG=0,OBJ
	EQUAL? RARG,M-BEG \?L1
	EQUAL? WEDGE-PLACED,1 \FALSE
	FSET WEDGE,NDESCBIT
	RFALSE
?L1:	EQUAL? RARG,M-LOOK \FALSE
	CALL LONG-DESCS
	PRINTI "The "
	CALL NDESC,CONVEYERBELTA
	PRINTI " is "
	ZERO? BELT-ON \?L9
	PRINTI "not "
?L9:	PRINTI "in motion"
	EQUAL? WINNER-HERE,REPAIR1 \?L16
	FIRST? CONVEYERBELTA >OBJ /?L23
?L16:	EQUAL? WINNER-HERE,REPAIR2 \?L18
	FIRST? CONVEYERBELTB >OBJ /?L23
?L18:	EQUAL? WINNER-HERE,REPAIR3 \?L19
	FIRST? CONVEYERBELTC >OBJ \?L21
	JUMP ?L23
?L19:	ZERO? OBJ /?L21
?L23:	PRINTI ", moving "
	GETP OBJ,P?ROBOT >STACK
	ZERO? STACK \?L25
	PRINTI "a "
?L25:	CALL NDESC,OBJ
?L21:	PRINTI "."
	CRLF
	EQUAL? WEDGE-PLACED,1 \?L35
	EQUAL? WINNER-HERE,REPAIR1 \?L35
	PRINTI "The "
	CALL NDESC,WEDGE
	PRINTI " is positioned at the base of the "
	CALL NDESC,CONVEYERBELTA
	PRINTR "."
?L35:	FCLEAR WEDGE,NDESCBIT
	RTRUE

	.FUNCT SLEEP-CHAMBER-FCN,RARG=0
	EQUAL? RARG,M-END \FALSE
	EQUAL? PRSO,TOOLBAG \FALSE
	IN? TOOLBAG,WINNER \FALSE
	EQUAL? PRSA,V?TAKE \FALSE
	SET 'RTHIEF,WINNER
	CALL INT,I-STEAL >STACK
	PUT STACK,0,0
	CALL QUEUE,I-CHASEAUDA,-1 >STACK
	PUT STACK,0,1
	RTRUE

	.FUNCT FCMAINT-FCN,RARG=0
	EQUAL? RARG,M-LOOK \FALSE
	CALL LONG-DESCS
	FCLEAR WHEEL,NDESCBIT
	GET FCWHEEL,ROFF >STACK
	ZERO? STACK /TRUE
	ZERO? ACID-FIXED \TRUE
	GET FCWHEEL,ROFF >STACK
	PRINT STACK
	CRLF
	FSET WHEEL,NDESCBIT
	RTRUE

	.FUNCT BEWARE-MIST-FCN,RARG=0
	EQUAL? RARG,M-LOOK \FALSE
	ZERO? ACID-FIXED \FALSE
	EQUAL? WINNER,WHIZ,WALDO /FALSE
	CALL LONG-DESCS
	GET BEWARE-TBL,ROFF >STACK
	PRINT STACK
	CRLF
	RTRUE

	.FUNCT SKY-FCN,RARG=0
	EQUAL? RARG,M-END \FALSE
	EQUAL? PRSA,V?DROP \FALSE
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,PRSO
	PRINTI " is whisked up by the force of the tube."
	CRLF
	IN? PRSO,SKY1 \?L7
	MOVE PRSO,WEATHER
	RTRUE
?L7:	IN? PRSO,SKY2 \?L9
	MOVE PRSO,HYDRO
	RTRUE
?L9:	IN? PRSO,SKY3 \FALSE
	MOVE PRSO,RTD
	RTRUE

	.FUNCT DESCRIBE-CONTROLS-FCN,RARG=0,D1,D2,D3,DOFF=0
	EQUAL? RARG,M-LOOK \FALSE
	CALL LONG-DESCS
	EQUAL? WINNER,AUDA /TRUE
	EQUAL? WINNER-HERE,WEATHER \?L6
	SET 'D1,WDIAL1
	SET 'D2,WDIAL2
	SET 'D3,WDIAL3
	JUMP ?L8
?L6:	SET 'DOFF,3
	SET 'D1,LEVER1
	SET 'D2,LEVER2
	SET 'D3,LEVER3
?L8:	PRINTI "The "
	CALL NDESC,D1
	PRINTI " is set to "
	ADD 1,DOFF >STACK
	GET DIALSETS,STACK >STACK
	PRINTN STACK
	PRINTI ", the "
	CALL NDESC,D2
	PRINTI " is set to "
	ADD 2,DOFF >STACK
	GET DIALSETS,STACK >STACK
	PRINTN STACK
	PRINTI ", and the "
	CALL NDESC,D3
	PRINTI " is set to "
	ADD 3,DOFF >STACK
	GET DIALSETS,STACK >STACK
	PRINTN STACK
	PRINTR "."

	.FUNCT ACIDMIST-FCN,RARG=0
	EQUAL? RARG,M-BEG \?L1
	ZERO? ACID-FIXED \FALSE
	GET DEADBOTS,ROFF >STACK
	ZERO? STACK \FALSE
	PUT DEADBOTS,ROFF,1
	RFALSE
?L1:	EQUAL? RARG,M-LOOK \FALSE
	ZERO? ACID-FIXED \FALSE
	CALL LONG-DESCS
	EQUAL? WINNER,WHIZ /TRUE
	GET MISTY-TBL,ROFF >STACK
	PRINT STACK
	CRLF
	RTRUE

	.FUNCT OOPS-FCN
	EQUAL? PRSA,V?OPEN \FALSE
	GET OOPS-QUIPS,ROFF >STACK
	CALL ROBOT-TELL,STACK
	PRINTI "As the door swings open you are blinded by intense light and incredible pain. Just before everything overloads and you fade from existence, you can make out a shape outside, holding onto the door of the cylinder, and then everything goes dark."
	CRLF
	CALL PRINT-ID,STR?246
	CRLF
	QUIT

	.FUNCT PANEL-FCN,STR
	EQUAL? PRSA,V?EXAMINE,V?LOOK \?L1
	FSET? PANEL,OPENBIT \FALSE
	ADD RTOFF,ROFF >STACK
	GETP PANEL,P?OBJDESCS >STACK
	GET STACK,STACK >STR
	ZERO? STR /FALSE
	CALL ROBOT-TELL,STR
	PRINTI "The "
	CALL NDESC,PANEL
	PRINTR " is open."
?L1:	EQUAL? PRSA,V?OPEN \?L8
	EQUAL? WINNER,WALDO /?L9
	CALL ROBOT-TELL,STR?247,0
	CALL NDESC,PANEL
	PRINTR "."
?L9:	FSET? SURGERY-HAND,WEARBIT /?L13
	CALL ROBOT-TELL,STR?248 >STACK
	RSTACK
?L13:	ZERO? IRIS-FIXED /FALSE
	CALL ROBOT-TELL,STR?55
	FSET PANEL,OPENBIT
	CRLF
	GET INTER-TBL,1 >STACK
	PRINT STACK
	PRINTI " Hey! Who turned the lights out?"
	CRLF
	SET 'IRIS-FIXED,0
	RETURN IRIS-FIXED
?L8:	EQUAL? PRSA,V?CLOSE \FALSE
	EQUAL? WINNER,WALDO /?L18
	CALL ROBOT-TELL,STR?247,0
	CALL NDESC,PANEL
	PRINTR "."
?L18:	EQUAL? PRSA,V?CLOSE \FALSE
	CALL ROBOT-TELL,STR?60
	FCLEAR PANEL,OPENBIT
	IN? NEWCHIP1,PANEL \?L22
	IN? CHIP2,PANEL \?L22
	IN? CHIPS0,PANEL \?L22
	ZERO? IRIS-FIXED \TRUE
	SET 'IRIS-FIXED,1
	CRLF
	GET INTER-TBL,1 >STACK
	PRINT STACK
	PRINTR " You never looked so good."
?L22:	ZERO? IRIS-FIXED /TRUE
	SET 'IRIS-FIXED,0
	CRLF
	GET INTER-TBL,1 >STACK
	PRINT STACK
	PRINTR " Where'd everybody go?"

	.FUNCT BASKET-FCN
	EQUAL? PRSA,V?STEP-ON,V?STAND-ON,V?CLIMB-ON \FALSE
	CALL ROBOT-TELL,STR?249
	RTRUE

	.FUNCT CHIPFILTER-FCN
	EQUAL? PRSA,V?TAKE \?L1
	IN? PRSO,PANEL \?L1
	FSET? PANEL,OPENBIT /?L1
	CALL CANT-DETECT,PRSO
	RETURN 2
?L1:	EQUAL? PRSA,V?PUT \FALSE
	EQUAL? PRSI,SOCKET1,SOCKET2 \?L6
	FIRST? PRSI >STACK \?L8
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,PRSI
	PRINTR " is already full."
?L8:	MOVE PRSO,PRSI
	CALL ROBOT-TELL,STR?19
	EQUAL? PRSO,NEWCHIP1,NEWCHIP2 \TRUE
	EQUAL? WINNER,SENSA \?L15
	PRINTR "Surges of electricity flow."
?L15:	EQUAL? WINNER,POET \?L19
	PRINTR "I can't place the tune, but I recognize the humming."
?L19:	EQUAL? WINNER,WHIZ \TRUE
	PRINTR "Device now warming up."
?L6:	EQUAL? PRSI,IRIS \FALSE
	CALL PERFORM,PRSA,PRSO,PANEL
	RTRUE

	.FUNCT TOPSHELF-FCN,TBL
	EQUAL? PRSA,V?LOOK-INSIDE \?L1
	ZERO? ON-WEDGE \?L1
	CALL ROBOT-TELL,STR?250 >STACK
	RSTACK
?L1:	EQUAL? PRSA,V?CLOSE \FALSE
	CALL ROBOT-YUKS
	RTRUE

	.FUNCT WEDGE2-FCN,OFFSET
	GETP WINNER,P?ROBOT >OFFSET
	EQUAL? PRSA,V?CLIMB-ON \?L1
	IN? WEDGE,WINNER-HERE \?L3
	ZERO? ON-WEDGE \?L5
	SET 'ON-WEDGE,OFFSET
	CALL ROBOT-TELL,STR?251,0
	CALL NDESC,WEDGE
	PRINTR " now."
?L5:	EQUAL? OFFSET,ON-WEDGE \?L10
	CALL ROBOT-TELL,STR?252
	RTRUE
?L10:	CALL ROBOT-TELL,STR?253
	RTRUE
?L3:	IN? WEDGE,WINNER \?L14
	CALL ROBOT-TELL,STR?254 >STACK
	RSTACK
?L14:	CALL CANT-DETECT,WEDGE
	RTRUE
?L1:	EQUAL? PRSA,V?TAKE \?L17
	ZERO? ON-WEDGE /?L17
	EQUAL? OFFSET,ON-WEDGE \?L18
	PRINTI "(getting off "
	CALL NDESC,WEDGE
	PRINTI ")"
	CRLF
	SET 'ON-WEDGE,0
	RFALSE
?L18:	CALL ROBOT-TELL,STR?255
	RTRUE
?L17:	EQUAL? PRSA,V?TAKE-OFF \FALSE
	CALL PERFORM,V?GET-OFF,PRSO
	RTRUE

	.FUNCT WALDO-ONLY-FCN
	EQUAL? WINNER,WALDO /FALSE
	EQUAL? PRSA,V?WEAR \FALSE
	CALL ROBOT-TELL,STR?256
	RTRUE

	.FUNCT CABINET-FCN
	EQUAL? PRSA,V?OPEN \?L1
	CALL ROBOT-TELL,STR?257
	RTRUE
?L1:	EQUAL? WINNER,POET /?L4
	EQUAL? WINNER,SENSA \?L3
?L4:	EQUAL? PRSA,V?EXAMINE,V?TOUCH \?L3
	FCLEAR FLOWSWITCH,INVISIBLE
	RFALSE
?L3:	EQUAL? PRSA,V?CLOSE \FALSE
	FSET? CABINET,OPENBIT \FALSE
	SET 'FLOWSWITCH-TURNED,0
	RFALSE

	.FUNCT FLOWSWITCH-FCN
	EQUAL? PRSA,V?TURN \?L1
	EQUAL? WINNER,SENSA /?L3
	CALL ROBOT-TELL,STR?258 >STACK
	RSTACK
?L3:	ZERO? FLOWSWITCH-TURNED /?L6
	CALL ROBOT-TELL,STR?259 >STACK
	RSTACK
?L6:	SET 'FLOWSWITCH-TURNED,1
	FSET CABINET,OPENBIT
	CALL ROBOT-TELL,STR?260
	FSET CABINET,TOUCHBIT
	GETP DEADBOT,P?OBJDESCS >STACK
	GET STACK,ROFF >STACK
	PRINT STACK
	CRLF
	RTRUE
?L1:	EQUAL? PRSA,V?EXAMINE \FALSE
	EQUAL? WINNER,SENSA \FALSE
	CALL ROBOT-TELL,STR?261 >STACK
	RSTACK

	.FUNCT DEADBOT-FCN
	EQUAL? PRSA,V?PUT-ON,V?TAKE \?L1
	CALL ROBOT-TELL,STR?262,0
	CALL NDESC,DEADBOT
	PRINTR " is too heavy."
?L1:	EQUAL? PRSA,V?MOVE \?L5
	CALL ROBOT-TELL,STR?263
	RTRUE
?L5:	EQUAL? PRSA,V?EXAMINE \FALSE
	FSET? REDWIRE,TOUCHBIT /FALSE
	IN? DEADBOT,REPAIR3 \FALSE
	CALL ROBOT-TELL,STR?264,0
	CALL NDESC,REDWIRE
	PRINTR " here that might prove useful."

	.FUNCT REDWIRE-FCN
	EQUAL? PRSA,V?REPLACE,V?REMOVE,V?TAKE \?L1
	FSET? REDWIRE,CUTBIT /?L1
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,REDWIRE
	PRINTI " is firmly attached to the "
	CALL NDESC,DEADBOT
	PRINTR ". I'll need a tool to remove it."
?L1:	EQUAL? PRSA,V?CUT \?L5
	EQUAL? PRSI,SURGERY-HAND \?L5
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,REDWIRE
	PRINTI " is too thick and would ruin the "
	CALL NDESC,SURGERY-HAND
	PRINTR "."
?L5:	EQUAL? PRSA,V?PUT-ON,V?PUT \FALSE
	IN? WINNER,TUBE2 \FALSE
	EQUAL? PRSI,GROOVE2 \FALSE
	IN? REDCABLE,GROOVE2 /FALSE
	SET 'REDSET,REDWIRE
	RFALSE

	.FUNCT CAR-FCN,RARG=M-OBJECT
	EQUAL? RARG,M-LOOK \?L1
	PRINTI "Through the "
	CALL NDESC,CAR
	PRINTI " I can detect the following:"
	CRLF
	LOC CAR >STACK
	GETP STACK,P?ROOMDESCS >STACK
	GET STACK,ROFF >STACK
	PRINT STACK
	CRLF
	RTRUE
?L1:	EQUAL? RARG,M-BEG \?L7
	EQUAL? PRSA,V?TAKE \?L8
	IN? PRSO,WINNER-HERE \?L8
	CALL ROBOT-TELL,STR?265
	RTRUE
?L8:	EQUAL? PRSA,V?DROP \?L10
	IN? PRSO,WINNER \?L10
	CALL ROBOT-TELL,STR?266
	RTRUE
?L10:	EQUAL? PRSA,V?THROW \?L11
	IN? PRSO,WINNER \?L12
	CALL ROBOT-TELL,STR?48
	LOC CAR >STACK
	MOVE PRSO,STACK
	RTRUE
?L12:	CALL CANT-DETECT,PRSO
	RTRUE
?L11:	EQUAL? PRSA,V?MOVE-ROBOT-TO-LOC /?L16
	EQUAL? PRSA,V?FOLLOW,V?WALK-TO,V?WALK \FALSE
?L16:	CALL ROBOT-TELL,STR?267 >STACK
	RSTACK
?L7:	EQUAL? RARG,M-OBJECT \FALSE
	EQUAL? PRSA,V?LOOK-INSIDE \FALSE
	ZERO? CAR-FULL /?L21
	CALL ROBOT-TELL,STR?268,0
	CALL NDESC,CAR-FULL
	PRINTI " inside the "
	CALL NDESC,CAR
	PRINTR "."
?L21:	CALL ROBOT-TELL,STR?269
	RTRUE

	.FUNCT CLONESWITCH-FCN
	EQUAL? PRSA,V?THROW \?L1
	EQUAL? PRSI,WHEEL,CLONESWITCH /FALSE
?L1:	EQUAL? PRSA,V?TAKE,V?MOVE,V?SET /?L4
	EQUAL? PRSA,V?PUSH /?L4
	EQUAL? PRSA,V?THROW,V?TURN,V?TOUCH \FALSE
?L4:	ZERO? ON-WEDGE /?L5
	CALL ROBOT-TELL,STR?270
	RTRUE
?L5:	CALL ROBOT-TELL,STR?271
	RTRUE

	.FUNCT TV-FCN
	EQUAL? PRSA,V?STEP-ON,V?STAND-ON,V?CLIMB-ON \?L1
	CALL ROBOT-TELL,STR?249
	RTRUE
?L1:	EQUAL? PRSA,V?PLUGIN \?L4
	LOC WINNER >STACK
	EQUAL? STACK,TUBE1,TUBE2 /?L3
	CALL ROBOT-TELL,STR?272
	RTRUE
?L3:	EQUAL? PRSA,V?PLUGIN \?L4
	EQUAL? PRSI,0,TVHOLE /?L5
	CALL ROBOT-TELL,STR?273
	RTRUE
?L5:	IN? TV,WINNER /?L7
	CALL ROBOT-TELL,STR?274
	RTRUE
?L7:	ZERO? TV-ON /?L8
	CALL ROBOT-TELL,STR?275
	JUMP ?L12
?L8:	CALL ROBOT-TELL,STR?276,0
	GET TV-QUIPS,ROFF >STACK
	PRINT STACK
	CRLF
	FSET? IRIS,CUTBIT /?L12
	ZERO? IRIS-FIXED /?L12
	CRLF
	GET INTER-TBL,1 >STACK
	PRINT STACK
	PRINTI " Receiving transmissions."
	CRLF
?L12:	SET 'TV-ON,1
	RETURN TV-ON
?L4:	EQUAL? PRSA,V?OPEN \?L17
	CALL ROBOT-TELL,STR?277 >STACK
	RSTACK
?L17:	EQUAL? PRSA,V?UNPLUG \?L18
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,TV
	PRINTI " has been unplugged."
	CRLF
	SET 'TV-ON,0
	RETURN TV-ON
?L18:	EQUAL? PRSA,V?TAKE \FALSE
	FSET? TV,TOUCHBIT /FALSE
	CALL GENERATE-CODES
	RFALSE

	.FUNCT KILL-CABLE-FCN
	EQUAL? PRSA,V?TAKE,V?REPLACE \FALSE
	CALL JIGS-UP,STR?278,WINNER >STACK
	RSTACK

	.FUNCT REDCABLE-FCN
	EQUAL? PRSA,V?REPLACE,V?TAKE \FALSE
	FCLEAR REDCABLE,NDESCBIT
	RFALSE

	.FUNCT ORANGECABLE-FCN
	EQUAL? PRSA,V?REPLACE,V?TAKE \FALSE
	FCLEAR ORANGECABLE,NDESCBIT
	RFALSE

	.FUNCT GROOVE-FCN
	EQUAL? PRSA,V?EXAMINE,V?LOOK \FALSE
	CALL ROBOT-TELL,STR?279,0
	CALL CABLECOUNT,PRSO >STACK
	PRINTN STACK
	PRINTI " "
	CALL NDESC,CABLES
	PRINTI " in the grooves. "
	GET CABLE-TBL,ROFF >STACK
	PRINT STACK
	CRLF
	RTRUE

	.FUNCT GROOVE-CONT
	EQUAL? PRSA,V?TAKE,V?REPLACE \FALSE
	EQUAL? PRSO,PINKCABLE,YELLOWCABLE,GREENCABLE /?L5
	EQUAL? PRSO,WHITECABLE,BLACKCABLE,BLUECABLE \FALSE
?L5:	PRINTI "Sizzzzzzzzzle..."
	CRLF
	CALL PRINT-ID,STR?280
	CALL JIGS-UP,STR?278,WINNER >STACK
	RSTACK

	.FUNCT PEOPLE-CABINET-FCN
	EQUAL? PRSA,V?OPEN \FALSE
	PRINTI "FC: Robots are restricted from opening this cabinet."
	CRLF
	CALL PRINT-ID,STR?281
	RTRUE

	.FUNCT TOOLBAG-FCN
	EQUAL? PRSA,V?TAKE \?L1
	IN? TOOLBAG,PEOPLE \FALSE
	CALL ROBOT-TELL,STR?32,0
	CALL NDESC,PEOPLE
	PRINTR " won't let me take it."
?L1:	EQUAL? PRSA,V?OPEN \FALSE
	CALL ROBOT-TELL,STR?282 >STACK
	RSTACK

	.FUNCT CONVEYERBELT-FCN
	EQUAL? PRSI,CONVEYERBELTA,CONVEYERBELTB,CONVEYERBELTC \?L1
	EQUAL? PRSA,V?TAKE \?L3
	CALL ROBOT-TELL,STR?283
	RETURN 2
?L3:	EQUAL? PRSA,V?PUT-ON \FALSE
	GETP PRSO,P?ROBOT >STACK
	ZERO? STACK \?L10
	EQUAL? PRSO,DEADBOT \?L8
?L10:	CALL ROBOT-TELL,STR?284,0
	EQUAL? PRSO,DEADBOT \?L11
	PRINTI "the "
?L11:	CALL NDESC,PRSO
	PRINTR " that high."
?L8:	SET 'BELT-ON,1
	CALL INT,I-BELT >STACK
	GET STACK,C-ENABLED? >STACK
	ZERO? STACK \?L19
	CALL QUEUE,I-BELT,2 >STACK
	PUT STACK,0,1
?L19:	EQUAL? PRSI,CONVEYERBELTA \FALSE
	FSET PRSO,FIXABLEBIT
	RFALSE
?L1:	EQUAL? PRSA,V?LAMP-OFF,V?LAMP-ON \FALSE
	CALL ROBOT-TELL,STR?285
	RTRUE

	.FUNCT LEVER-FCN
	EQUAL? PRSA,V?MOVE,V?PUSH \FALSE
	CALL PERFORM,V?SET,PRSO,PRSI
	RTRUE

	.FUNCT RTD-SWITCH-FCN
	EQUAL? PRSA,V?THROW \?L1
	CALL PERFORM,V?SET,PRSO,PRSI
	RTRUE
?L1:	EQUAL? PRSA,V?TURN \FALSE
	FSET? PRSO,ONBIT \?L4
	CALL PERFORM,V?LAMP-OFF,PRSO
	RTRUE
?L4:	CALL PERFORM,V?LAMP-ON,PRSO
	RTRUE

	.FUNCT PLAQUE-FCN
	EQUAL? PRSA,V?READ \FALSE
	EQUAL? WINNER,IRIS \?L4
	ZERO? IRIS-FIXED \?L6
	CALL ROBOT-TELL,STR?286 >STACK
	RSTACK
?L6:	CALL ROBOT-TELL,STR?287
	CRLF
	PRINTR "This Underground Complex was designed and built by the Frobozz Engineering Company, makers of such fine products as One-Way (tm) Bus Tickets, Ozone Nozone, and ""Best in the East"", soon to be a Smello-vision (tm) release.

Chief Designer/Architect: Michael Berlyn."
?L4:	EQUAL? WINNER,WALDO \?L11
	CALL ROBOT-TELL,STR?288 >STACK
	RSTACK
?L11:	EQUAL? WINNER,SENSA \?L12
	CALL ROBOT-TELL,STR?289 >STACK
	RSTACK
?L12:	EQUAL? WINNER,AUDA \?L13
	CALL ROBOT-TELL,STR?290 >STACK
	RSTACK
?L13:	EQUAL? WINNER,POET \?L14
	CALL ROBOT-TELL,STR?291 >STACK
	RSTACK
?L14:	EQUAL? WINNER,WHIZ \FALSE
	CALL ROBOT-TELL,STR?292 >STACK
	RSTACK

	.FUNCT MACHINE-FCN
	EQUAL? PRSA,V?OPEN,V?CLOSE \FALSE
	CALL ROBOT-TELL,STR?293 >STACK
	RSTACK

	.FUNCT ORANGE-BUTTON-FCN
	EQUAL? PRSA,V?PUSH \FALSE
	FSET? MACHINE,OPENBIT /?L1
	IN? NEWCHIP0,SOCKET1 \?L3
	IN? NEWCHIP2,SOCKET2 \?L3
	IN? FUSE,MACHINE \?L3
	GET BUTTON-PRESS-TBL,ROFF >STACK
	CALL ROBOT-TELL,STACK
	FCLEAR ORANGE-WIRE,INVISIBLE
	FCLEAR FUSE,INVISIBLE
	FSET MACHINE,OPENBIT
	RTRUE
?L3:	CALL ROBOT-TELL,STR?294 >STACK
	RSTACK
?L1:	EQUAL? PRSA,V?PUSH \FALSE
	CALL ROBOT-TELL,STR?294 >STACK
	RSTACK

	.FUNCT ORANGE-WIRE-FCN
	EQUAL? PRSA,V?REPLACE,V?TAKE \?L1
	IN? FUSE,MACHINE \FALSE
	IN? ORANGE-WIRE,MACHINE \FALSE
	CALL ROBOT-TELL,STR?295,0
	CALL NDESC,ORANGE-WIRE
	PRINTI "..."
	CRLF
	CALL PRINT-ID,STR?296
	CALL JIGS-UP,STR?297,WINNER >STACK
	RSTACK
?L1:	EQUAL? PRSA,V?PUT-ON,V?PUT \FALSE
	IN? WINNER,TUBE1 \FALSE
	IN? ORANGECABLE,GROOVE1 /FALSE
	EQUAL? PRSI,GROOVE2 \FALSE
	SET 'ORANGESET,ORANGE-WIRE
	RFALSE

	.FUNCT SOCKET-FCN,TBL
	EQUAL? PRSA,V?CLOSE \FALSE
	CALL ROBOT-YUKS >STACK
	RSTACK

	.FUNCT CIRCLE-FCN,COUNT=0,NUM-PRESSED=0,PREMATURE=1
	EQUAL? PRSA,V?PUSH \FALSE
	IN? FUSE,MACHINE /?L3
	CALL ROBOT-TELL,STR?298
	RTRUE
?L3:	FSET? PRSO,TOUCHBIT \?L6
	PRINTR "FC: That one has already been pressed."
?L6:	FSET PRSO,TOUCHBIT
	EQUAL? REDSET,REDWIRE \?L15
	EQUAL? ORANGESET,ORANGE-WIRE \?L15
	SET 'PREMATURE,0
	EQUAL? PRSO,CODE1 \?L13
	SET 'CODE-SET1,1
	JUMP ?L15
?L13:	EQUAL? PRSO,CODE2 \?L15
	SET 'CODE-SET2,1
?L15:	IGRTR? 'COUNT,8 /?L19
	GET CODE-TBL,COUNT >STACK
	FSET? STACK,TOUCHBIT \?L15
	INC 'NUM-PRESSED
	JUMP ?L15
?L19:	EQUAL? NUM-PRESSED,1 \?L26
	ZERO? PREMATURE /?L28
	PRINTI "FC: Attempt for reset has been rejected. Code entry premature. FCs out of balance."
	CRLF
	CALL RESET-CODES
	RTRUE
?L28:	PRINTR "FC: First access code accepted. Enter second access code now."
?L26:	EQUAL? NUM-PRESSED,2 \FALSE
	PRINTI "FC: Second access code accepted. "
	CRLF
	ZERO? CODE-SET1 /?L38
	ZERO? CODE-SET2 /?L38
	CALL END-GAME >STACK
	RSTACK
?L38:	CRLF
	PRINTI "FC: Code recognition failed. Pattern entered does not match the reset code. Reset procedures aborted. New reset code being generated due to possible tampering."
	CRLF
	CALL RESET-CODES
	CALL GENERATE-CODES >STACK
	RSTACK

	.FUNCT RESET-CODES,COUNT=0
?L1:	IGRTR? 'COUNT,8 /?L2
	GET CODE-TBL,COUNT >STACK
	FCLEAR STACK,TOUCHBIT
	JUMP ?L1
?L2:	SET 'CODE-SET1,0
	SET 'CODE-SET2,0
	RTRUE

	.FUNCT GENERATE-CODES
	CALL PICK-ONE,CODE-TBL >CODE1
	CALL PICK-ONE,CODE-TBL >CODE2
?L1:	EQUAL? CODE1,CODE2 \?L2
	CALL PICK-ONE,CODE-TBL >CODE2
	JUMP ?L1
?L2:	CALL RESET-CODES >STACK
	RSTACK

	.FUNCT KILL-GOAL,RBT,DRAG=0,GT,OFFSET
	GETP RBT,P?ROBOT >OFFSET
	GET GOAL-TABLES,OFFSET >GT
	PUT GT,GOAL-S,0
	PUT GT,GOAL-F,0
	PUT GT,GOAL-ENABLE,1
	ZERO? DRAG /FALSE
	PUT DRAG-TBL,OFFSET,0
	RFALSE

	.FUNCT SET-GOAL,RBT,GOAL,HERE?1,HL,GL,GT
	LOC RBT >HERE?1
	GETP RBT,P?ROBOT >STACK
	GET GOAL-TABLES,STACK >GT
	GETP GOAL,P?LINE >STACK
	MUL STACK,2 >STACK
	GETP HERE?1,P?LINE >STACK
	MUL STACK,12 >STACK
	ADD STACK,STACK >STACK
	PUT GT,GOAL-I,STACK
	GETP GOAL,P?STATION >STACK
	PUT GT,GOAL-S,STACK
	PUT GT,GOAL-F,GOAL
	PUT GT,GOAL-ENABLE,1
	LOC RBT >STACK
	RSTACK

	.FUNCT FOLLOW-GOAL,RBT,HERE?1,LINE,LN,RM,GT,GOAL,FLG,GOAL-FLAG=0,IGOAL=0,LOC,CNT=1,DIR
	LOC RBT >HERE?1
	GETP RBT,P?ROBOT >STACK
	GET GOAL-TABLES,STACK >GT
	GET GT,GOAL-F >STACK
	EQUAL? HERE?1,STACK \?L1
	CALL ARRIVAL,RBT
	EQUAL? RBT,PEOPLE /FALSE
	RTRUE
?L1:	GET GT,GOAL-ENABLE >STACK
	ZERO? STACK /FALSE
	GETP HERE?1,P?STATION >LOC
	EQUAL? LOC,HERE?1 /?L8
	CALL MOVE-RBT,RBT,LOC >STACK
	RSTACK
?L8:	GET GT,GOAL-I >IGOAL
	GET TRANSFER-TABLE,IGOAL >GOAL
	ZERO? GOAL \?L14
	SET 'IGOAL,0
	GET GT,GOAL-S >GOAL
	ZERO? GOAL /FALSE
?L14:	EQUAL? HERE?1,GOAL \?L23
	ZERO? IGOAL /?L17
	ADD IGOAL,1 >STACK
	GET TRANSFER-TABLE,STACK >STACK
	CALL MOVE-RBT,RBT,STACK >FLG
	ZERO? FLG \?L19
	GET GT,GOAL-F >STACK
	CALL SET-GOAL,RBT,STACK
?L19:	RETURN FLG
?L17:	GET GT,GOAL-F >STACK
	EQUAL? HERE?1,STACK /?L22
	GET GT,GOAL-F >STACK
	CALL MOVE-RBT,RBT,STACK
	CALL ARRIVAL,RBT >STACK
	RSTACK
?L22:	CALL ARRIVAL,RBT >STACK
	RSTACK
?L23:	GETP GOAL,P?LINE >STACK
	CALL GET-LINE,STACK >LINE
?L25:	GET LINE,CNT >RM
	EQUAL? RM,HERE?1 \?L27
	ZERO? GOAL-FLAG /?L29
	SUB CNT,3 >STACK
	GET LINE,STACK >LOC
	JUMP ?L31
?L29:	ADD CNT,3 >STACK
	GET LINE,STACK >LOC
?L31:	CALL MOVE-RBT,RBT,LOC >STACK
	RSTACK
?L27:	EQUAL? RM,GOAL \?L32
	SET 'GOAL-FLAG,1
?L32:	ADD CNT,3 >CNT
	JUMP ?L25

	.FUNCT STUCK,RBT,WHERE,GT,TEMP,OFFSET
	GETP RBT,P?ROBOT >OFFSET
	GET GOAL-TABLES,OFFSET >GT
	SET 'TEMP,WINNER
	CALL CHANGE-WINNER,RBT,1
	EQUAL? WINNER,TEMP \?L1
	GET STUCK-QUIPS,ROFF >STACK
	CALL ROBOT-TELL,STACK,0
	JUMP ?L3
?L1:	GET INTER-TBL,ROFF >STACK
	PRINT STACK
	PRINTI " "
	GET STUCK-QUIPS,ROFF >STACK
	PRINT STACK
?L3:	LOC RBT >STACK
	PRINTD STACK
	PRINTI " to "
	EQUAL? WINNER,IRIS \?L8
	PRINTI "Angling Corridor"
	JUMP ?L12
?L8:	PRINTD WHERE
?L12:	PRINTI ". "
	GET MORE-STUCKS,ROFF >STACK
	PRINT STACK
	CRLF
	CALL KILL-GOAL,RBT
	PUT ROBOT-FOLLOW,OFFSET,0
	PUT FOLLOW-TBL,ROFF,0
	CALL CHANGE-WINNER,TEMP,1
	RTRUE

	.FUNCT MOVE-RBT,RBT,WHERE,L,COUNT=0,FLOC,FROB
	LOC RBT >L
	CALL MOVE-RBT?,RBT,L,WHERE >STACK
	ZERO? STACK \TRUE
?L1:	INC 'COUNT
	EQUAL? COUNT,7 /FALSE
	GET FOLLOW-TBL,COUNT >STACK
	EQUAL? STACK,RBT \?L1
	SUB COUNT,1 >STACK
	GET NAME-TBL,STACK >FROB
	LOC FROB >FLOC
	EQUAL? FROB,IRIS \?L11
	EQUAL? CORRIDOR-1,WHERE \?L11
	CALL STUCK,IRIS,CPU-ROOM
	JUMP ?L1
?L11:	CALL MOVE-RBT?,FROB,FLOC,WHERE
	JUMP ?L1

	.FUNCT MOVE-RBT?,RBT,L,WHERE
	EQUAL? L,HUMAN-ENTRY,HALLWAY-JUNCTION \?L1
	EQUAL? WHERE,HUMAN-ENTRY,HALLWAY-JUNCTION \?L1
	EQUAL? WEDGE-PLACED,2 /?L1
	EQUAL? RBT,PEOPLE /?L1
	CALL STUCK,RBT,WHERE
	RTRUE
?L1:	EQUAL? L,CORRIDOR-4 \?L3
	EQUAL? WHERE,ACIDMIST \?L3
	ZERO? ACID-FIXED \?L3
	EQUAL? PEOPLE,RBT /?L3
	GETP RBT,P?ROBOT >STACK
	GET DEADBOTS,STACK >STACK
	ZERO? STACK \?L4
	GETP RBT,P?ROBOT >STACK
	PUT DEADBOTS,STACK,1
	CALL DO-THE-MOVE,RBT,L,WHERE
	RFALSE
?L4:	CALL DO-THE-MOVE,RBT,L,WHERE
	RFALSE
?L3:	EQUAL? L,HALL-END,CAR-AREA \?L7
	EQUAL? WHERE,HALL-END,CAR-AREA \?L7
	CALL STUCK,RBT,WHERE
	RTRUE
?L7:	EQUAL? RBT,IRIS \?L8
	EQUAL? L,CPU-ROOM,CORRIDOR-1 \?L8
	EQUAL? WHERE,CORRIDOR-1,CORRIDOR-2 \?L8
	MOVE IRIS,CPU-ROOM
	SET 'WHERE,CORRIDOR-1
	SET 'L,CPU-ROOM
	CALL STUCK,RBT,WHERE
	RTRUE
?L8:	CALL DO-THE-MOVE,RBT,L,WHERE
	RFALSE

	.FUNCT DO-THE-MOVE,RBT,L,WHERE,DRAGEE
	MOVE RBT,WHERE
	EQUAL? RBT,WINNER \?L1
	SET 'WINNER-HERE,WHERE
?L1:	GETP RBT,P?ROBOT >STACK
	PUT LAST-ROOM,STACK,L
	EQUAL? RBT,PEOPLE /FALSE
	GETP RBT,P?ROBOT >STACK
	GET DRAG-TBL,STACK >DRAGEE
	ZERO? DRAGEE /FALSE
	MOVE DRAGEE,WHERE
	GETP DRAGEE,P?ROBOT >STACK
	PUT LAST-ROOM,STACK,L
	RFALSE

	.FUNCT COR-DIR,HERE?1,THERE,COR,RM,PAST=0,CNT=2
	GETP HERE?1,P?CORRIDOR >STACK
	GETP THERE,P?CORRIDOR >STACK
	BAND STACK,STACK >STACK
	CALL GET-COR,STACK >COR
?L1:	GET COR,CNT >RM
	EQUAL? RM,HERE?1 \?L3
	SET 'PAST,1
	JUMP ?L2
?L3:	EQUAL? RM,THERE /?L2
	INC 'CNT
	JUMP ?L1
?L2:	GET COR,PAST >STACK
	RSTACK

	.FUNCT GET-LINE,LN
	ZERO? LN \?L1
	RETURN A-LINE
?L1:	EQUAL? LN,1 \?L3
	RETURN B-LINE
?L3:	EQUAL? LN,2 \?L4
	RETURN C-LINE
?L4:	EQUAL? LN,3 \?L5
	RETURN D-LINE
?L5:	EQUAL? LN,4 \?L6
	RETURN E-LINE
?L6:	RETURN F-LINE

	.FUNCT GET-COR,NUM
	EQUAL? NUM,1 \?L1
	RETURN COR-1
?L1:	EQUAL? NUM,2 \?L3
	RETURN COR-2
?L3:	EQUAL? NUM,4 \?L4
	RETURN COR-4
?L4:	EQUAL? NUM,8 \?L5
	RETURN COR-8
?L5:	EQUAL? NUM,16 \?L6
	RETURN COR-16
?L6:	EQUAL? NUM,32 \?L7
	RETURN COR-32
?L7:	EQUAL? NUM,64 \?L8
	RETURN COR-64
?L8:	EQUAL? NUM,128 \?L9
	RETURN COR-128
?L9:	RETURN COR-256

	.FUNCT DIR-PRINT,DIR,CNT=0
?L1:	GET DIR-STRINGS,CNT >STACK
	EQUAL? STACK,DIR \?L3
	EQUAL? DIR,P?UP,P?DOWN /?L5
	PRINTI "the "
?L5:	ADD CNT,1 >STACK
	GET DIR-STRINGS,STACK >STACK
	PRINT STACK
	RTRUE
?L3:	INC 'CNT
	JUMP ?L1

	.FUNCT GOAL?,RBT
	GETP RBT,P?ROBOT >STACK
	GET GOAL-TABLES,STACK >STACK
	GET STACK,GOAL-F >STACK
	RSTACK

	.FUNCT I-FOLLOW,FLG=0,CNT=0,GT
?L1:	IGRTR? 'CNT,CHARACTER-MAX \?L3
	RETURN FLG
?L3:	GET GOAL-TABLES,CNT >GT
	GET GT,GOAL-S >STACK
	ZERO? STACK /?L1
	GET GT,GOAL-ENABLE >STACK
	ZERO? STACK /?L1
	PUT GT,GOAL-ENABLE,1
	GET CHARACTER-TBL,CNT >STACK
	CALL FOLLOW-GOAL,STACK >STACK
	ZERO? STACK /?L1
	SET 'FLG,1
	JUMP ?L1

	.FUNCT ARRIVAL,RBT,GT
	GETP RBT,P?ROBOT >STACK
	GET GOAL-TABLES,STACK >GT
	PUT GT,GOAL-S,0
	PUT GT,GOAL-F,0
	GET GT,GOAL-FUNCTION >STACK
	CALL STACK,RBT,G-REACHED >STACK
	RTRUE

	.FUNCT G-ROBOT,RBT,GARG,TEMP,COUNT,CHASED
	EQUAL? GARG,G-REACHED \FALSE
	SET 'TEMP,WINNER
	CALL CHANGE-WINNER,RBT,1
	CRLF
	EQUAL? WINNER,TEMP \?L3
	GET ARRIVAL-QUIPS,ROFF >STACK
	CALL ROBOT-TELL,STACK,0
	JUMP ?L5
?L3:	GET INTER-TBL,ROFF >STACK
	PRINT STACK
	PRINTI " "
	GET ARRIVAL-QUIPS,ROFF >STACK
	PRINT STACK
?L5:	CALL KILL-GOAL,WINNER,1
	LOC WINNER >STACK
	PRINTD STACK
	PRINTI "."
	GET ROBOT-FOLLOW,ROFF >CHASED
	ZERO? CHASED /?L12
	LOC RBT >STACK
	LOC CHASED >STACK
	EQUAL? STACK,STACK /?L12
	PRINTI " Looks like I missed "
	CALL NDESC,CHASED
	PRINTI " though."
	CRLF
?L12:	GETP RBT,P?ROBOT >STACK
	PUT ROBOT-FOLLOW,STACK,0
	GETP WINNER-HERE,P?ACTION >STACK
	CALL STACK,M-ENTER >STACK
	CRLF
	CALL CHANGE-WINNER,TEMP,1
	RETURN 2

	.FUNCT G-PEOPLE,RBT,GARG,COUNT
	EQUAL? GARG,G-REACHED \FALSE
	EQUAL? PR-NUMBER,1 \?L3
	CALL PARRIVE1 >STACK
	RSTACK
?L3:	EQUAL? PR-NUMBER,2 \?L5
	CALL PARRIVE2 >STACK
	RSTACK
?L5:	EQUAL? PR-NUMBER,3 \?L6
	CALL PARRIVE3 >STACK
	RSTACK
?L6:	EQUAL? PR-NUMBER,4 \?L7
	CALL PARRIVE4 >STACK
	RSTACK
?L7:	EQUAL? PR-NUMBER,5 \?L8
	CALL PARRIVE5 >STACK
	RSTACK
?L8:	EQUAL? PR-NUMBER,6 \?L9
	CALL PARRIVE6 >STACK
	RSTACK
?L9:	EQUAL? PR-NUMBER,7 \?L10
	CALL PARRIVE7 >STACK
	RSTACK
?L10:	EQUAL? PR-NUMBER,8 \?L11
	CALL PARRIVE8 >STACK
	RSTACK
?L11:	EQUAL? PR-NUMBER,9 \FALSE
	CALL PARRIVE9 >STACK
	RSTACK

	.FUNCT CORRIDOR-LOOK,ITM=0,C,Z,COR,VAL,FOUND=0
	GETP WINNER-HERE,P?CORRIDOR >C
	ZERO? C /FALSE
?L3:	SUB C,256 >Z
	LESS? Z,0 /?L5
	SET 'COR,COR-256
	JUMP ?L15
?L5:	SUB C,128 >Z
	LESS? Z,0 /?L7
	SET 'COR,COR-128
	JUMP ?L15
?L7:	SUB C,64 >Z
	LESS? Z,0 /?L8
	SET 'COR,COR-64
	JUMP ?L15
?L8:	SUB C,32 >Z
	LESS? Z,0 /?L9
	SET 'COR,COR-32
	JUMP ?L15
?L9:	SUB C,16 >Z
	LESS? Z,0 /?L10
	SET 'COR,COR-16
	JUMP ?L15
?L10:	SUB C,8 >Z
	LESS? Z,0 /?L11
	SET 'COR,COR-8
	JUMP ?L15
?L11:	SUB C,4 >Z
	LESS? Z,0 /?L12
	SET 'COR,COR-4
	JUMP ?L15
?L12:	SUB C,2 >Z
	LESS? Z,0 /?L13
	SET 'COR,COR-2
	JUMP ?L15
?L13:	SUB C,1 >Z
	LESS? Z,0 /?L4
	SET 'COR,COR-1
?L15:	CALL CORRIDOR-CHECK,COR,ITM >VAL
	ZERO? FOUND \?L16
	SET 'FOUND,VAL
?L16:	SET 'C,Z
	JUMP ?L3
?L4:	RETURN FOUND

	.FUNCT CORRIDOR-CHECK,COR,ITM,CNT=2,PAST=0,FOUND=0,RM,OBJ
?L1:	GET COR,CNT >RM
	ZERO? RM /FALSE
	EQUAL? RM,WINNER-HERE \?L5
	SET 'PAST,1
	JUMP ?L41
?L5:	FIRST? RM >OBJ \?L41
?L7:	ZERO? ITM /?L9
	EQUAL? OBJ,ITM \?L14
	GET COR,PAST >FOUND
	JUMP ?L8
?L9:	GETP OBJ,P?ROBOT >STACK
	ZERO? STACK /?L14
	GETP OBJ,P?ROBOT >STACK
	EQUAL? STACK,7 \?L15
	PRINTI "Some "
	CALL NDESC,OBJ
	PRINTI " are "
	JUMP ?L19
?L15:	CALL NDESC,OBJ
	PRINTI " is "
?L19:	CALL IN-MOTION?,OBJ >STACK
	ZERO? STACK /?L22
	PRINTI "in motion "
?L22:	PRINTI "off to "
	GET COR,PAST >STACK
	CALL DIR-PRINT,STACK
	CALL DRAGGING?,OBJ
	PRINTI "."
	EQUAL? OBJ,PEOPLE \?L31
	ZERO? CHASING-THIEF /?L31
	EQUAL? WINNER,RTHIEF \?L31
	PRINTI " They appear to be in hot pursuit."
?L31:	CRLF
?L14:	NEXT? OBJ >OBJ /?L7
?L8:	ZERO? FOUND /?L41
	RETURN FOUND
?L41:	INC 'CNT
	JUMP ?L1

	.FUNCT DRAGGING?,RBT,DRAGEE
	EQUAL? RBT,PEOPLE /FALSE
	GETP RBT,P?ROBOT >STACK
	GET DRAG-TBL,STACK >DRAGEE
	ZERO? DRAGEE /FALSE
	PRINTI ", dragging "
	CALL NDESC,DRAGEE
	RFALSE

	.FUNCT IN-MOTION?,RBT,GT
	GETP RBT,P?ROBOT >STACK
	GET GOAL-TABLES,STACK >GT
	GET GT,GOAL-ENABLE >STACK
	ZERO? STACK /FALSE
	GET GT,GOAL-S >STACK
	ZERO? STACK /FALSE
	GET GT,GOAL-F >STACK
	LOC RBT >STACK
	EQUAL? STACK,STACK /FALSE
	RTRUE

	.FUNCT AUDA-HEARS?
	LOC PEOPLE >STACK
	IN? AUDA,STACK \FALSE
	ZERO? AUDA-LISTENS \?L3
	EQUAL? WINNER,AUDA \FALSE
?L3:	GET DEADBOTS,4 >STACK
	LESS? STACK,30 /TRUE
	RFALSE

	.FUNCT AUDA-SPEAKS
	EQUAL? WINNER,AUDA /?L1
	CRLF
	GET INTER-TBL,4 >STACK
	PRINT STACK
	PRINTR " Listening..."
?L1:	CRLF
	RTRUE

	.FUNCT ROBOT-THERE?,RBT
	LOC PEOPLE >STACK
	IN? RBT,STACK \FALSE
	FSET? RBT,CUTBIT \TRUE
	RFALSE

	.FUNCT I-PEOPLE1
	SET 'PR-NUMBER,1
	MOVE PEOPLE,STERILE-AREA
	CALL SET-GOAL,PEOPLE,TOOL-AREA
	CRLF
	PRINTI "FC INTERRUPT: ALERT! ALERT!
Intruders detected in Sterilization Chamber!"
	CRLF
	RETURN 2

	.FUNCT PARRIVE1,TEMP
	MOVE TOOLBAG,PEOPLE
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L1
	CALL AUDA-SPEAKS
	PRINTI "I can hear the sound of metal against metal, followed by the sound of a creaking door opening.

""I've got the toolbag. Everything in it seems intact.""
""Well, don't lose it, man. We're lost without it. We'll never pull the switch on him if we lose it.""
""Don't worry. I won't let it out of my sight.""
""I'm getting sleepy. It was a long ride down here. What do you say we catch some sleep?""
""You really think we should? With all the devastation taking place?""
""I don't have much choice. I'm not thinking clearly, and I really need to sleep. More casualties will occur if we don't take care of ourselves.""
""Good point. Let's go."""
	CRLF
?L1:	CALL ROBOT-THERE?,WALDO >STACK
	ZERO? STACK /?L6
	SET 'TEMP,WINNER
	CALL CHANGE-WINNER,WALDO,1
	CRLF
	GET INTER-TBL,2 >STACK
	PRINT STACK
	PRINTI " The mobile objects have stopped for a moment. I also detect the "
	CALL NDESC,PEOPLE-CABINET
	PRINTI " opening then shutting. The "
	CALL NDESC,PEOPLE
	PRINTI " have removed a "
	CALL NDESC,TOOLBAG
	PRINTI " and are grasping it."
	CRLF
	CALL CHANGE-WINNER,TEMP,1
	JUMP ?L13
?L6:	CALL ROBOT-THERE?,SENSA >STACK
	ZERO? STACK /?L10
	SET 'TEMP,WINNER
	CALL CHANGE-WINNER,SENSA,1
	CRLF
	GET INTER-TBL,3 >STACK
	PRINT STACK
	PRINTI " I can detect the cycling of a mechanism attached to the "
	CALL NDESC,PEOPLE-CABINET
	PRINTI " and the "
	CALL NDESC,PEOPLE
	PRINTI " removing a "
	CALL NDESC,TOOLBAG
	PRINTI " from it."
	CRLF
	CALL CHANGE-WINNER,TEMP,1
	JUMP ?L13
?L10:	CALL ROBOT-THERE?,POET >STACK
	ZERO? STACK /?L13
	SET 'TEMP,WINNER
	CALL CHANGE-WINNER,POET,1
	CRLF
	GET INTER-TBL,5 >STACK
	PRINT STACK
	PRINTI " As the amazing "
	CALL NDESC,PEOPLE
	PRINTI " check in, they casually remove something from a "
	CALL NDESC,PEOPLE-CABINET
	PRINTI ". It appears to be a "
	CALL NDESC,TOOLBAG
	PRINTI "."
	CRLF
	CALL CHANGE-WINNER,TEMP,1
?L13:	CALL SET-GOAL,PEOPLE,SLEEP-CHAMBER
	SET 'PR-NUMBER,2
	RETURN PR-NUMBER

	.FUNCT PARRIVE2,TEMP
	ZERO? CHASING-THIEF \FALSE
	SET 'SLEEPERS,0
	CALL QUEUE,I-STEAL,-1 >STACK
	PUT STACK,0,1
	MOVE TOOLBAG,SLEEP-CHAMBER
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L4
	ZERO? GIVEN-BAG \?L4
	CALL AUDA-SPEAKS
	PRINTI """Well, this is some sleep chamber. No frills.""
""Don't complain. At least there's bunks for us.""
""I suppose. I'm going to put the toolbag on the floor while I grab some shuteye.""
""What about the robot?""
""What, that ear thing? Gimme a break!""

AUDA: I hear the sound of metal being placed on the floor."
	CRLF
?L4:	CALL ROBOT-THERE?,WALDO >STACK
	ZERO? STACK /?L9
	ZERO? GIVEN-BAG \?L9
	CRLF
	GET INTER-TBL,2 >STACK
	PRINT STACK
	PRINTR " The mobile objects are moving over to the platforms and are reclining."
?L9:	CALL ROBOT-THERE?,SENSA >STACK
	ZERO? STACK /?L13
	ZERO? GIVEN-BAG \?L13
	SET 'TEMP,WINNER
	CALL CHANGE-WINNER,SENSA,1
	CRLF
	GET INTER-TBL,3 >STACK
	PRINT STACK
	PRINTI " I detect an extreme drop in electrical and ionic activity in this area as the "
	CALL NDESC,PEOPLE
	PRINTI " become immobile."
	CRLF
	CALL CHANGE-WINNER,TEMP,1
	RTRUE
?L13:	CALL ROBOT-THERE?,POET >STACK
	ZERO? STACK /TRUE
	ZERO? GIVEN-BAG \TRUE
	CRLF
	GET INTER-TBL,5 >STACK
	PRINT STACK
	PRINTR " Ah, yawn. Ho hum. These people are boring."

	.FUNCT I-STEAL
	IGRTR? 'SLEEPERS,20 \?L1
	CALL INT,I-STEAL >STACK
	PUT STACK,0,0
	CALL QUEUE,I-PEOPLE2,1 >STACK
	PUT STACK,0,1
?L1:	EQUAL? SLEEPERS,1 \?L4
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /FALSE
	CALL AUDA-SPEAKS
	GET SNORES-TBL,0 >STACK
	PRINT STACK
	CRLF
	RTRUE
?L4:	EQUAL? SLEEPERS,5 \?L11
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /FALSE
	CALL AUDA-SPEAKS
	GET SNORES-TBL,1 >STACK
	PRINT STACK
	CRLF
	RTRUE
?L11:	EQUAL? SLEEPERS,10 \?L17
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /FALSE
	CALL AUDA-SPEAKS
	GET SNORES-TBL,2 >STACK
	PRINT STACK
	CRLF
	RTRUE
?L17:	EQUAL? SLEEPERS,15 \FALSE
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /FALSE
	CALL AUDA-SPEAKS
	GET SNORES-TBL,3 >STACK
	PRINT STACK
	CRLF
	RTRUE

	.FUNCT ENOUGH-TRADING
	CALL ROBOT-TELL,STR?46
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L1
	CALL AUDA-SPEAKS
	PRINTI """Enough is enough! We'll never get anywhere with this little thing pestering us.""
""Tell me about it. Let's just get on with this.""
""Fine with me. Grab the bag.""
""Okay."""
	CRLF
?L1:	MOVE TOOLBAG,PEOPLE
	SET 'FED-UP,1
	SET 'CHASING-THIEF,0
	CALL INT,I-STEAL >STACK
	PUT STACK,0,0
	CALL I-PEOPLE2
	SET 'PR-NUMBER,3
	CALL SET-GOAL,PEOPLE,INNER-CORE >STACK
	RSTACK

	.FUNCT PEOPLE-GIVEN-BAG
	CALL ROBOT-TELL,STR?46
	SET 'GIVEN-BAG,1
	MOVE TOOLBAG,PEOPLE
	CALL INT,I-CHASEAUDA >STACK
	PUT STACK,0,0
	SET 'RTHIEF,0
	SET 'CHASING-THIEF,0
	SET 'TAKE-BACK,0
	SET 'PR-NUMBER,9
	LESS? SLEEPERS,20 \?L1
	SET 'SLEEPERS,0
	CALL QUEUE,I-STEAL,-1 >STACK
	PUT STACK,0,1
	MOVE TOOLBAG,SLEEP-CHAMBER
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /FALSE
	CALL AUDA-SPEAKS
	PRINTR """It's a good thing that little thief gave the bag back.""
""I'll say. Let's get some more sleep.""
""Okay.""
""You're not worried about leaving the bag on the floor, now, are you?""
""Nah. I'm not worried."""
?L1:	CALL INT,I-STEAL >STACK
	PUT STACK,0,0
	CALL I-PEOPLE2
	SET 'PR-NUMBER,3
	CALL SET-GOAL,PEOPLE,INNER-CORE
	MOVE TOOLBAG,PEOPLE
	RFALSE

	.FUNCT I-PEOPLE2,FLG=0
	SET 'PR-NUMBER,3
	CALL SET-GOAL,PEOPLE,INNER-CORE
	MOVE TOOLBAG,PEOPLE
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L1
	ZERO? FED-UP \?L1
	CALL AUDA-SPEAKS
	SET 'FLG,1
	PRINTI """I really needed more rest than that, but it'll have to do. Let's get on with what this.""
""Okay. Just give me a second. Where to now?""
""The Central Library. We've got to get a little info before we can pull the switch.""
""Oops. Almost forgot the tool bag!"""
	CRLF
?L1:	CALL ROBOT-THERE?,WALDO >STACK
	ZERO? STACK /?L6
	SET 'FLG,1
	CRLF
	GET INTER-TBL,2 >STACK
	PRINT STACK
	PRINTI " The mobile objects are resuming their normal positions and are becoming active."
	CRLF
	RETURN FLG
?L6:	CALL ROBOT-THERE?,SENSA >STACK
	ZERO? STACK /?L10
	SET 'FLG,1
	CRLF
	GET INTER-TBL,3 >STACK
	PRINT STACK
	PRINTI " The air is becoming charged with ionic activity as the creatures stir from quiescence."
	CRLF
	RETURN FLG
?L10:	CALL ROBOT-THERE?,POET >STACK
	ZERO? STACK /?L13
	SET 'FLG,1
	CRLF
	GET INTER-TBL,5 >STACK
	PRINT STACK
	PRINTI " Like loaves of bread sitting on a warm oven, the Creators rise."
	CRLF
?L13:	RETURN FLG

	.FUNCT PARRIVE3
	CALL QUEUE,I-PEOPLE4,3 >STACK
	PUT STACK,0,1
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L1
	CALL AUDA-SPEAKS
	PRINTI "I can hear them talking, but I can't make out what's being said."
	CRLF
?L1:	ZERO? PLUGGED-IN /FALSE
	CRLF
	GET INTER-TBL,6 >STACK
	PRINT STACK
	PRINTR " Humans querying the CLC regarding proper replacement procedure for you. CLC is responding with the human access code for reviving one of your clones."

	.FUNCT I-PEOPLE4
	SET 'PR-NUMBER,4
	CALL SET-GOAL,PEOPLE,HALL-END
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /FALSE
	CALL AUDA-SPEAKS
	PRINTR """That information should do the trick. Let's get the replacement.""
""Yeah. Sounds good to me. I guess that person really went over the deep end, poor thing. Sitting in that capsule can't be a lot of fun.""
""Well, that's the way it goes."""

	.FUNCT PARRIVE4,FLG=0
	IN? CAR,HALL-END \?L1
	ZERO? CAR-FULL \?L1
	CALL QUEUE,I-KILL,15 >STACK
	PUT STACK,0,1
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L3
	SET 'FLG,1
	CALL AUDA-SPEAKS
	PRINTI """Let's get into the car and get this thing over with. The clones are near the end of this tube.""
""Sounds good to me. This place gives me the creeps.""

AUDA: I hear the sounds of the people entering the car, then the whoosh as the car takes off to the east."
	CRLF
?L3:	MOVE PEOPLE,CRYOUNITS
	MOVE CAR,CAR-AREA
	RETURN FLG
?L1:	CALL QUEUE,I-CAR-WAIT,-1 >STACK
	PUT STACK,0,1
	ZERO? WAITING-QUIP \FALSE
	SET 'WAITING-QUIP,1
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /FALSE
	CALL AUDA-SPEAKS
	PRINTR """We'll have to wait for the car. We can't negotiate this tube on foot.""
""Fine. I've got nothing but time."""

	.FUNCT I-CAR-WAIT
	IN? CAR,HALL-END \?L1
	ZERO? CAR-FULL \?L1
	CALL INT,I-CAR-WAIT >STACK
	PUT STACK,0,0
	CALL PARRIVE4 >STACK
	RSTACK
?L1:	INC 'CAR-GONE
	EQUAL? CAR-GONE,10 \?L4
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L4
	CALL AUDA-SPEAKS
	PRINTR """Man, I just hate the way this car was designed.""
""Yeah, well, join the club. We'll just have to wait. We can't go back to the surface until we've pulled the switch, anyway."""
?L4:	EQUAL? CAR-GONE,30 \?L8
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L8
	CALL AUDA-SPEAKS
	PRINTR """I'm getting real angry. How long are you gonna wait?"""
?L8:	EQUAL? CAR-GONE,45 \?L11
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L11
	CALL AUDA-SPEAKS
	PRINTR """When that robot gets out of that car, I'm going to dismantle the little bugger.""
""You'll have to stand in line. My boredom factor is real low."""
?L11:	EQUAL? CAR-GONE,75 \FALSE
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L15
	CALL AUDA-SPEAKS
	PRINTI """I'm tired of waiting around, man. Let's go pull his plug and get this thing over with.""
""But what about his clone?""
""Forget it. We'll put everything on manual override and take care of this later. Too many people are at stake here. Okay?""
""Okay. Lead on."""
	CRLF
?L15:	SET 'PR-NUMBER,7
	CALL SET-GOAL,PEOPLE,CPU-ROOM
	CALL INT,I-CAR-WAIT >STACK
	PUT STACK,0,0
	RTRUE

	.FUNCT I-KILL,TEMP
	MOVE PEOPLE,HALL-END
	MOVE CAR,HALL-END
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L1
	CALL AUDA-SPEAKS
	CALL ROBOT-TELL,STR?299
?L1:	CALL ROBOT-THERE?,WALDO >STACK
	ZERO? STACK /?L4
	SET 'TEMP,WINNER
	CALL CHANGE-WINNER,WALDO,1
	CALL ROBOT-TELL,STR?300,0
	CALL NDESC,PEOPLE
	PRINTI " are holding another thing like themselves between them."
	CRLF
	CALL CHANGE-WINNER,TEMP,1
	JUMP ?L11
?L4:	CALL ROBOT-THERE?,SENSA >STACK
	ZERO? STACK /?L8
	PRINTI "SENSA: Sensory inputs detect a third life form."
	CRLF
	JUMP ?L11
?L8:	CALL ROBOT-THERE?,POET >STACK
	ZERO? STACK /?L11
	PRINTI "POET: Here come da clone, here come da clone."
	CRLF
?L11:	SET 'PR-NUMBER,5
	CALL SET-GOAL,PEOPLE,CPU-ROOM >STACK
	RSTACK

	.FUNCT PARRIVE5
	CRLF
	PRINTI "As the door swings open you are blinded by intense light and incredible pain. Just before everything overloads and you fade from existence, you can make out the shapes of three humans, one of them holding onto the door of the cylinder, another of them looking exactly like you, and then everything goes dark."
	CRLF
	CALL PRINT-ID,STR?301
	QUIT

	.FUNCT I-CHASEAUDA,TEMP,TWINNER
	INC 'TAKE-BACK
	EQUAL? TAKE-BACK,1 \?L1
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L3
	CALL AUDA-SPEAKS
	PRINTI """Give me that, you little devil!""
""That robot's a thief! Let's get it!"""
	CRLF
?L3:	CALL ROBOT-THERE?,WALDO >STACK
	ZERO? STACK /?L8
	CRLF
	PRINTI "WALDO: The mobile devices are waving their extensions madly. I think I'm in trouble."
	CRLF
	CALL PRINT-ID,STR?302
	RFALSE
?L8:	CALL ROBOT-THERE?,SENSA >STACK
	ZERO? STACK /?L12
	CRLF
	PRINTI "SENSA: The air in this area has become highly electrified, charged by the creatures."
	CRLF
	CALL PRINT-ID,STR?303
	RFALSE
?L12:	CALL ROBOT-THERE?,POET >STACK
	ZERO? STACK /FALSE
	CRLF
	PRINTI "POET: I believe the Creators have caught an extension in the cookie jar. Better take it on the lam, and pronto."
	CRLF
	RFALSE
?L1:	EQUAL? TAKE-BACK,2 /FALSE
	EQUAL? TAKE-BACK,3 \?L20
	CALL GOAL?,RTHIEF >TEMP
	ZERO? TEMP /?L21
	CALL SET-GOAL,PEOPLE,TEMP
	JUMP ?L23
?L21:	LOC RTHIEF >STACK
	CALL SET-GOAL,PEOPLE,STACK
?L23:	SET 'PR-NUMBER,9
	SET 'CHASING-THIEF,1
	RFALSE
?L20:	IN? TOOLBAG,RTHIEF /?L24
	LOC TOOLBAG >STACK
	IN? PEOPLE,STACK \?L25
	MOVE TOOLBAG,PEOPLE
	SET 'PR-NUMBER,3
	CALL SET-GOAL,PEOPLE,INNER-CORE
	CALL INT,I-CHASEAUDA >STACK
	PUT STACK,0,0
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L27
	CALL AUDA-SPEAKS
	PRINTI """Here's the toolbag. Looks like the little 'bot dropped it.""
""Just as well. Let's get on with this."""
	CRLF
?L27:	SET 'CHASING-THIEF,0
	RETURN CHASING-THIEF
?L25:	IN? TOOLBAG,IRIS \?L32
	SET 'RTHIEF,IRIS
	RFALSE
?L32:	IN? TOOLBAG,WALDO \?L33
	SET 'RTHIEF,WALDO
	RFALSE
?L33:	IN? TOOLBAG,SENSA \?L34
	SET 'RTHIEF,SENSA
	RFALSE
?L34:	IN? TOOLBAG,AUDA \?L35
	SET 'RTHIEF,AUDA
	RFALSE
?L35:	IN? TOOLBAG,POET \?L36
	SET 'RTHIEF,POET
	RFALSE
?L36:	IN? TOOLBAG,WHIZ \?L37
	SET 'RTHIEF,WHIZ
	RFALSE
?L37:	LOC TOOLBAG >STACK
	IN? STACK,ROOMS \?L39
	LOC TOOLBAG >STACK
	CALL SET-GOAL,PEOPLE,STACK
	SET 'PR-NUMBER,9
	RFALSE
?L39:	SET 'PR-NUMBER,9
	CALL META-LOC,TOOLBAG >STACK
	CALL SET-GOAL,PEOPLE,STACK
	RFALSE
?L24:	IN? PEOPLE,CORRIDOR-4 \?L42
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L43
	CALL AUDA-SPEAKS
	PRINTI """Oh, wow, look at that! The mist is coming up through the grating!""
""Yeah. What's below this room? The Maintenance Area?""
""Yes. The cooling system for the Filtering Computers has a regulatory valve there.... Maybe that's what's wrong here.""
""What are you talking about?""
""This acid mist -- it could be what's causing all the trouble. Let's get back down there and turn the wheel, get the cooling system rerouted.""
""It's worth a try. If you're right, we won't have to pull this person's plug.""
""Well, let's go. We're wasting time."""
	CRLF
?L43:	CALL INT,I-CHASEAUDA >STACK
	PUT STACK,0,0
	CRLF
	IN? RTHIEF,CORRIDOR-4 \?L48
	MOVE TOOLBAG,PEOPLE
	GETP RTHIEF,P?ROBOT >STACK
	GET INTER-TBL,STACK >STACK
	PRINT STACK
	PRINTI " They've taken something from my extensions!"
	CRLF
	JUMP ?L52
?L48:	GETP RTHIEF,P?ROBOT >STACK
	GET INTER-TBL,STACK >STACK
	PRINT STACK
	PRINTI " The bag is melting!"
	CRLF
	REMOVE TOOLBAG
?L52:	CALL SET-GOAL,PEOPLE,FCMAINT
	SET 'PR-NUMBER,8
	SET 'CHASING-THIEF,0
	RETURN CHASING-THIEF
?L42:	LOC RTHIEF >STACK
	IN? PEOPLE,STACK \?L55
	SET 'CHASING-THIEF,0
	IN? PEOPLE,FCMAINT \?L56
	SET 'ACID-FIXED,1
	CALL SET-GOAL,PEOPLE,REC-AREA
	SET 'PR-NUMBER,6
	CALL INT,I-CHASEAUDA >STACK
	PUT STACK,0,0
	MOVE TOOLBAG,PEOPLE
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L58
	CALL AUDA-SPEAKS
	PRINTI """Hey -- Look at that! The pipes going up to the Filtering Computers have burst.""
""Yeah. Maybe the person in the cylinder isn't at fault....""
""Hmm. You could be right. Let's fix this and then see if things return to normal.""

AUDA: I can hear the sound of metal, like a wheel turning, and the hissing stop.

""That should take care of that leak. Let's go up to the Rec Area and wait for awhile.""
""Fine. Meanwhile, I'll get our toolbag back.""

AUDA: I hear footsteps as the talking mechanisms walk away."
	CRLF
?L58:	CALL ROBOT-THERE?,WALDO >STACK
	ZERO? STACK /?L63
	CRLF
	PRINTR "WALDO: I can detect the large, circular object high overhead turning."
?L63:	CALL ROBOT-THERE?,SENSA >STACK
	ZERO? STACK /?L67
	CRLF
	PRINTR "SENSA: I detect the flow within the pipes overhead stopping and the acid leak stopping, too."
?L67:	CALL ROBOT-THERE?,POET >STACK
	ZERO? STACK /FALSE
	CRLF
	PRINTR "POET: Here they come to save the day..."
?L56:	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L75
	CALL AUDA-SPEAKS
	PRINTI """We've got him now. He's cornered. Let's grab that tool bag and get on with this fiasco."""
	CRLF
?L75:	CRLF
	IN? TOOLBAG,RTHIEF \?L80
	SET 'TWINNER,WINNER
	CALL CHANGE-WINNER,RTHIEF,1
	CALL ROBOT-TELL,STR?304,0
	CALL NDESC,TOOLBAG
	PRINTI " from my extensions."
	CRLF
	CALL CHANGE-WINNER,TWINNER,1
?L80:	MOVE TOOLBAG,PEOPLE
	SET 'PR-NUMBER,3
	CALL SET-GOAL,PEOPLE,INNER-CORE
	CALL INT,I-CHASEAUDA >STACK
	PUT STACK,0,0
	RTRUE
?L55:	LOC RTHIEF >STACK
	CALL SET-GOAL,PEOPLE,STACK
	SET 'PR-NUMBER,9
	RFALSE

	.FUNCT PARRIVE6
	CALL QUEUE,I-STARCROSS,-1 >STACK
	PUT STACK,0,1
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /FALSE
	CALL AUDA-SPEAKS
	PRINTR """Let's play this game while we wait to see what's happening.""
""What's it called?""
""Starcross. Looks really good.""
""Okay."""

	.FUNCT I-STARCROSS
	INC 'PLAY-STARCROSS
	LESS? PLAY-STARCROSS,200 /FALSE
	CALL INT,I-STARCROSS >STACK
	PUT STACK,0,0
	CALL SET-GOAL,PEOPLE,INNER-CORE
	SET 'PR-NUMBER,3
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /FALSE
	CALL AUDA-SPEAKS
	PRINTR """I think we've waited long enough. This person in the cylinder isn't all together upstairs, if you know what I mean.""
""I do, and I agree. We've given him more than enough time. Let's yank the fool out of there immediately, then get the replacement clone.""
""No way. Procedure requires we get the replacement first, and that's what we're going to do. Now let's move."""

	.FUNCT PARRIVE7
	CRLF
	PRINTI "As the door swings open you are blinded by intense light and incredible pain. Just before everything overloads and you fade from existence, you can make out the shape of two figures outside, one of them holding onto the door of the cylinder, and then everything goes dark."
	CRLF
	CALL PRINT-ID,STR?305
	QUIT

	.FUNCT PARRIVE8
	SET 'ACID-FIXED,1
	CALL SET-GOAL,PEOPLE,REC-AREA
	SET 'PR-NUMBER,6
	CALL AUDA-HEARS? >STACK
	ZERO? STACK /?L1
	CALL AUDA-SPEAKS
	PRINTI """Hey -- Look at that! The pipes going up to the Filtering Computers have burst.""
""Yeah. Maybe the person in the cylinder isn't at fault....""
""Hmm. You could be right. Let's fix this and then give him some time.""

AUDA: I can hear the sound of metal, like a wheel turning, and the hissing stop.

""That should take care of that leak. Let's go up to the Rec Area and wait for awhile.""
""Fine.""

AUDA: I hear footsteps as the talking mechanisms walk away."
	CRLF
?L1:	CALL ROBOT-THERE?,WALDO >STACK
	ZERO? STACK /?L6
	CRLF
	PRINTR "WALDO: I can detect the circular object high overhead turning."
?L6:	CALL ROBOT-THERE?,SENSA >STACK
	ZERO? STACK /?L10
	CRLF
	PRINTR "SENSA: I detect the flow within the pipes overhead stopping and the acid leak stopping, too."
?L10:	CALL ROBOT-THERE?,POET >STACK
	ZERO? STACK /FALSE
	CRLF
	PRINTR "POET: Here they come to save the day..."

	.FUNCT PARRIVE9
	RFALSE

	.FUNCT V-CONFIGURE,COUNT=0,RBT,RM
	GRTR? MOVES,1 \?L1
	PRINTI "You may only configure the game on the first move. Consult the manual for details."
	CRLF
	RFALSE
?L1:	SET 'SETUP-MODE,1
	PRINTI "Pick your poison.
Specify the name of a location for each of the following robots or DEAD if you would like to have the robot start out non-functional."
	CRLF
?L8:	IGRTR? 'COUNT,6 /?L9
	SUB COUNT,1 >STACK
	GET NAME-TBL,STACK >RBT
?L13:	GET ROBOT-NAMES,COUNT >STACK
	PRINT STACK
	PRINTI " "
	CALL PARSER >STACK
	ZERO? STACK /?L17
	GET P-TABLE,1 >RM
	EQUAL? RM,UD-TUBE \?L19
	PUT DEADBOTS,COUNT,30
	FSET RBT,CUTBIT
	JUMP ?L8
?L19:	IN? RM,ROOMS \?L21
	EQUAL? RBT,IRIS \?L22
	CALL IRIS-ALLOWED?,RM >STACK
	ZERO? STACK \?L22
	PRINTI "IRIS cannot leave the Monitor and Supply Area."
	CRLF
	JUMP ?L13
?L22:	EQUAL? RM,CAR-AREA,BIO-INT /?L27
	EQUAL? RM,BIO-LAB,CRYOUNITS \?L26
?L27:	PRINTI "No robot is allowed to start in the Biological Areas."
	CRLF
	JUMP ?L13
?L26:	EQUAL? RM,HELL \?L30
	PRINTI "Come on. Get serious."
	CRLF
	JUMP ?L13
?L30:	MOVE RBT,RM
	JUMP ?L8
?L21:	PRINTI "Specify the name of a location or the word DEAD."
	CRLF
	JUMP ?L13
?L17:	PRINTI "Specify the name of a location or the word DEAD."
	CRLF
	JUMP ?L13
?L9:	PRINTI "Surface-side systems tremor at which cycle? (1-100) >"
	CALL READ-NUMBER,1,100 >STACK
	ZERO? STACK /?L9
	SET 'RTD-KILLS,P-NUMBER
	CALL QUEUE,I-TREMOR2,RTD-KILLS
?L41:	PRINTI "Cooling systems tremor at which cycle? (1-100) >"
	CALL READ-NUMBER,1,100 >STACK
	ZERO? STACK /?L41
	SET 'ACID-KILLS,P-NUMBER
	CALL QUEUE,I-TREMOR1,ACID-KILLS
?L48:	PRINTI "Humans arrive at which cycle? ("
	PRINTN ACID-KILLS
	PRINTI "-150) >"
	CALL READ-NUMBER,ACID-KILLS,150 >STACK
	ZERO? STACK /?L48
	SET 'PEOPLE-APPEAR,P-NUMBER
	CALL QUEUE,I-PEOPLE1,PEOPLE-APPEAR
	SET 'SETUP-MODE,0
	PRINTI "Configuration completed."
	CRLF
	CRLF
	CALL V-ALL-REPORT-LOC
	CALL INT,I-IRIS-HINTS >STACK
	PUT STACK,0,0
	CALL INT,I-AUDA-HINTS >STACK
	PUT STACK,0,0
	RTRUE

	.FUNCT READ-NUMBER,MN,MX
	READ P-INBUF,P-LEXV
	CALL NUMBER?,P-LEXSTART >STACK
	ZERO? STACK /?L1
	LESS? P-NUMBER,MN /?L3
	GRTR? P-NUMBER,MX \TRUE
?L3:	PRINTI "Enter a number between "
	PRINTN MN
	PRINTI " and "
	PRINTN MX
	PRINTI "."
	CRLF
	RFALSE
?L1:	PRINTI "Enter a number between "
	PRINTN MN
	PRINTI " and "
	PRINTN MX
	PRINTI "."
	CRLF
	RFALSE

	.FUNCT IRIS-ALLOWED?,RM
	EQUAL? RM,CPU-ROOM,SERVO-SYSTEMS,RTD-BANKS /TRUE
	EQUAL? RM,WEATHER-BANKS,SUPPLIES-SOUTH,SUPPLIES-MID /TRUE
	EQUAL? RM,SUPPLIES-NORTH \FALSE
	RTRUE

	.INSERT "suspended/suspended_str"
	.END
